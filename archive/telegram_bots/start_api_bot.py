#!/usr/bin/env python3
"""
–õ–∞—É–Ω—á–µ—Ä –¥–ª—è Ollama API Bot —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ API
"""

import os
import sys
import asyncio
import aiohttp
import subprocess
from pathlib import Path

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: export TELEGRAM_BOT_TOKEN='–≤–∞—à_—Ç–æ–∫–µ–Ω'")
        return False
    
    print(f"‚úÖ Telegram —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: {token[:10]}...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API URL
    api_url = os.getenv("API_BASE_URL", "http://localhost:8000")
    print(f"üì° API URL: {api_url}")
    
    return True

async def check_api_server(api_url="http://localhost:8000"):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ FastAPI —Å–µ—Ä–≤–µ—Ä–∞"""
    print(f"üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞: {api_url}")
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(f"{api_url}/api/v1/system/health", timeout=5) as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: {data['status']}")
                    print(f"   –í–µ—Ä—Å–∏—è: {data['api_version']}")
                    print(f"   –ú–µ—Ç—Ä–∏–∫–∏: {'–≤–∫–ª—é—á–µ–Ω—ã' if data['metrics_enabled'] else '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}")
                    return True
                else:
                    print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –æ—à–∏–±–∫–∞: {response.status}")
                    return False
    except asyncio.TimeoutError:
        print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (timeout)")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return False

async def check_ollama():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Ollama"""
    print("ü¶ô –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama...")
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get("http://localhost:11434/api/tags", timeout=5) as response:
                if response.status == 200:
                    data = await response.json()
                    models = [model['name'] for model in data.get('models', [])]
                    print(f"‚úÖ Ollama —Ä–∞–±–æ—Ç–∞–µ—Ç, –º–æ–¥–µ–ª–µ–π: {len(models)}")
                    if models:
                        print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏: {', '.join(models[:3])}")
                        if len(models) > 3:
                            print(f"   ... –∏ –µ—â—ë {len(models)-3}")
                    return True
                else:
                    print(f"‚ùå Ollama –æ—à–∏–±–∫–∞: {response.status}")
                    return False
    except Exception as e:
        print(f"‚ö†Ô∏è Ollama –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")
        print("   –ë–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ FastAPI fallback")
        return False

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    required = ['aiohttp', 'asyncio']
    missing = []
    
    for pkg in required:
        try:
            __import__(pkg)
            print(f"‚úÖ {pkg}")
        except ImportError:
            missing.append(pkg)
            print(f"‚ùå {pkg}")
    
    if missing:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {', '.join(missing)}")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install aiohttp")
        return False
    
    return True

def start_api_server():
    """–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üöÄ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª
        if not Path("test_api_simple.py").exists():
            print("‚ùå –§–∞–π–ª test_api_simple.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–µ
        process = subprocess.Popen([
            sys.executable, "test_api_simple.py"
        ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        print(f"‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
        print("   –ñ–¥—ë–º 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...")
        import time
        time.sleep(3)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ Ollama API Bot Launcher")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not check_environment():
        return 1
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if not check_dependencies():
        return 1
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    api_url = os.getenv("API_BASE_URL", "http://localhost:8000")
    api_ok = await check_api_server(api_url)
    
    if not api_ok:
        print("\nüí° –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å API —Å–µ—Ä–≤–µ—Ä...")
        if start_api_server():
            # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            await asyncio.sleep(2)
            api_ok = await check_api_server(api_url)
        
        if not api_ok:
            print("\n‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
            print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: python test_api_simple.py")
            return 1
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    await check_ollama()
    
    # 5. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    Path("logs").mkdir(exist_ok=True)
    Path("data/ollama_api_chat").mkdir(parents=True, exist_ok=True)
    print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")
    
    # 6. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    print("\nüöÄ –ó–∞–ø—É—Å–∫ Ollama API Bot...")
    print("=" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç –∏ –∑–∞–ø—É—Å–∫
        from ollama_api_bot import main as bot_main
        return await bot_main()
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–æ—Ç–∞: {e}")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ ollama_api_bot.py")
        return 1
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 0
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    if sys.version_info < (3, 7):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫
    exit_code = asyncio.run(main())
    sys.exit(exit_code) 