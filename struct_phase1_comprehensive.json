{
  "metadata": {
    "project_name": "llmstruct",
    "description": "Utility for generating structured JSON for codebases",
    "version": "2025-06-25T19:20:37.629296Z",
    "authors": [
      {
        "name": "Mikhail Stepanov",
        "github": "kpblcaoo",
        "email": "kpblcaoo@gmail.com"
      }
    ],
    "instructions": [
      "Follow best practices, warn if instructions conflict with them",
      "Preserve functionality, ensure idempotency",
      "Use attached struct.json for context and navigation",
      "Request missing modules or functions if needed",
      "Regenerate JSON for significant changes, track via Git and artifacts",
      "Use internal comments for descriptions, append brief summary"
    ],
    "goals": [],
    "stats": {
      "modules_count": 62,
      "functions_count": 290,
      "classes_count": 76,
      "call_edges_count": 1042
    },
    "artifact_id": "1fd275fc-6476-4940-862b-ad4f7509f4bd",
    "summary": "Structured JSON for llmstruct codebase",
    "tags": [
      "codebase",
      "automation"
    ],
    "folder_structure": [
      {
        "path": ".",
        "type": "directory",
        "uid": "dir:.",
        "uid_components": [
          "dir:",
          "dir:."
        ],
        "artifact_id": "750cd970-1fb3-9ec6-2b41-89d1eb8fa8fd",
        "metadata": {}
      },
      {
        "path": "ARCHIVE",
        "type": "directory",
        "uid": "dir:ARCHIVE",
        "uid_components": [
          "dir:ARCHIVE"
        ],
        "artifact_id": "1f37e7d6-7a76-7bb5-1b21-0ba14dda6a6d",
        "metadata": {}
      },
      {
        "path": "ARCHIVE/cli_argument_parser.py",
        "type": "file",
        "uid": "file:ARCHIVE/cli_argument_parser.py",
        "uid_components": [
          "file:ARCHIVE/cli_argument_parser",
          "file:ARCHIVE/cli_argument_parser.py"
        ],
        "artifact_id": "62fec171-7b90-5bdc-88b6-af8687890e75",
        "metadata": {}
      },
      {
        "path": "ARCHIVE/cli_commands.py",
        "type": "file",
        "uid": "file:ARCHIVE/cli_commands.py",
        "uid_components": [
          "file:ARCHIVE/cli_commands",
          "file:ARCHIVE/cli_commands.py"
        ],
        "artifact_id": "89fdb63e-4688-4fc7-1efd-0774be2f2553",
        "metadata": {}
      },
      {
        "path": "ARCHIVE/cli_config.py",
        "type": "file",
        "uid": "file:ARCHIVE/cli_config.py",
        "uid_components": [
          "file:ARCHIVE/cli_config",
          "file:ARCHIVE/cli_config.py"
        ],
        "artifact_id": "e5c9d074-417d-72b6-79c6-82711c048948",
        "metadata": {}
      },
      {
        "path": "ARCHIVE/cli_core.py",
        "type": "file",
        "uid": "file:ARCHIVE/cli_core.py",
        "uid_components": [
          "file:ARCHIVE/cli_core",
          "file:ARCHIVE/cli_core.py"
        ],
        "artifact_id": "2cff8220-4004-834d-8769-61ee6207f8c6",
        "metadata": {}
      },
      {
        "path": "ARCHIVE/cli_main_commands.py",
        "type": "file",
        "uid": "file:ARCHIVE/cli_main_commands.py",
        "uid_components": [
          "file:ARCHIVE/cli_main_commands",
          "file:ARCHIVE/cli_main_commands.py"
        ],
        "artifact_id": "55b8a81b-4c40-1656-9a67-be66f552b5b7",
        "metadata": {}
      },
      {
        "path": "ARCHIVE/cli_utils.py",
        "type": "file",
        "uid": "file:ARCHIVE/cli_utils.py",
        "uid_components": [
          "file:ARCHIVE/cli_utils",
          "file:ARCHIVE/cli_utils.py"
        ],
        "artifact_id": "20dfe978-9e6b-8b13-f212-63125a016409",
        "metadata": {}
      },
      {
        "path": "__init__.py",
        "type": "file",
        "uid": "file:__init__.py",
        "uid_components": [
          "file:__init__",
          "file:__init__.py"
        ],
        "artifact_id": "edc1f227-6180-ddd6-08d1-a68495af0dbe",
        "metadata": {}
      },
      {
        "path": "__main__.py",
        "type": "file",
        "uid": "file:__main__.py",
        "uid_components": [
          "file:__main__",
          "file:__main__.py"
        ],
        "artifact_id": "9cb14661-b930-066e-b686-b9e123345867",
        "metadata": {}
      },
      {
        "path": "api",
        "type": "directory",
        "uid": "dir:api",
        "uid_components": [
          "dir:api"
        ],
        "artifact_id": "05770fe3-af8d-f937-6530-098580735538",
        "metadata": {}
      },
      {
        "path": "api/__init__.py",
        "type": "file",
        "uid": "file:api/__init__.py",
        "uid_components": [
          "file:api/__init__",
          "file:api/__init__.py"
        ],
        "artifact_id": "99f8fc0e-bfe6-cfea-9441-5160671f6ba2",
        "metadata": {}
      },
      {
        "path": "api/app.py",
        "type": "file",
        "uid": "file:api/app.py",
        "uid_components": [
          "file:api/app",
          "file:api/app.py"
        ],
        "artifact_id": "92817f70-6931-187b-51af-d985f3ccefed",
        "metadata": {}
      },
      {
        "path": "api/config.py",
        "type": "file",
        "uid": "file:api/config.py",
        "uid_components": [
          "file:api/config",
          "file:api/config.py"
        ],
        "artifact_id": "352ac8b4-be7e-3840-2418-53e55a80f227",
        "metadata": {}
      },
      {
        "path": "api/middleware",
        "type": "directory",
        "uid": "dir:api/middleware",
        "uid_components": [
          "dir:api/middleware"
        ],
        "artifact_id": "eb0a7af6-6bd2-9bca-e721-157464908500",
        "metadata": {}
      },
      {
        "path": "api/middleware/__init__.py",
        "type": "file",
        "uid": "file:api/middleware/__init__.py",
        "uid_components": [
          "file:api/middleware/__init__",
          "file:api/middleware/__init__.py"
        ],
        "artifact_id": "67b355da-2268-f342-43b3-f5554bdb25b8",
        "metadata": {}
      },
      {
        "path": "api/middleware/logging.py",
        "type": "file",
        "uid": "file:api/middleware/logging.py",
        "uid_components": [
          "file:api/middleware/logging",
          "file:api/middleware/logging.py"
        ],
        "artifact_id": "7de6ed10-9f8d-31e0-6044-7e3c2bc01d28",
        "metadata": {}
      },
      {
        "path": "api/models",
        "type": "directory",
        "uid": "dir:api/models",
        "uid_components": [
          "dir:api/models"
        ],
        "artifact_id": "b6b1da3c-b27d-6232-00e0-8e741e3434f6",
        "metadata": {}
      },
      {
        "path": "api/models/__init__.py",
        "type": "file",
        "uid": "file:api/models/__init__.py",
        "uid_components": [
          "file:api/models/__init__",
          "file:api/models/__init__.py"
        ],
        "artifact_id": "9ebf74cd-db40-4daf-dff0-3faf0ce8ee5b",
        "metadata": {}
      },
      {
        "path": "api/models/requests.py",
        "type": "file",
        "uid": "file:api/models/requests.py",
        "uid_components": [
          "file:api/models/requests",
          "file:api/models/requests.py"
        ],
        "artifact_id": "b6daaa04-246d-d13d-411e-0b3b6f836db9",
        "metadata": {}
      },
      {
        "path": "api/models/responses.py",
        "type": "file",
        "uid": "file:api/models/responses.py",
        "uid_components": [
          "file:api/models/responses",
          "file:api/models/responses.py"
        ],
        "artifact_id": "becf5830-7766-f1df-546e-36bcfa995bf5",
        "metadata": {}
      },
      {
        "path": "api/routes",
        "type": "directory",
        "uid": "dir:api/routes",
        "uid_components": [
          "dir:api/routes"
        ],
        "artifact_id": "7c2429e7-3e90-3c87-32c2-643bb7c9166a",
        "metadata": {}
      },
      {
        "path": "api/routes/__init__.py",
        "type": "file",
        "uid": "file:api/routes/__init__.py",
        "uid_components": [
          "file:api/routes/__init__",
          "file:api/routes/__init__.py"
        ],
        "artifact_id": "6db72d2c-3e88-7f52-d723-850dbdfc23b2",
        "metadata": {}
      },
      {
        "path": "api/routes/chat.py",
        "type": "file",
        "uid": "file:api/routes/chat.py",
        "uid_components": [
          "file:api/routes/chat",
          "file:api/routes/chat.py"
        ],
        "artifact_id": "c0028b50-9d7e-2673-c2a0-4e3f1163033e",
        "metadata": {}
      },
      {
        "path": "api/routes/continue_adapter.py",
        "type": "file",
        "uid": "file:api/routes/continue_adapter.py",
        "uid_components": [
          "file:api/routes/continue_adapter",
          "file:api/routes/continue_adapter.py"
        ],
        "artifact_id": "07c863af-6574-3b23-c795-3803c0b6f258",
        "metadata": {}
      },
      {
        "path": "api/routes/system.py",
        "type": "file",
        "uid": "file:api/routes/system.py",
        "uid_components": [
          "file:api/routes/system",
          "file:api/routes/system.py"
        ],
        "artifact_id": "861d7e64-20f1-29a8-87ae-a2735da008b5",
        "metadata": {}
      },
      {
        "path": "api/services",
        "type": "directory",
        "uid": "dir:api/services",
        "uid_components": [
          "dir:api/services"
        ],
        "artifact_id": "a0d868a7-e96b-f41b-a879-9e6e11a3e872",
        "metadata": {}
      },
      {
        "path": "api/services/__init__.py",
        "type": "file",
        "uid": "file:api/services/__init__.py",
        "uid_components": [
          "file:api/services/__init__",
          "file:api/services/__init__.py"
        ],
        "artifact_id": "b594f61e-a67f-89d0-e3a5-acba057d6acf",
        "metadata": {}
      },
      {
        "path": "api/services/chat_session.py",
        "type": "file",
        "uid": "file:api/services/chat_session.py",
        "uid_components": [
          "file:api/services/chat_session",
          "file:api/services/chat_session.py"
        ],
        "artifact_id": "4c1eb262-9e11-dfb7-1dd5-3bf97dde4e16",
        "metadata": {}
      },
      {
        "path": "api/services/cli_bridge.py",
        "type": "file",
        "uid": "file:api/services/cli_bridge.py",
        "uid_components": [
          "file:api/services/cli_bridge",
          "file:api/services/cli_bridge.py"
        ],
        "artifact_id": "45b719ea-d784-cfd6-2b92-44afe14a0e6b",
        "metadata": {}
      },
      {
        "path": "api/services/llm_service.py",
        "type": "file",
        "uid": "file:api/services/llm_service.py",
        "uid_components": [
          "file:api/services/llm_service",
          "file:api/services/llm_service.py"
        ],
        "artifact_id": "7ce8b212-4511-7554-3947-491d7aa16652",
        "metadata": {}
      },
      {
        "path": "cache.py",
        "type": "file",
        "uid": "file:cache.py",
        "uid_components": [
          "file:cache",
          "file:cache.py"
        ],
        "artifact_id": "58a2f74a-a7ed-558f-640c-54bc5a8dfd54",
        "metadata": {}
      },
      {
        "path": "cli.py",
        "type": "file",
        "uid": "file:cli.py",
        "uid_components": [
          "file:cli",
          "file:cli.py"
        ],
        "artifact_id": "f54af289-2d02-40da-704d-edd91c4a5ba6",
        "metadata": {}
      },
      {
        "path": "core",
        "type": "directory",
        "uid": "dir:core",
        "uid_components": [
          "dir:core"
        ],
        "artifact_id": "9a6d2103-9ec8-06f7-ee2c-dee70cfc5f8f",
        "metadata": {}
      },
      {
        "path": "core/__init__.py",
        "type": "file",
        "uid": "file:core/__init__.py",
        "uid_components": [
          "file:core/__init__",
          "file:core/__init__.py"
        ],
        "artifact_id": "ced65edd-ea88-180f-6db3-749f8f6f0386",
        "metadata": {}
      },
      {
        "path": "core/json_structure.py",
        "type": "file",
        "uid": "file:core/json_structure.py",
        "uid_components": [
          "file:core/json_structure",
          "file:core/json_structure.py"
        ],
        "artifact_id": "8baac931-e44c-03dc-dd79-7d832031b4db",
        "metadata": {}
      },
      {
        "path": "core/schema_validation.py",
        "type": "file",
        "uid": "file:core/schema_validation.py",
        "uid_components": [
          "file:core/schema_validation",
          "file:core/schema_validation.py"
        ],
        "artifact_id": "c596963f-a54b-78af-8998-3d461b423c7f",
        "metadata": {}
      },
      {
        "path": "core/summary_system.py",
        "type": "file",
        "uid": "file:core/summary_system.py",
        "uid_components": [
          "file:core/summary_system",
          "file:core/summary_system.py"
        ],
        "artifact_id": "2a14de1f-4f8b-5a87-4a98-039d260f32c3",
        "metadata": {}
      },
      {
        "path": "core/uid_generator.py",
        "type": "file",
        "uid": "file:core/uid_generator.py",
        "uid_components": [
          "file:core/uid_generator",
          "file:core/uid_generator.py"
        ],
        "artifact_id": "25b552f1-7db3-654e-fd0c-356f7db5f408",
        "metadata": {}
      },
      {
        "path": "generators",
        "type": "directory",
        "uid": "dir:generators",
        "uid_components": [
          "dir:generators"
        ],
        "artifact_id": "c2ce8e5b-2fe2-5741-9984-cb27084c63e2",
        "metadata": {}
      },
      {
        "path": "generators/__init__.py",
        "type": "file",
        "uid": "file:generators/__init__.py",
        "uid_components": [
          "file:generators/__init__",
          "file:generators/__init__.py"
        ],
        "artifact_id": "cade0ec7-6bb6-3d94-def5-df88a39e6fff",
        "metadata": {}
      },
      {
        "path": "generators/go_json_generator.py",
        "type": "file",
        "uid": "file:generators/go_json_generator.py",
        "uid_components": [
          "file:generators/go_json_generator",
          "file:generators/go_json_generator.py"
        ],
        "artifact_id": "e1d58d66-971c-e7e6-6a07-471460e7f167",
        "metadata": {}
      },
      {
        "path": "generators/json_generator.py",
        "type": "file",
        "uid": "file:generators/json_generator.py",
        "uid_components": [
          "file:generators/json_generator",
          "file:generators/json_generator.py"
        ],
        "artifact_id": "48ce5f77-8718-f730-4303-f774fd9a2548",
        "metadata": {}
      },
      {
        "path": "json_selector.py",
        "type": "file",
        "uid": "file:json_selector.py",
        "uid_components": [
          "file:json_selector",
          "file:json_selector.py"
        ],
        "artifact_id": "a69040e8-9d75-8b28-79ae-36e7dab84e6e",
        "metadata": {}
      },
      {
        "path": "llm_client.py",
        "type": "file",
        "uid": "file:llm_client.py",
        "uid_components": [
          "file:llm_client",
          "file:llm_client.py"
        ],
        "artifact_id": "f0b98669-d9e9-dc00-559f-b02b4578de42",
        "metadata": {}
      },
      {
        "path": "modules",
        "type": "directory",
        "uid": "dir:modules",
        "uid_components": [
          "dir:modules"
        ],
        "artifact_id": "90d3c2d3-505e-5dcb-39cb-18f6a7139f7c",
        "metadata": {}
      },
      {
        "path": "modules/cli",
        "type": "directory",
        "uid": "dir:modules/cli",
        "uid_components": [
          "dir:modules/cli"
        ],
        "artifact_id": "e1cdd786-b9f5-a830-28a0-08c89222d5ba",
        "metadata": {}
      },
      {
        "path": "modules/cli/__init__.py",
        "type": "file",
        "uid": "file:modules/cli/__init__.py",
        "uid_components": [
          "file:modules/cli/__init__",
          "file:modules/cli/__init__.py"
        ],
        "artifact_id": "3ec1715f-8ac3-2458-f00a-90169c95cca3",
        "metadata": {}
      },
      {
        "path": "modules/cli/analyze_duplicates.py",
        "type": "file",
        "uid": "file:modules/cli/analyze_duplicates.py",
        "uid_components": [
          "file:modules/cli/analyze_duplicates",
          "file:modules/cli/analyze_duplicates.py"
        ],
        "artifact_id": "42623279-e7d0-24fb-016e-c53bc01ab176",
        "metadata": {}
      },
      {
        "path": "modules/cli/audit.py",
        "type": "file",
        "uid": "file:modules/cli/audit.py",
        "uid_components": [
          "file:modules/cli/audit",
          "file:modules/cli/audit.py"
        ],
        "artifact_id": "71d52ec5-28d7-e228-fb07-99597be48888",
        "metadata": {}
      },
      {
        "path": "modules/cli/context.py",
        "type": "file",
        "uid": "file:modules/cli/context.py",
        "uid_components": [
          "file:modules/cli/context",
          "file:modules/cli/context.py"
        ],
        "artifact_id": "b46dfb6e-2da8-8bb7-eb19-d7eac01a791c",
        "metadata": {}
      },
      {
        "path": "modules/cli/copilot.py",
        "type": "file",
        "uid": "file:modules/cli/copilot.py",
        "uid_components": [
          "file:modules/cli/copilot",
          "file:modules/cli/copilot.py"
        ],
        "artifact_id": "1329ca05-08c2-599f-b574-409183aa9102",
        "metadata": {}
      },
      {
        "path": "modules/cli/dogfood.py",
        "type": "file",
        "uid": "file:modules/cli/dogfood.py",
        "uid_components": [
          "file:modules/cli/dogfood",
          "file:modules/cli/dogfood.py"
        ],
        "artifact_id": "74a638a0-747d-c39d-5599-f5787a0dbeec",
        "metadata": {}
      },
      {
        "path": "modules/cli/epic.py",
        "type": "file",
        "uid": "file:modules/cli/epic.py",
        "uid_components": [
          "file:modules/cli/epic",
          "file:modules/cli/epic.py"
        ],
        "artifact_id": "070a432c-2d2b-cca3-d3d1-89a129de60ff",
        "metadata": {}
      },
      {
        "path": "modules/cli/handlers.py",
        "type": "file",
        "uid": "file:modules/cli/handlers.py",
        "uid_components": [
          "file:modules/cli/handlers",
          "file:modules/cli/handlers.py"
        ],
        "artifact_id": "d97cd2b3-8d9a-f046-836b-9da53676afc3",
        "metadata": {}
      },
      {
        "path": "modules/cli/handlers_legacy.py",
        "type": "file",
        "uid": "file:modules/cli/handlers_legacy.py",
        "uid_components": [
          "file:modules/cli/handlers_legacy",
          "file:modules/cli/handlers_legacy.py"
        ],
        "artifact_id": "ae22991d-af93-8190-6720-e89578810b72",
        "metadata": {}
      },
      {
        "path": "modules/cli/parse.py",
        "type": "file",
        "uid": "file:modules/cli/parse.py",
        "uid_components": [
          "file:modules/cli/parse",
          "file:modules/cli/parse.py"
        ],
        "artifact_id": "3c3b393b-a17c-fab7-641d-3a60ef4da793",
        "metadata": {}
      },
      {
        "path": "modules/cli/query.py",
        "type": "file",
        "uid": "file:modules/cli/query.py",
        "uid_components": [
          "file:modules/cli/query",
          "file:modules/cli/query.py"
        ],
        "artifact_id": "4dd3abfb-4cb1-6297-b52a-5913f35bd454",
        "metadata": {}
      },
      {
        "path": "modules/cli/review.py",
        "type": "file",
        "uid": "file:modules/cli/review.py",
        "uid_components": [
          "file:modules/cli/review",
          "file:modules/cli/review.py"
        ],
        "artifact_id": "8a47fbfb-312d-0c86-0ea1-83d3f7b6e16b",
        "metadata": {}
      },
      {
        "path": "modules/cli/utils.py",
        "type": "file",
        "uid": "file:modules/cli/utils.py",
        "uid_components": [
          "file:modules/cli/utils",
          "file:modules/cli/utils.py"
        ],
        "artifact_id": "7737f584-96a5-452d-23ea-9503a1779f7f",
        "metadata": {}
      },
      {
        "path": "modules/commands",
        "type": "directory",
        "uid": "dir:modules/commands",
        "uid_components": [
          "dir:modules/commands"
        ],
        "artifact_id": "514e5def-1786-4be7-808b-cd087e9a0451",
        "metadata": {}
      },
      {
        "path": "modules/commands/__init__.py",
        "type": "file",
        "uid": "file:modules/commands/__init__.py",
        "uid_components": [
          "file:modules/commands/__init__",
          "file:modules/commands/__init__.py"
        ],
        "artifact_id": "a100ed27-c144-753c-eb6a-878ba6619ce2",
        "metadata": {}
      },
      {
        "path": "modules/commands/metrics.py",
        "type": "file",
        "uid": "file:modules/commands/metrics.py",
        "uid_components": [
          "file:modules/commands/metrics",
          "file:modules/commands/metrics.py"
        ],
        "artifact_id": "1d1d5291-2a2b-6546-9fd2-f613193b69e0",
        "metadata": {}
      },
      {
        "path": "modules/commands/queue.py",
        "type": "file",
        "uid": "file:modules/commands/queue.py",
        "uid_components": [
          "file:modules/commands/queue",
          "file:modules/commands/queue.py"
        ],
        "artifact_id": "0a412319-8289-f7c8-0c54-62b8b7b632c9",
        "metadata": {}
      },
      {
        "path": "modules/commands/services.py",
        "type": "file",
        "uid": "file:modules/commands/services.py",
        "uid_components": [
          "file:modules/commands/services",
          "file:modules/commands/services.py"
        ],
        "artifact_id": "2b010fe2-413b-4daf-8882-24df22c50f37",
        "metadata": {}
      },
      {
        "path": "parsers",
        "type": "directory",
        "uid": "dir:parsers",
        "uid_components": [
          "dir:parsers"
        ],
        "artifact_id": "139c74dc-bee7-8301-92db-5e25d758f6f2",
        "metadata": {}
      },
      {
        "path": "parsers/__init__.py",
        "type": "file",
        "uid": "file:parsers/__init__.py",
        "uid_components": [
          "file:parsers/__init__",
          "file:parsers/__init__.py"
        ],
        "artifact_id": "4295026f-2ea7-ba98-e067-ced77f5d2aa4",
        "metadata": {}
      },
      {
        "path": "parsers/go_analyzer.py",
        "type": "file",
        "uid": "file:parsers/go_analyzer.py",
        "uid_components": [
          "file:parsers/go_analyzer",
          "file:parsers/go_analyzer.py"
        ],
        "artifact_id": "060941b0-e780-7fb2-138c-45b881539f20",
        "metadata": {}
      },
      {
        "path": "parsers/javascript_parser.py",
        "type": "file",
        "uid": "file:parsers/javascript_parser.py",
        "uid_components": [
          "file:parsers/javascript_parser",
          "file:parsers/javascript_parser.py"
        ],
        "artifact_id": "86647433-c19a-d412-f424-dcdea203c128",
        "metadata": {}
      },
      {
        "path": "parsers/python_parser.py",
        "type": "file",
        "uid": "file:parsers/python_parser.py",
        "uid_components": [
          "file:parsers/python_parser",
          "file:parsers/python_parser.py"
        ],
        "artifact_id": "86416771-4144-9bda-6e25-db85c420df0a",
        "metadata": {}
      },
      {
        "path": "parsers/universal_converter.py",
        "type": "file",
        "uid": "file:parsers/universal_converter.py",
        "uid_components": [
          "file:parsers/universal_converter",
          "file:parsers/universal_converter.py"
        ],
        "artifact_id": "6d50b867-a6d2-8152-8c82-b504ead483d7",
        "metadata": {}
      },
      {
        "path": "self_run.py",
        "type": "file",
        "uid": "file:self_run.py",
        "uid_components": [
          "file:self_run",
          "file:self_run.py"
        ],
        "artifact_id": "561da479-3aff-8098-5f6d-2cc16cd0d1f9",
        "metadata": {}
      },
      {
        "path": "templates",
        "type": "directory",
        "uid": "dir:templates",
        "uid_components": [
          "dir:templates"
        ],
        "artifact_id": "995487eb-172a-e9be-fa5f-c39c855b923c",
        "metadata": {}
      },
      {
        "path": "templates/__init__.py",
        "type": "file",
        "uid": "file:templates/__init__.py",
        "uid_components": [
          "file:templates/__init__",
          "file:templates/__init__.py"
        ],
        "artifact_id": "b1ebd646-b376-b1b0-06ce-b0dd3bb12cc3",
        "metadata": {}
      },
      {
        "path": "validators",
        "type": "directory",
        "uid": "dir:validators",
        "uid_components": [
          "dir:validators"
        ],
        "artifact_id": "53f82eb8-57d8-4336-95cc-384d887e52d1",
        "metadata": {}
      },
      {
        "path": "validators/__init__.py",
        "type": "file",
        "uid": "file:validators/__init__.py",
        "uid_components": [
          "file:validators/__init__",
          "file:validators/__init__.py"
        ],
        "artifact_id": "a28b35be-0706-0626-8d53-2ed7cfac91a2",
        "metadata": {}
      },
      {
        "path": "validators/json_validator.py",
        "type": "file",
        "uid": "file:validators/json_validator.py",
        "uid_components": [
          "file:validators/json_validator",
          "file:validators/json_validator.py"
        ],
        "artifact_id": "5e259dad-f5df-564e-ec0e-6834eadd6207",
        "metadata": {}
      }
    ],
    "structure_version": "2.1",
    "enhancements": [
      "hierarchical_organization",
      "built_in_metrics",
      "markdown_anchors",
      "uid_system"
    ]
  },
  "toc": [
    {
      "module_id": "json_selector",
      "path": "json_selector.py",
      "category": "core",
      "functions": 2,
      "classes": 0,
      "summary": "",
      "uid": "json_selector",
      "uid_components": [
        "json_selector"
      ],
      "uid_type": "module",
      "artifact_id": "dfc4d43e-5cb8-8684-2f0c-fa315e73ab5f",
      "markdown_anchor": {
        "id": "json_selector",
        "title": "Module: json_selector",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: json_selector](#json_selector)",
        "html_anchor": "<a id=\"json_selector\"></a>"
      }
    },
    {
      "module_id": "__main__",
      "path": "__main__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "",
      "uid": "__main__",
      "uid_components": [
        "__main__"
      ],
      "uid_type": "module",
      "artifact_id": "543fa9ef-acae-37b4-c698-a94214cdf779",
      "markdown_anchor": {
        "id": "__main__",
        "title": "Module: __main__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: __main__](#__main__)",
        "html_anchor": "<a id=\"__main__\"></a>"
      }
    },
    {
      "module_id": "__init__",
      "path": "__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "",
      "uid": "__init__",
      "uid_components": [
        "__init__"
      ],
      "uid_type": "module",
      "artifact_id": "2eacefd9-a69c-9d85-8e68-ad3e94691bf9",
      "markdown_anchor": {
        "id": "__init__",
        "title": "Module: __init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: __init__](#__init__)",
        "html_anchor": "<a id=\"__init__\"></a>"
      }
    },
    {
      "module_id": "cache",
      "path": "cache.py",
      "category": "core",
      "functions": 6,
      "classes": 1,
      "summary": "",
      "uid": "cache",
      "uid_components": [
        "cache"
      ],
      "uid_type": "module",
      "artifact_id": "0fea6a13-c52b-4d47-2536-8f24b045ca84",
      "markdown_anchor": {
        "id": "cache",
        "title": "Module: cache",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: cache](#cache)",
        "html_anchor": "<a id=\"cache\"></a>"
      }
    },
    {
      "module_id": "self_run",
      "path": "self_run.py",
      "category": "core",
      "functions": 2,
      "classes": 0,
      "summary": "",
      "uid": "self_run",
      "uid_components": [
        "self_run"
      ],
      "uid_type": "module",
      "artifact_id": "8532a889-4743-4885-6d59-680f873fbf07",
      "markdown_anchor": {
        "id": "self_run",
        "title": "Module: self_run",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: self_run](#self_run)",
        "html_anchor": "<a id=\"self_run\"></a>"
      }
    },
    {
      "module_id": "llm_client",
      "path": "llm_client.py",
      "category": "core",
      "functions": 6,
      "classes": 1,
      "summary": "",
      "uid": "llm_client",
      "uid_components": [
        "llm_client"
      ],
      "uid_type": "module",
      "artifact_id": "f536aad3-4d5a-915c-8a0c-104fd50d02ef",
      "markdown_anchor": {
        "id": "llm_client",
        "title": "Module: llm_client",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: llm_client](#llm_client)",
        "html_anchor": "<a id=\"llm_client\"></a>"
      }
    },
    {
      "module_id": "cli",
      "path": "cli.py",
      "category": "core",
      "functions": 2,
      "classes": 0,
      "summary": "LLMStruct CLI - Main entry point for the command-line interface.",
      "uid": "cli",
      "uid_components": [
        "cli"
      ],
      "uid_type": "module",
      "artifact_id": "0898b227-30d5-7afc-d394-d8e4889ece4a",
      "markdown_anchor": {
        "id": "cli",
        "title": "Module: cli",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: cli](#cli)",
        "html_anchor": "<a id=\"cli\"></a>"
      }
    },
    {
      "module_id": "templates.__init__",
      "path": "templates/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "Templates for LLM prompts used in LLMStruct integration.",
      "uid": "templates.__init__",
      "uid_components": [
        "templates",
        "templates.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "7e5b5e3a-3b2d-81eb-0158-3876cd7516e0",
      "markdown_anchor": {
        "id": "templates-__init__",
        "title": "Module: templates.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: templates.__init__](#templates-__init__)",
        "html_anchor": "<a id=\"templates-__init__\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_argument_parser",
      "path": "ARCHIVE/cli_argument_parser.py",
      "category": "core",
      "functions": 3,
      "classes": 0,
      "summary": "CLI argument parsing for LLMStruct.",
      "uid": "ARCHIVE.cli_argument_parser",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_argument_parser"
      ],
      "uid_type": "module",
      "artifact_id": "de2bd5b3-aaa6-7470-69aa-a818128ef9a3",
      "markdown_anchor": {
        "id": "archive-cli_argument_parser",
        "title": "Module: ARCHIVE.cli_argument_parser",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_argument_parser](#archive-cli_argument_parser)",
        "html_anchor": "<a id=\"archive-cli_argument_parser\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_core",
      "path": "ARCHIVE/cli_core.py",
      "category": "core",
      "functions": 6,
      "classes": 1,
      "summary": "Core CLI functionality and main loop.",
      "uid": "ARCHIVE.cli_core",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_core"
      ],
      "uid_type": "module",
      "artifact_id": "b5309edf-9df3-07dc-a5ae-a7deb1ae3eb9",
      "markdown_anchor": {
        "id": "archive-cli_core",
        "title": "Module: ARCHIVE.cli_core",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_core](#archive-cli_core)",
        "html_anchor": "<a id=\"archive-cli_core\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_utils",
      "path": "ARCHIVE/cli_utils.py",
      "category": "core",
      "functions": 13,
      "classes": 1,
      "summary": "CLI utility functions.",
      "uid": "ARCHIVE.cli_utils",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_utils"
      ],
      "uid_type": "module",
      "artifact_id": "52571ae4-3b80-9e58-7c71-a1d431d45ed7",
      "markdown_anchor": {
        "id": "archive-cli_utils",
        "title": "Module: ARCHIVE.cli_utils",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_utils](#archive-cli_utils)",
        "html_anchor": "<a id=\"archive-cli_utils\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_main_commands",
      "path": "ARCHIVE/cli_main_commands.py",
      "category": "core",
      "functions": 12,
      "classes": 0,
      "summary": "Main CLI command handlers for LLMStruct.",
      "uid": "ARCHIVE.cli_main_commands",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_main_commands"
      ],
      "uid_type": "module",
      "artifact_id": "9c81e687-23e2-f149-3842-cc912c2cf619",
      "markdown_anchor": {
        "id": "archive-cli_main_commands",
        "title": "Module: ARCHIVE.cli_main_commands",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_main_commands](#archive-cli_main_commands)",
        "html_anchor": "<a id=\"archive-cli_main_commands\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_config",
      "path": "ARCHIVE/cli_config.py",
      "category": "core",
      "functions": 18,
      "classes": 1,
      "summary": "CLI configuration management.",
      "uid": "ARCHIVE.cli_config",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_config"
      ],
      "uid_type": "module",
      "artifact_id": "86f94751-8517-551a-a92b-e67fc6d08ac2",
      "markdown_anchor": {
        "id": "archive-cli_config",
        "title": "Module: ARCHIVE.cli_config",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_config](#archive-cli_config)",
        "html_anchor": "<a id=\"archive-cli_config\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_commands",
      "path": "ARCHIVE/cli_commands.py",
      "category": "core",
      "functions": 22,
      "classes": 1,
      "summary": "CLI command processing and handlers.",
      "uid": "ARCHIVE.cli_commands",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_commands"
      ],
      "uid_type": "module",
      "artifact_id": "6788421c-55c7-c89b-3bd3-4f66df8fc494",
      "markdown_anchor": {
        "id": "archive-cli_commands",
        "title": "Module: ARCHIVE.cli_commands",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_commands](#archive-cli_commands)",
        "html_anchor": "<a id=\"archive-cli_commands\"></a>"
      }
    },
    {
      "module_id": "api.__init__",
      "path": "api/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "LLMStruct FastAPI Module",
      "uid": "api.__init__",
      "uid_components": [
        "api",
        "api.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "2141f9ab-29bd-1320-531c-39b8ee35e3f3",
      "markdown_anchor": {
        "id": "api-__init__",
        "title": "Module: api.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.__init__](#api-__init__)",
        "html_anchor": "<a id=\"api-__init__\"></a>"
      }
    },
    {
      "module_id": "api.config",
      "path": "api/config.py",
      "category": "core",
      "functions": 0,
      "classes": 1,
      "summary": "Configuration management for LLMStruct FastAPI",
      "uid": "api.config",
      "uid_components": [
        "api",
        "api.config"
      ],
      "uid_type": "module",
      "artifact_id": "9f366aa4-017b-fddf-a2d2-1212f4b53671",
      "markdown_anchor": {
        "id": "api-config",
        "title": "Module: api.config",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.config](#api-config)",
        "html_anchor": "<a id=\"api-config\"></a>"
      }
    },
    {
      "module_id": "api.app",
      "path": "api/app.py",
      "category": "core",
      "functions": 1,
      "classes": 0,
      "summary": "Main FastAPI application for LLMStruct",
      "uid": "api.app",
      "uid_components": [
        "api",
        "api.app"
      ],
      "uid_type": "module",
      "artifact_id": "43425a1e-e61c-eb5b-1299-5defb87285f8",
      "markdown_anchor": {
        "id": "api-app",
        "title": "Module: api.app",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.app](#api-app)",
        "html_anchor": "<a id=\"api-app\"></a>"
      }
    },
    {
      "module_id": "core.summary_system",
      "path": "core/summary_system.py",
      "category": "core",
      "functions": 13,
      "classes": 5,
      "summary": "Smart Summary System for LLMStruct v2.1",
      "uid": "core.summary_system",
      "uid_components": [
        "core",
        "core.summary_system"
      ],
      "uid_type": "module",
      "artifact_id": "3e7fc7e2-796e-e3c1-797f-9c8d08707ca1",
      "markdown_anchor": {
        "id": "core-summary_system",
        "title": "Module: core.summary_system",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: core.summary_system](#core-summary_system)",
        "html_anchor": "<a id=\"core-summary_system\"></a>"
      }
    },
    {
      "module_id": "core.uid_generator",
      "path": "core/uid_generator.py",
      "category": "core",
      "functions": 6,
      "classes": 1,
      "summary": "UID Generator for LLMStruct v2.1 - Advanced UID System",
      "uid": "core.uid_generator",
      "uid_components": [
        "core",
        "core.uid_generator"
      ],
      "uid_type": "module",
      "artifact_id": "eb3a07b8-b2e7-0445-0322-58c58e7b2ece",
      "markdown_anchor": {
        "id": "core-uid_generator",
        "title": "Module: core.uid_generator",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: core.uid_generator](#core-uid_generator)",
        "html_anchor": "<a id=\"core-uid_generator\"></a>"
      }
    },
    {
      "module_id": "core.__init__",
      "path": "core/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "Core LLMStruct v2.1 components for advanced processing.",
      "uid": "core.__init__",
      "uid_components": [
        "core",
        "core.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "1a8516bf-0d1f-25b1-6fa3-b2be12288f6b",
      "markdown_anchor": {
        "id": "core-__init__",
        "title": "Module: core.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: core.__init__](#core-__init__)",
        "html_anchor": "<a id=\"core-__init__\"></a>"
      }
    },
    {
      "module_id": "core.schema_validation",
      "path": "core/schema_validation.py",
      "category": "core",
      "functions": 17,
      "classes": 9,
      "summary": "Schema Validation System for LLMStruct v2.1",
      "uid": "core.schema_validation",
      "uid_components": [
        "core",
        "core.schema_validation"
      ],
      "uid_type": "module",
      "artifact_id": "d6e53b97-045a-8c06-bfc5-40dac11c6227",
      "markdown_anchor": {
        "id": "core-schema_validation",
        "title": "Module: core.schema_validation",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: core.schema_validation](#core-schema_validation)",
        "html_anchor": "<a id=\"core-schema_validation\"></a>"
      }
    },
    {
      "module_id": "core.json_structure",
      "path": "core/json_structure.py",
      "category": "core",
      "functions": 11,
      "classes": 3,
      "summary": "Enhanced JSON Structure for LLMStruct v2.1",
      "uid": "core.json_structure",
      "uid_components": [
        "core",
        "core.json_structure"
      ],
      "uid_type": "module",
      "artifact_id": "ac3599fe-be69-efa3-dbff-3d2e7827a049",
      "markdown_anchor": {
        "id": "core-json_structure",
        "title": "Module: core.json_structure",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: core.json_structure](#core-json_structure)",
        "html_anchor": "<a id=\"core-json_structure\"></a>"
      }
    },
    {
      "module_id": "validators.__init__",
      "path": "validators/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "Validation modules for ensuring LLMStruct JSON complies with the schema.",
      "uid": "validators.__init__",
      "uid_components": [
        "validators",
        "validators.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "83c9968a-b3cf-4350-31da-19d9a2c06915",
      "markdown_anchor": {
        "id": "validators-__init__",
        "title": "Module: validators.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: validators.__init__](#validators-__init__)",
        "html_anchor": "<a id=\"validators-__init__\"></a>"
      }
    },
    {
      "module_id": "validators.json_validator",
      "path": "validators/json_validator.py",
      "category": "core",
      "functions": 2,
      "classes": 0,
      "summary": "",
      "uid": "validators.json_validator",
      "uid_components": [
        "validators",
        "validators.json_validator"
      ],
      "uid_type": "module",
      "artifact_id": "ae3d7c41-03a2-5e47-86bd-15b10b99898a",
      "markdown_anchor": {
        "id": "validators-json_validator",
        "title": "Module: validators.json_validator",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: validators.json_validator](#validators-json_validator)",
        "html_anchor": "<a id=\"validators-json_validator\"></a>"
      }
    },
    {
      "module_id": "parsers.universal_converter",
      "path": "parsers/universal_converter.py",
      "category": "core",
      "functions": 14,
      "classes": 3,
      "summary": "Universal Code Converter - Orchestrates all language parsers",
      "uid": "parsers.universal_converter",
      "uid_components": [
        "parsers",
        "parsers.universal_converter"
      ],
      "uid_type": "module",
      "artifact_id": "956805f9-00f8-f190-3a94-845b72b7b9e1",
      "markdown_anchor": {
        "id": "parsers-universal_converter",
        "title": "Module: parsers.universal_converter",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: parsers.universal_converter](#parsers-universal_converter)",
        "html_anchor": "<a id=\"parsers-universal_converter\"></a>"
      }
    },
    {
      "module_id": "parsers.python_parser",
      "path": "parsers/python_parser.py",
      "category": "core",
      "functions": 9,
      "classes": 1,
      "summary": "",
      "uid": "parsers.python_parser",
      "uid_components": [
        "parsers",
        "parsers.python_parser"
      ],
      "uid_type": "module",
      "artifact_id": "4a74a0f8-8fb2-8ca2-28f3-39fa29b8e02b",
      "markdown_anchor": {
        "id": "parsers-python_parser",
        "title": "Module: parsers.python_parser",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: parsers.python_parser](#parsers-python_parser)",
        "html_anchor": "<a id=\"parsers-python_parser\"></a>"
      }
    },
    {
      "module_id": "parsers.go_analyzer",
      "path": "parsers/go_analyzer.py",
      "category": "core",
      "functions": 8,
      "classes": 1,
      "summary": "Универсальный Go анализатор для Docker контейнера",
      "uid": "parsers.go_analyzer",
      "uid_components": [
        "parsers",
        "parsers.go_analyzer"
      ],
      "uid_type": "module",
      "artifact_id": "14239029-babb-8b21-4e13-a03eac8c6427",
      "markdown_anchor": {
        "id": "parsers-go_analyzer",
        "title": "Module: parsers.go_analyzer",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: parsers.go_analyzer](#parsers-go_analyzer)",
        "html_anchor": "<a id=\"parsers-go_analyzer\"></a>"
      }
    },
    {
      "module_id": "parsers.__init__",
      "path": "parsers/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "Language-specific parsers for extracting code structure data for LLMStruct JSON.",
      "uid": "parsers.__init__",
      "uid_components": [
        "parsers",
        "parsers.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "95e06b4e-000f-fbcd-5f8a-cb00e886cc6b",
      "markdown_anchor": {
        "id": "parsers-__init__",
        "title": "Module: parsers.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: parsers.__init__](#parsers-__init__)",
        "html_anchor": "<a id=\"parsers-__init__\"></a>"
      }
    },
    {
      "module_id": "parsers.javascript_parser",
      "path": "parsers/javascript_parser.py",
      "category": "core",
      "functions": 5,
      "classes": 1,
      "summary": "",
      "uid": "parsers.javascript_parser",
      "uid_components": [
        "parsers",
        "parsers.javascript_parser"
      ],
      "uid_type": "module",
      "artifact_id": "f6bc6a2b-cd38-fd20-eff3-7b5ce3c70bce",
      "markdown_anchor": {
        "id": "parsers-javascript_parser",
        "title": "Module: parsers.javascript_parser",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: parsers.javascript_parser](#parsers-javascript_parser)",
        "html_anchor": "<a id=\"parsers-javascript_parser\"></a>"
      }
    },
    {
      "module_id": "generators.go_json_generator",
      "path": "generators/go_json_generator.py",
      "category": "core",
      "functions": 4,
      "classes": 0,
      "summary": "",
      "uid": "generators.go_json_generator",
      "uid_components": [
        "generators",
        "generators.go_json_generator"
      ],
      "uid_type": "module",
      "artifact_id": "690fbcfd-37af-aae7-be65-bfd5569ad3c8",
      "markdown_anchor": {
        "id": "generators-go_json_generator",
        "title": "Module: generators.go_json_generator",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: generators.go_json_generator](#generators-go_json_generator)",
        "html_anchor": "<a id=\"generators-go_json_generator\"></a>"
      }
    },
    {
      "module_id": "generators.__init__",
      "path": "generators/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "Generator modules for creating LLMStruct JSON outputs from parsed code data.",
      "uid": "generators.__init__",
      "uid_components": [
        "generators",
        "generators.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "a9e95c4d-a1f0-d961-7076-d6ebc87e7b5e",
      "markdown_anchor": {
        "id": "generators-__init__",
        "title": "Module: generators.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: generators.__init__](#generators-__init__)",
        "html_anchor": "<a id=\"generators-__init__\"></a>"
      }
    },
    {
      "module_id": "generators.json_generator",
      "path": "generators/json_generator.py",
      "category": "core",
      "functions": 6,
      "classes": 0,
      "summary": "",
      "uid": "generators.json_generator",
      "uid_components": [
        "generators",
        "generators.json_generator"
      ],
      "uid_type": "module",
      "artifact_id": "2809b2d9-cd1b-3200-a59a-0bf46ced4497",
      "markdown_anchor": {
        "id": "generators-json_generator",
        "title": "Module: generators.json_generator",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: generators.json_generator](#generators-json_generator)",
        "html_anchor": "<a id=\"generators-json_generator\"></a>"
      }
    },
    {
      "module_id": "api.routes.system",
      "path": "api/routes/system.py",
      "category": "core",
      "functions": 5,
      "classes": 0,
      "summary": "System routes for LLMStruct FastAPI",
      "uid": "api.routes.system",
      "uid_components": [
        "api",
        "api.routes",
        "api.routes.system"
      ],
      "uid_type": "module",
      "artifact_id": "12ba74fb-ce49-2371-2ae7-2165e66984ff",
      "markdown_anchor": {
        "id": "api-routes-system",
        "title": "Module: api.routes.system",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.routes.system](#api-routes-system)",
        "html_anchor": "<a id=\"api-routes-system\"></a>"
      }
    },
    {
      "module_id": "api.routes.__init__",
      "path": "api/routes/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "Routes package for LLMStruct FastAPI",
      "uid": "api.routes.__init__",
      "uid_components": [
        "api",
        "api.routes",
        "api.routes.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "d0736668-b963-f05d-a46f-04d8c521ca8f",
      "markdown_anchor": {
        "id": "api-routes-__init__",
        "title": "Module: api.routes.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.routes.__init__](#api-routes-__init__)",
        "html_anchor": "<a id=\"api-routes-__init__\"></a>"
      }
    },
    {
      "module_id": "api.routes.chat",
      "path": "api/routes/chat.py",
      "category": "core",
      "functions": 9,
      "classes": 1,
      "summary": "Chat Routes",
      "uid": "api.routes.chat",
      "uid_components": [
        "api",
        "api.routes",
        "api.routes.chat"
      ],
      "uid_type": "module",
      "artifact_id": "860becb9-11cf-57e8-1684-a1748a699775",
      "markdown_anchor": {
        "id": "api-routes-chat",
        "title": "Module: api.routes.chat",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.routes.chat](#api-routes-chat)",
        "html_anchor": "<a id=\"api-routes-chat\"></a>"
      }
    },
    {
      "module_id": "api.routes.continue_adapter",
      "path": "api/routes/continue_adapter.py",
      "category": "core",
      "functions": 5,
      "classes": 2,
      "summary": "Continue API Adapter",
      "uid": "api.routes.continue_adapter",
      "uid_components": [
        "api",
        "api.routes",
        "api.routes.continue_adapter"
      ],
      "uid_type": "module",
      "artifact_id": "9f9ae652-58ea-a28f-e252-eb60670cb8c0",
      "markdown_anchor": {
        "id": "api-routes-continue_adapter",
        "title": "Module: api.routes.continue_adapter",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.routes.continue_adapter](#api-routes-continue_adapter)",
        "html_anchor": "<a id=\"api-routes-continue_adapter\"></a>"
      }
    },
    {
      "module_id": "api.middleware.__init__",
      "path": "api/middleware/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "Middleware package for LLMStruct FastAPI",
      "uid": "api.middleware.__init__",
      "uid_components": [
        "api",
        "api.middleware",
        "api.middleware.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "7731b3fd-507c-2cac-f6ae-59a0a1a17dae",
      "markdown_anchor": {
        "id": "api-middleware-__init__",
        "title": "Module: api.middleware.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.middleware.__init__](#api-middleware-__init__)",
        "html_anchor": "<a id=\"api-middleware-__init__\"></a>"
      }
    },
    {
      "module_id": "api.middleware.logging",
      "path": "api/middleware/logging.py",
      "category": "core",
      "functions": 1,
      "classes": 0,
      "summary": "Logging middleware for LLMStruct FastAPI",
      "uid": "api.middleware.logging",
      "uid_components": [
        "api",
        "api.middleware",
        "api.middleware.logging"
      ],
      "uid_type": "module",
      "artifact_id": "32aa4c95-9c32-ac22-1c0e-cc12db39cb58",
      "markdown_anchor": {
        "id": "api-middleware-logging",
        "title": "Module: api.middleware.logging",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.middleware.logging](#api-middleware-logging)",
        "html_anchor": "<a id=\"api-middleware-logging\"></a>"
      }
    },
    {
      "module_id": "api.services.llm_service",
      "path": "api/services/llm_service.py",
      "category": "core",
      "functions": 17,
      "classes": 4,
      "summary": "LLM Service",
      "uid": "api.services.llm_service",
      "uid_components": [
        "api",
        "api.services",
        "api.services.llm_service"
      ],
      "uid_type": "module",
      "artifact_id": "28585c00-d499-1e0e-4fc3-c527545a3bbc",
      "markdown_anchor": {
        "id": "api-services-llm_service",
        "title": "Module: api.services.llm_service",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.services.llm_service](#api-services-llm_service)",
        "html_anchor": "<a id=\"api-services-llm_service\"></a>"
      }
    },
    {
      "module_id": "api.services.__init__",
      "path": "api/services/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "Services package for LLMStruct FastAPI",
      "uid": "api.services.__init__",
      "uid_components": [
        "api",
        "api.services",
        "api.services.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "2098fa1a-1880-cdd9-84be-8b4c4b77b089",
      "markdown_anchor": {
        "id": "api-services-__init__",
        "title": "Module: api.services.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.services.__init__](#api-services-__init__)",
        "html_anchor": "<a id=\"api-services-__init__\"></a>"
      }
    },
    {
      "module_id": "api.services.cli_bridge",
      "path": "api/services/cli_bridge.py",
      "category": "core",
      "functions": 9,
      "classes": 2,
      "summary": "CLI Bridge Service",
      "uid": "api.services.cli_bridge",
      "uid_components": [
        "api",
        "api.services",
        "api.services.cli_bridge"
      ],
      "uid_type": "module",
      "artifact_id": "abfd4670-5ee5-a7b2-a042-ef3e6ae58d8f",
      "markdown_anchor": {
        "id": "api-services-cli_bridge",
        "title": "Module: api.services.cli_bridge",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.services.cli_bridge](#api-services-cli_bridge)",
        "html_anchor": "<a id=\"api-services-cli_bridge\"></a>"
      }
    },
    {
      "module_id": "api.services.chat_session",
      "path": "api/services/chat_session.py",
      "category": "core",
      "functions": 14,
      "classes": 2,
      "summary": "Chat Session Manager",
      "uid": "api.services.chat_session",
      "uid_components": [
        "api",
        "api.services",
        "api.services.chat_session"
      ],
      "uid_type": "module",
      "artifact_id": "3c529125-d303-1ce9-d43e-d75e68b73f1b",
      "markdown_anchor": {
        "id": "api-services-chat_session",
        "title": "Module: api.services.chat_session",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.services.chat_session](#api-services-chat_session)",
        "html_anchor": "<a id=\"api-services-chat_session\"></a>"
      }
    },
    {
      "module_id": "api.models.requests",
      "path": "api/models/requests.py",
      "category": "core",
      "functions": 0,
      "classes": 15,
      "summary": "Request models for LLMStruct FastAPI",
      "uid": "api.models.requests",
      "uid_components": [
        "api",
        "api.models",
        "api.models.requests"
      ],
      "uid_type": "module",
      "artifact_id": "48dd6594-c1e9-e156-5951-65bfb98ae87a",
      "markdown_anchor": {
        "id": "api-models-requests",
        "title": "Module: api.models.requests",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.models.requests](#api-models-requests)",
        "html_anchor": "<a id=\"api-models-requests\"></a>"
      }
    },
    {
      "module_id": "api.models.responses",
      "path": "api/models/responses.py",
      "category": "core",
      "functions": 0,
      "classes": 19,
      "summary": "Response models for LLMStruct FastAPI",
      "uid": "api.models.responses",
      "uid_components": [
        "api",
        "api.models",
        "api.models.responses"
      ],
      "uid_type": "module",
      "artifact_id": "1b8a21c4-14c8-0dfb-eeef-b95011f7f031",
      "markdown_anchor": {
        "id": "api-models-responses",
        "title": "Module: api.models.responses",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.models.responses](#api-models-responses)",
        "html_anchor": "<a id=\"api-models-responses\"></a>"
      }
    },
    {
      "module_id": "api.models.__init__",
      "path": "api/models/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "Pydantic models for LLMStruct FastAPI",
      "uid": "api.models.__init__",
      "uid_components": [
        "api",
        "api.models",
        "api.models.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "8e61fcfd-4302-dc53-b6c7-45376a339466",
      "markdown_anchor": {
        "id": "api-models-__init__",
        "title": "Module: api.models.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.models.__init__](#api-models-__init__)",
        "html_anchor": "<a id=\"api-models-__init__\"></a>"
      }
    },
    {
      "module_id": "modules.commands.metrics",
      "path": "modules/commands/metrics.py",
      "category": "core",
      "functions": 7,
      "classes": 0,
      "summary": "",
      "uid": "modules.commands.metrics",
      "uid_components": [
        "modules",
        "modules.commands",
        "modules.commands.metrics"
      ],
      "uid_type": "module",
      "artifact_id": "6b8e1c22-d3a4-aa67-1d7b-75053bf77ab8",
      "markdown_anchor": {
        "id": "modules-commands-metrics",
        "title": "Module: modules.commands.metrics",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.commands.metrics](#modules-commands-metrics)",
        "html_anchor": "<a id=\"modules-commands-metrics\"></a>"
      }
    },
    {
      "module_id": "modules.commands.services",
      "path": "modules/commands/services.py",
      "category": "core",
      "functions": 4,
      "classes": 0,
      "summary": "",
      "uid": "modules.commands.services",
      "uid_components": [
        "modules",
        "modules.commands",
        "modules.commands.services"
      ],
      "uid_type": "module",
      "artifact_id": "21aaf1a3-6542-925a-77e2-7dde980c16e3",
      "markdown_anchor": {
        "id": "modules-commands-services",
        "title": "Module: modules.commands.services",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.commands.services](#modules-commands-services)",
        "html_anchor": "<a id=\"modules-commands-services\"></a>"
      }
    },
    {
      "module_id": "modules.commands.__init__",
      "path": "modules/commands/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "",
      "uid": "modules.commands.__init__",
      "uid_components": [
        "modules",
        "modules.commands",
        "modules.commands.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "0dec485c-915d-a18f-e713-3bd6f3de8adc",
      "markdown_anchor": {
        "id": "modules-commands-__init__",
        "title": "Module: modules.commands.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.commands.__init__](#modules-commands-__init__)",
        "html_anchor": "<a id=\"modules-commands-__init__\"></a>"
      }
    },
    {
      "module_id": "modules.commands.queue",
      "path": "modules/commands/queue.py",
      "category": "core",
      "functions": 1,
      "classes": 0,
      "summary": "",
      "uid": "modules.commands.queue",
      "uid_components": [
        "modules",
        "modules.commands",
        "modules.commands.queue"
      ],
      "uid_type": "module",
      "artifact_id": "bb4ee01f-b499-bb4f-b901-96cdaddce8c2",
      "markdown_anchor": {
        "id": "modules-commands-queue",
        "title": "Module: modules.commands.queue",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.commands.queue](#modules-commands-queue)",
        "html_anchor": "<a id=\"modules-commands-queue\"></a>"
      }
    },
    {
      "module_id": "modules.cli.audit",
      "path": "modules/cli/audit.py",
      "category": "cli",
      "functions": 1,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.audit",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.audit"
      ],
      "uid_type": "module",
      "artifact_id": "78193442-798c-3039-8969-26103184cdb1",
      "markdown_anchor": {
        "id": "modules-cli-audit",
        "title": "Module: modules.cli.audit",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.audit](#modules-cli-audit)",
        "html_anchor": "<a id=\"modules-cli-audit\"></a>"
      }
    },
    {
      "module_id": "modules.cli.utils",
      "path": "modules/cli/utils.py",
      "category": "cli",
      "functions": 16,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.utils",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.utils"
      ],
      "uid_type": "module",
      "artifact_id": "0add91a5-3f17-0551-ef15-50666dc87f59",
      "markdown_anchor": {
        "id": "modules-cli-utils",
        "title": "Module: modules.cli.utils",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.utils](#modules-cli-utils)",
        "html_anchor": "<a id=\"modules-cli-utils\"></a>"
      }
    },
    {
      "module_id": "modules.cli.dogfood",
      "path": "modules/cli/dogfood.py",
      "category": "cli",
      "functions": 1,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.dogfood",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.dogfood"
      ],
      "uid_type": "module",
      "artifact_id": "ea6b87d7-40b8-682f-a9fe-f7a898588176",
      "markdown_anchor": {
        "id": "modules-cli-dogfood",
        "title": "Module: modules.cli.dogfood",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.dogfood](#modules-cli-dogfood)",
        "html_anchor": "<a id=\"modules-cli-dogfood\"></a>"
      }
    },
    {
      "module_id": "modules.cli.handlers_legacy",
      "path": "modules/cli/handlers_legacy.py",
      "category": "cli",
      "functions": 1,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.handlers_legacy",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.handlers_legacy"
      ],
      "uid_type": "module",
      "artifact_id": "395fdffd-9068-de81-e7af-d65d143c375e",
      "markdown_anchor": {
        "id": "modules-cli-handlers_legacy",
        "title": "Module: modules.cli.handlers_legacy",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.handlers_legacy](#modules-cli-handlers_legacy)",
        "html_anchor": "<a id=\"modules-cli-handlers_legacy\"></a>"
      }
    },
    {
      "module_id": "modules.cli.analyze_duplicates",
      "path": "modules/cli/analyze_duplicates.py",
      "category": "cli",
      "functions": 1,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.analyze_duplicates",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.analyze_duplicates"
      ],
      "uid_type": "module",
      "artifact_id": "d296e3f0-725f-1b1b-422c-786ce50e9d1f",
      "markdown_anchor": {
        "id": "modules-cli-analyze_duplicates",
        "title": "Module: modules.cli.analyze_duplicates",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.analyze_duplicates](#modules-cli-analyze_duplicates)",
        "html_anchor": "<a id=\"modules-cli-analyze_duplicates\"></a>"
      }
    },
    {
      "module_id": "modules.cli.__init__",
      "path": "modules/cli/__init__.py",
      "category": "cli",
      "functions": 0,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.__init__",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "f8a2ed32-3d3e-d70c-bbc5-c7001837823d",
      "markdown_anchor": {
        "id": "modules-cli-__init__",
        "title": "Module: modules.cli.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.__init__](#modules-cli-__init__)",
        "html_anchor": "<a id=\"modules-cli-__init__\"></a>"
      }
    },
    {
      "module_id": "modules.cli.review",
      "path": "modules/cli/review.py",
      "category": "cli",
      "functions": 1,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.review",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.review"
      ],
      "uid_type": "module",
      "artifact_id": "b592191d-da7a-55d2-3cd8-9ea2d38dbda6",
      "markdown_anchor": {
        "id": "modules-cli-review",
        "title": "Module: modules.cli.review",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.review](#modules-cli-review)",
        "html_anchor": "<a id=\"modules-cli-review\"></a>"
      }
    },
    {
      "module_id": "modules.cli.context",
      "path": "modules/cli/context.py",
      "category": "cli",
      "functions": 1,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.context",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.context"
      ],
      "uid_type": "module",
      "artifact_id": "5a425ae8-9fdf-55cd-f092-f60f4c9fc31d",
      "markdown_anchor": {
        "id": "modules-cli-context",
        "title": "Module: modules.cli.context",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.context](#modules-cli-context)",
        "html_anchor": "<a id=\"modules-cli-context\"></a>"
      }
    },
    {
      "module_id": "modules.cli.query",
      "path": "modules/cli/query.py",
      "category": "cli",
      "functions": 1,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.query",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.query"
      ],
      "uid_type": "module",
      "artifact_id": "bd5a581e-f512-0848-8424-b135cac79d5a",
      "markdown_anchor": {
        "id": "modules-cli-query",
        "title": "Module: modules.cli.query",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.query](#modules-cli-query)",
        "html_anchor": "<a id=\"modules-cli-query\"></a>"
      }
    },
    {
      "module_id": "modules.cli.copilot",
      "path": "modules/cli/copilot.py",
      "category": "cli",
      "functions": 1,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.copilot",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.copilot"
      ],
      "uid_type": "module",
      "artifact_id": "35f4555d-190b-7b25-34f3-7b931e443552",
      "markdown_anchor": {
        "id": "modules-cli-copilot",
        "title": "Module: modules.cli.copilot",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.copilot](#modules-cli-copilot)",
        "html_anchor": "<a id=\"modules-cli-copilot\"></a>"
      }
    },
    {
      "module_id": "modules.cli.parse",
      "path": "modules/cli/parse.py",
      "category": "cli",
      "functions": 1,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.parse",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.parse"
      ],
      "uid_type": "module",
      "artifact_id": "2d27c7fa-4728-2688-7dd3-c5d794db429d",
      "markdown_anchor": {
        "id": "modules-cli-parse",
        "title": "Module: modules.cli.parse",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.parse](#modules-cli-parse)",
        "html_anchor": "<a id=\"modules-cli-parse\"></a>"
      }
    },
    {
      "module_id": "modules.cli.epic",
      "path": "modules/cli/epic.py",
      "category": "cli",
      "functions": 3,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.epic",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.epic"
      ],
      "uid_type": "module",
      "artifact_id": "d38c62f5-4e1e-8b3a-502d-104702c388d1",
      "markdown_anchor": {
        "id": "modules-cli-epic",
        "title": "Module: modules.cli.epic",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.epic](#modules-cli-epic)",
        "html_anchor": "<a id=\"modules-cli-epic\"></a>"
      }
    },
    {
      "module_id": "modules.cli.handlers",
      "path": "modules/cli/handlers.py",
      "category": "cli",
      "functions": 2,
      "classes": 0,
      "summary": "",
      "uid": "modules.cli.handlers",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.handlers"
      ],
      "uid_type": "module",
      "artifact_id": "b3f8ea06-a189-b070-fd6c-be8a82e6e1cb",
      "markdown_anchor": {
        "id": "modules-cli-handlers",
        "title": "Module: modules.cli.handlers",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.handlers](#modules-cli-handlers)",
        "html_anchor": "<a id=\"modules-cli-handlers\"></a>"
      }
    }
  ],
  "modules": [
    {
      "module_id": "json_selector",
      "path": "json_selector.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "filter_json",
          "docstring": "Filter JSON data by key-value pair and select fields.",
          "line_range": [
            20,
            46
          ],
          "parameters": [
            "data",
            "filter_key",
            "filter_value",
            "fields"
          ],
          "decorators": [],
          "uid": "json_selector.filter_json",
          "uid_components": [
            "json_selector",
            "json_selector.filter_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Filter JSON data by key-value pair and select fields.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:29.933986",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "select_json",
          "docstring": "Load and filter JSON file, optionally parsing partially.",
          "line_range": [
            49,
            116
          ],
          "parameters": [
            "json_path",
            "filter_key",
            "filter_value",
            "fields",
            "partial"
          ],
          "decorators": [],
          "uid": "json_selector.select_json",
          "uid_components": [
            "json_selector",
            "json_selector.select_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Load and filter JSON file, optionally parsing partially.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:29.934009",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "filter_json": [
          "isinstance",
          "item.get",
          "data.get",
          "filtered.append"
        ],
        "select_json": [
          "filter_json",
          "filtered.append",
          "f.seek",
          "Path",
          "logging.error",
          "current_item.get",
          "prefix.startswith",
          "path.append",
          "open",
          "ijson.parse",
          "json_file.exists",
          "json.load"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "List",
        "Optional",
        "Path",
        "argparse",
        "ijson",
        "json",
        "logging",
        "pathlib",
        "typing"
      ],
      "hash": null,
      "uid": "json_selector",
      "uid_components": [
        "json_selector"
      ],
      "uid_type": "module",
      "artifact_id": "dfc4d43e-5cb8-8684-2f0c-fa315e73ab5f",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:29.933938",
          "confidence": 0.7,
          "cache_key": "0f02ef07"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 2,
        "lines_of_code": 20,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 11,
        "test_coverage": 0.0,
        "maintainability_index": 90
      },
      "markdown_anchor": {
        "id": "json_selector",
        "title": "Module: json_selector",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: json_selector](#json_selector)",
        "html_anchor": "<a id=\"json_selector\"></a>"
      }
    },
    {
      "module_id": "__main__",
      "path": "__main__.py",
      "category": "cli",
      "module_doc": "",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [
        "llmstruct.cli",
        "main"
      ],
      "hash": null,
      "uid": "__main__",
      "uid_components": [
        "__main__"
      ],
      "uid_type": "module",
      "artifact_id": "543fa9ef-acae-37b4-c698-a94214cdf779",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:29.934365",
          "confidence": 0.7,
          "cache_key": "e8007703"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 2,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "__main__",
        "title": "Module: __main__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: __main__](#__main__)",
        "html_anchor": "<a id=\"__main__\"></a>"
      }
    },
    {
      "module_id": "__init__",
      "path": "__init__.py",
      "category": "cli",
      "module_doc": "",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [
        "AISelfAwarenessCLIIntegration",
        "LLMClient",
        "SystemCapabilityDiscovery",
        "ai_cli_integration",
        "ai_self_awareness",
        "llm_client"
      ],
      "hash": null,
      "uid": "__init__",
      "uid_components": [
        "__init__"
      ],
      "uid_type": "module",
      "artifact_id": "2eacefd9-a69c-9d85-8e68-ad3e94691bf9",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:29.934590",
          "confidence": 0.7,
          "cache_key": "b7179c6f"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 6,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "__init__",
        "title": "Module: __init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: __init__](#__init__)",
        "html_anchor": "<a id=\"__init__\"></a>"
      }
    },
    {
      "module_id": "cache",
      "path": "cache.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "__init__",
          "docstring": "Initialize SQLite cache for JSON files.",
          "line_range": [
            21,
            25
          ],
          "parameters": [
            "self",
            "db_path"
          ],
          "decorators": [],
          "uid": "cache.__init__",
          "uid_components": [
            "cache",
            "cache.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize SQLite cache for JSON files.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:29.934892",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "create_tables",
          "docstring": "Create tables for metadata and file paths.",
          "line_range": [
            27,
            49
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "cache.create_tables",
          "uid_components": [
            "cache",
            "cache.create_tables"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create tables for metadata and file paths.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:29.934908",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "cache_json",
          "docstring": "Cache JSON metadata and store full file path.",
          "line_range": [
            51,
            90
          ],
          "parameters": [
            "self",
            "json_path",
            "artifact_id",
            "summary",
            "tags"
          ],
          "decorators": [],
          "uid": "cache.cache_json",
          "uid_components": [
            "cache",
            "cache.cache_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Cache JSON metadata and store full file path.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:29.934923",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_metadata",
          "docstring": "Retrieve metadata by artifact_id.",
          "line_range": [
            92,
            108
          ],
          "parameters": [
            "self",
            "artifact_id"
          ],
          "decorators": [],
          "uid": "cache.get_metadata",
          "uid_components": [
            "cache",
            "cache.get_metadata"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Retrieve metadata by artifact_id.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:29.934936",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_full_json",
          "docstring": "Load full JSON by artifact_id.",
          "line_range": [
            110,
            126
          ],
          "parameters": [
            "self",
            "artifact_id"
          ],
          "decorators": [],
          "uid": "cache.get_full_json",
          "uid_components": [
            "cache",
            "cache.get_full_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Load full JSON by artifact_id.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:29.934948",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "close",
          "docstring": "Close database connection.",
          "line_range": [
            128,
            130
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "cache.close",
          "uid_components": [
            "cache",
            "cache.close"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Close database connection.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:29.934959",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "JSONCache",
          "docstring": "",
          "line_range": [
            20,
            130
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "Initialize SQLite cache for JSON files.",
              "line_range": [
                21,
                25
              ],
              "parameters": [
                "self",
                "db_path"
              ],
              "uid": "cache.JSONCache.__init__",
              "uid_components": [
                "cache",
                "cache.JSONCache",
                "cache.JSONCache.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize SQLite cache for JSON files.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.629768",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "create_tables",
              "docstring": "Create tables for metadata and file paths.",
              "line_range": [
                27,
                49
              ],
              "parameters": [
                "self"
              ],
              "uid": "cache.JSONCache.create_tables",
              "uid_components": [
                "cache",
                "cache.JSONCache",
                "cache.JSONCache.create_tables"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Create tables for metadata and file paths.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.629799",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "cache_json",
              "docstring": "Cache JSON metadata and store full file path.",
              "line_range": [
                51,
                90
              ],
              "parameters": [
                "self",
                "json_path",
                "artifact_id",
                "summary",
                "tags"
              ],
              "uid": "cache.JSONCache.cache_json",
              "uid_components": [
                "cache",
                "cache.JSONCache",
                "cache.JSONCache.cache_json"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Cache JSON metadata and store full file path.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.629829",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_metadata",
              "docstring": "Retrieve metadata by artifact_id.",
              "line_range": [
                92,
                108
              ],
              "parameters": [
                "self",
                "artifact_id"
              ],
              "uid": "cache.JSONCache.get_metadata",
              "uid_components": [
                "cache",
                "cache.JSONCache",
                "cache.JSONCache.get_metadata"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Retrieve metadata by artifact_id.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.629856",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_full_json",
              "docstring": "Load full JSON by artifact_id.",
              "line_range": [
                110,
                126
              ],
              "parameters": [
                "self",
                "artifact_id"
              ],
              "uid": "cache.JSONCache.get_full_json",
              "uid_components": [
                "cache",
                "cache.JSONCache",
                "cache.JSONCache.get_full_json"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Load full JSON by artifact_id.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.629882",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "close",
              "docstring": "Close database connection.",
              "line_range": [
                128,
                130
              ],
              "parameters": [
                "self"
              ],
              "uid": "cache.JSONCache.close",
              "uid_components": [
                "cache",
                "cache.JSONCache",
                "cache.JSONCache.close"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Close database connection.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.629907",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "cache.JSONCache",
          "uid_components": [
            "cache",
            "cache.JSONCache"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"JSONCache class stores and retrieves JSON data efficiently for improved application performance.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:30.629708",
              "confidence": 0.7,
              "cache_key": "1f095bd8"
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "self.create_tables",
          "sqlite3.connect"
        ],
        "create_tables": [],
        "cache_json": [
          "hashlib.sha256",
          "content.encode",
          "Path",
          "logging.error",
          "json.dumps",
          "logging.info",
          "f.read",
          "open",
          "json_file.exists",
          "str"
        ],
        "get_metadata": [
          "cursor.fetchone",
          "json.loads"
        ],
        "get_full_json": [
          "open",
          "json.load",
          "cursor.fetchone",
          "logging.error"
        ],
        "close": []
      },
      "dependencies": [
        "Any",
        "Dict",
        "List",
        "Optional",
        "Path",
        "hashlib",
        "json",
        "logging",
        "pathlib",
        "sqlite3",
        "typing"
      ],
      "hash": null,
      "uid": "cache",
      "uid_components": [
        "cache"
      ],
      "uid_type": "module",
      "artifact_id": "0fea6a13-c52b-4d47-2536-8f24b045ca84",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:29.934866",
          "confidence": 0.7,
          "cache_key": "6b104681"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 8,
        "lines_of_code": 60,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 11,
        "test_coverage": 0.0,
        "maintainability_index": 60
      },
      "markdown_anchor": {
        "id": "cache",
        "title": "Module: cache",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: cache](#cache)",
        "html_anchor": "<a id=\"cache\"></a>"
      }
    },
    {
      "module_id": "self_run",
      "path": "self_run.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "filter_struct",
          "docstring": "Filter struct.json or init.json based on prompt keywords. Supports dict or list as root.",
          "line_range": [
            22,
            73
          ],
          "parameters": [
            "struct",
            "prompt"
          ],
          "decorators": [],
          "uid": "self_run.filter_struct",
          "uid_components": [
            "self_run",
            "self_run.filter_struct"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Filter struct.json or init.json based on prompt keywords. Supports dict or list as root.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:30.630346",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "attach_to_llm_request",
          "docstring": "Attach filtered JSON to LLM prompt, using cache if available.",
          "line_range": [
            76,
            116
          ],
          "parameters": [
            "context_path",
            "prompt",
            "cache"
          ],
          "decorators": [],
          "uid": "self_run.attach_to_llm_request",
          "uid_components": [
            "self_run",
            "self_run.attach_to_llm_request"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Attach filtered JSON to LLM prompt, using cache if available.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:30.630375",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "filter_struct": [
          "filter_json",
          "isinstance",
          "prompt.lower",
          "item.get",
          "any",
          "struct.get",
          "module.get",
          "str"
        ],
        "attach_to_llm_request": [
          "filter_json",
          "context_file.exists",
          "select_json",
          "cache.get_full_json",
          "cache.get_metadata",
          "prompt.lower",
          "logging.error",
          "json.dumps",
          "logging.info",
          "filter_struct",
          "Path",
          "cache.cache_json"
        ]
      },
      "dependencies": [
        "Any",
        "JSONCache",
        "Optional",
        "Path",
        "cache",
        "filter_json",
        "json",
        "json_selector",
        "logging",
        "pathlib",
        "select_json",
        "typing"
      ],
      "hash": null,
      "uid": "self_run",
      "uid_components": [
        "self_run"
      ],
      "uid_type": "module",
      "artifact_id": "8532a889-4743-4885-6d59-680f873fbf07",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:30.630306",
          "confidence": 0.7,
          "cache_key": "5f1eef66"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 2,
        "lines_of_code": 20,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 12,
        "test_coverage": 0.0,
        "maintainability_index": 90
      },
      "markdown_anchor": {
        "id": "self_run",
        "title": "Module: self_run",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: self_run](#self_run)",
        "html_anchor": "<a id=\"self_run\"></a>"
      }
    },
    {
      "module_id": "llm_client",
      "path": "llm_client.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "__init__",
          "docstring": "Initialize LLMClient with optional Ollama host.",
          "line_range": [
            28,
            36
          ],
          "parameters": [
            "self",
            "ollama_host"
          ],
          "decorators": [],
          "uid": "llm_client.__init__",
          "uid_components": [
            "llm_client",
            "llm_client.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize LLMClient with optional Ollama host.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:30.630833",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "query",
          "docstring": "Query LLMs with prompt, context, and optional model.",
          "line_range": [
            38,
            86
          ],
          "parameters": [
            "self",
            "prompt",
            "context_path",
            "mode",
            "model",
            "artifact_ids"
          ],
          "decorators": [],
          "uid": "llm_client.query",
          "uid_components": [
            "llm_client",
            "llm_client.query"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Query LLMs with prompt, context, and optional model.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:30.630864",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_query_grok",
          "docstring": "Query Grok API.",
          "line_range": [
            88,
            115
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "uid": "llm_client._query_grok",
          "uid_components": [
            "llm_client",
            "llm_client._query_grok"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Query Grok API.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:30.630892",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_query_anthropic",
          "docstring": "Query Anthropic API.",
          "line_range": [
            117,
            141
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "uid": "llm_client._query_anthropic",
          "uid_components": [
            "llm_client",
            "llm_client._query_anthropic"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Query Anthropic API.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:30.630919",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_query_ollama",
          "docstring": "Query Ollama API with specified model.",
          "line_range": [
            143,
            156
          ],
          "parameters": [
            "self",
            "prompt",
            "model"
          ],
          "decorators": [],
          "uid": "llm_client._query_ollama",
          "uid_components": [
            "llm_client",
            "llm_client._query_ollama"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Query Ollama API with specified model.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:30.630952",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_query_hybrid",
          "docstring": "Query multiple LLMs and combine results.",
          "line_range": [
            158,
            172
          ],
          "parameters": [
            "self",
            "prompt",
            "model"
          ],
          "decorators": [],
          "uid": "llm_client._query_hybrid",
          "uid_components": [
            "llm_client",
            "llm_client._query_hybrid"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Query multiple LLMs and combine results.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:30.630980",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "LLMClient",
          "docstring": "",
          "line_range": [
            27,
            172
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "Initialize LLMClient with optional Ollama host.",
              "line_range": [
                28,
                36
              ],
              "parameters": [
                "self",
                "ollama_host"
              ],
              "uid": "llm_client.LLMClient.__init__",
              "uid_components": [
                "llm_client",
                "llm_client.LLMClient",
                "llm_client.LLMClient.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize LLMClient with optional Ollama host.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:31.787895",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "query",
              "docstring": "Query LLMs with prompt, context, and optional model.",
              "line_range": [
                38,
                86
              ],
              "parameters": [
                "self",
                "prompt",
                "context_path",
                "mode",
                "model",
                "artifact_ids"
              ],
              "uid": "llm_client.LLMClient.query",
              "uid_components": [
                "llm_client",
                "llm_client.LLMClient",
                "llm_client.LLMClient.query"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Query LLMs with prompt, context, and optional model.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:31.787930",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_query_grok",
              "docstring": "Query Grok API.",
              "line_range": [
                88,
                115
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "uid": "llm_client.LLMClient._query_grok",
              "uid_components": [
                "llm_client",
                "llm_client.LLMClient",
                "llm_client.LLMClient._query_grok"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Query Grok API.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:31.787962",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_query_anthropic",
              "docstring": "Query Anthropic API.",
              "line_range": [
                117,
                141
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "uid": "llm_client.LLMClient._query_anthropic",
              "uid_components": [
                "llm_client",
                "llm_client.LLMClient",
                "llm_client.LLMClient._query_anthropic"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Query Anthropic API.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:31.787993",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_query_ollama",
              "docstring": "Query Ollama API with specified model.",
              "line_range": [
                143,
                156
              ],
              "parameters": [
                "self",
                "prompt",
                "model"
              ],
              "uid": "llm_client.LLMClient._query_ollama",
              "uid_components": [
                "llm_client",
                "llm_client.LLMClient",
                "llm_client.LLMClient._query_ollama"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Query Ollama API with specified model.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:31.788024",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_query_hybrid",
              "docstring": "Query multiple LLMs and combine results.",
              "line_range": [
                158,
                172
              ],
              "parameters": [
                "self",
                "prompt",
                "model"
              ],
              "uid": "llm_client.LLMClient._query_hybrid",
              "uid_components": [
                "llm_client",
                "llm_client.LLMClient",
                "llm_client.LLMClient._query_hybrid"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Query multiple LLMs and combine results.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:31.788056",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "llm_client.LLMClient",
          "uid_components": [
            "llm_client",
            "llm_client.LLMClient"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Provides methods for interacting with LLM API endpoints and handling client-side authentication.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:31.787835",
              "confidence": 0.7,
              "cache_key": "a8abf21f"
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "logging.info",
          "os.getenv",
          "int"
        ],
        "query": [
          "self._query_grok",
          "self._query_ollama",
          "self._query_hybrid",
          "logging.warning",
          "self._query_anthropic",
          "logging.error",
          "json.dumps",
          "logging.info",
          "range",
          "json.load",
          "Path",
          "asyncio.sleep"
        ],
        "_query_grok": [
          "session.post",
          "response.json",
          "result.get",
          "logging.error",
          "logging.info",
          "aiohttp.ClientSession"
        ],
        "_query_anthropic": [
          "session.post",
          "response.json",
          "result.get",
          "logging.error",
          "logging.info",
          "aiohttp.ClientSession"
        ],
        "_query_ollama": [
          "session.post",
          "response.json",
          "logging.debug",
          "result.get",
          "logging.error",
          "logging.info",
          "aiohttp.ClientSession"
        ],
        "_query_hybrid": [
          "self._query_grok",
          "self._query_ollama",
          "len",
          "isinstance",
          "self._query_anthropic",
          "asyncio.gather",
          "logging.info"
        ]
      },
      "dependencies": [
        "List",
        "Optional",
        "Path",
        "aiohttp",
        "asyncio",
        "dotenv",
        "json",
        "load_dotenv",
        "logging",
        "os",
        "pathlib",
        "typing"
      ],
      "hash": null,
      "uid": "llm_client",
      "uid_components": [
        "llm_client"
      ],
      "uid_type": "module",
      "artifact_id": "f536aad3-4d5a-915c-8a0c-104fd50d02ef",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:30.630795",
          "confidence": 0.7,
          "cache_key": "b7ea8d96"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 8,
        "lines_of_code": 60,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 12,
        "test_coverage": 0.0,
        "maintainability_index": 60
      },
      "markdown_anchor": {
        "id": "llm_client",
        "title": "Module: llm_client",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: llm_client](#llm_client)",
        "html_anchor": "<a id=\"llm_client\"></a>"
      }
    },
    {
      "module_id": "cli",
      "path": "cli.py",
      "category": "core",
      "module_doc": "LLMStruct CLI - Main entry point for the command-line interface.",
      "functions": [
        {
          "name": "main",
          "docstring": "Command-line interface for LLMstruct.",
          "line_range": [
            55,
            318
          ],
          "parameters": [],
          "decorators": [],
          "uid": "cli.main",
          "uid_components": [
            "cli",
            "cli.main"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Command-line interface for LLMstruct.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:31.788121",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "normalize_patterns",
          "docstring": "",
          "line_range": [
            281,
            292
          ],
          "parameters": [
            "arglist"
          ],
          "decorators": [],
          "uid": "cli.normalize_patterns",
          "uid_components": [
            "cli",
            "cli.normalize_patterns"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Standardizes input patterns for consistent data processing\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:32.421587",
              "confidence": 0.7,
              "cache_key": "489b92c0"
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "main": [
          "query_parser.add_argument",
          "review_parser.add_argument",
          "epic.add_epic_cli_subparser",
          "parse_parser.add_argument",
          "context_parser.add_argument",
          "copilot_parser.add_argument",
          "duplicates_parser.add_argument",
          "dogfood_parser.add_argument",
          "subparsers.add_parser",
          "parser.add_subparsers",
          "parser.parse_args",
          "audit_parser.add_argument",
          "argparse.ArgumentParser"
        ],
        "normalize_patterns": [
          "p.strip",
          "item.strip",
          "result.extend",
          "result.append",
          "item.split"
        ]
      },
      "dependencies": [
        "JSONCache",
        "LLMClient",
        "List",
        "Optional",
        "Path",
        "analyze_duplicates",
        "argparse",
        "asyncio",
        "attach_to_llm_request",
        "audit",
        "cli_core",
        "context",
        "copilot",
        "create_cli_core",
        "dogfood",
        "epic",
        "generate_json",
        "get_folder_structure",
        "initialize_copilot",
        "interactive",
        "interactive_legacy",
        "interactive_modular",
        "json",
        "llmstruct",
        "llmstruct.cache",
        "llmstruct.generators.json_generator",
        "llmstruct.modules.cli",
        "llmstruct.modules.cli.analyze_duplicates",
        "llmstruct.modules.cli.audit",
        "llmstruct.modules.cli.context",
        "llmstruct.modules.cli.copilot",
        "llmstruct.modules.cli.dogfood",
        "llmstruct.modules.cli.handlers",
        "llmstruct.modules.cli.parse",
        "llmstruct.modules.cli.query",
        "llmstruct.modules.cli.review",
        "llmstruct.modules.cli.utils",
        "llmstruct.modules.commands.queue",
        "llmstruct.self_run",
        "load_config",
        "load_gitignore",
        "logging",
        "os",
        "parse",
        "parse_files_from_response",
        "pathlib",
        "process_cli_queue_enhanced",
        "query",
        "re",
        "read_file_content",
        "review",
        "shutil",
        "sys",
        "time",
        "toml",
        "typing",
        "write_to_file"
      ],
      "hash": null,
      "uid": "cli",
      "uid_components": [
        "cli"
      ],
      "uid_type": "module",
      "artifact_id": "0898b227-30d5-7afc-d394-d8e4889ece4a",
      "smart_summary": {
        "summary": "LLMStruct CLI - Main entry point for the command-line interface.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:31.788089",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 2,
        "lines_of_code": 20,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 57,
        "test_coverage": 0.0,
        "maintainability_index": 90
      },
      "markdown_anchor": {
        "id": "cli",
        "title": "Module: cli",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: cli](#cli)",
        "html_anchor": "<a id=\"cli\"></a>"
      }
    },
    {
      "module_id": "templates.__init__",
      "path": "templates/__init__.py",
      "category": "cli",
      "module_doc": "Templates for LLM prompts used in LLMStruct integration.",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [],
      "hash": null,
      "uid": "templates.__init__",
      "uid_components": [
        "templates",
        "templates.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "7e5b5e3a-3b2d-81eb-0158-3876cd7516e0",
      "smart_summary": {
        "summary": "Templates for LLM prompts used in LLMStruct integration.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.421631",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 0,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "templates-__init__",
        "title": "Module: templates.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: templates.__init__](#templates-__init__)",
        "html_anchor": "<a id=\"templates-__init__\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_argument_parser",
      "path": "ARCHIVE/cli_argument_parser.py",
      "category": "core",
      "module_doc": "CLI argument parsing for LLMStruct.",
      "functions": [
        {
          "name": "create_argument_parser",
          "docstring": "Create and configure the main argument parser.",
          "line_range": [
            14,
            113
          ],
          "parameters": [],
          "decorators": [],
          "uid": "ARCHIVE.cli_argument_parser.create_argument_parser",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_argument_parser",
            "ARCHIVE.cli_argument_parser.create_argument_parser"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create and configure the main argument parser.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421666",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation",
              "processing"
            ]
          }
        },
        {
          "name": "add_api_bot_commands",
          "docstring": "Add API and bot management commands to the parser.",
          "line_range": [
            116,
            126
          ],
          "parameters": [
            "subparsers"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_argument_parser.add_api_bot_commands",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_argument_parser",
            "ARCHIVE.cli_argument_parser.add_api_bot_commands"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Add API and bot management commands to the parser.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421683",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "create_full_argument_parser",
          "docstring": "Create the full argument parser with all commands.",
          "line_range": [
            129,
            137
          ],
          "parameters": [],
          "decorators": [],
          "uid": "ARCHIVE.cli_argument_parser.create_full_argument_parser",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_argument_parser",
            "ARCHIVE.cli_argument_parser.create_full_argument_parser"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create the full argument parser with all commands.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421709",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation",
              "processing"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "create_argument_parser": [
          "query_parser.add_argument",
          "review_parser.add_argument",
          "interactive_parser.add_argument",
          "parse_parser.add_argument",
          "context_parser.add_argument",
          "copilot_parser.add_argument",
          "duplicates_parser.add_argument",
          "dogfood_parser.add_argument",
          "subparsers.add_parser",
          "parser.add_subparsers",
          "audit_parser.add_argument",
          "argparse.ArgumentParser"
        ],
        "add_api_bot_commands": [
          "add_bot_commands",
          "add_api_commands"
        ],
        "create_full_argument_parser": [
          "create_argument_parser",
          "add_api_bot_commands"
        ]
      },
      "dependencies": [
        "Path",
        "add_api_commands",
        "add_bot_commands",
        "api_commands",
        "argparse",
        "bot_commands",
        "pathlib"
      ],
      "hash": null,
      "uid": "ARCHIVE.cli_argument_parser",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_argument_parser"
      ],
      "uid_type": "module",
      "artifact_id": "de2bd5b3-aaa6-7470-69aa-a818128ef9a3",
      "smart_summary": {
        "summary": "CLI argument parsing for LLMStruct.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.421651",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 3,
        "lines_of_code": 30,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 7,
        "test_coverage": 0.0,
        "maintainability_index": 85
      },
      "markdown_anchor": {
        "id": "archive-cli_argument_parser",
        "title": "Module: ARCHIVE.cli_argument_parser",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_argument_parser](#archive-cli_argument_parser)",
        "html_anchor": "<a id=\"archive-cli_argument_parser\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_core",
      "path": "ARCHIVE/cli_core.py",
      "category": "core",
      "module_doc": "Core CLI functionality and main loop.",
      "functions": [
        {
          "name": "create_cli_core",
          "docstring": "Factory function to create CLI core instance.",
          "line_range": [
            110,
            112
          ],
          "parameters": [
            "root_dir"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_core.create_cli_core",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_core",
            "ARCHIVE.cli_core.create_cli_core"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Factory function to create CLI core instance.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421736",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "Initialize CLI core with root directory.",
          "line_range": [
            28,
            35
          ],
          "parameters": [
            "self",
            "root_dir"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_core.__init__",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_core",
            "ARCHIVE.cli_core.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize CLI core with root directory.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421748",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "setup_cache",
          "docstring": "Initialize cache if enabled in config.",
          "line_range": [
            37,
            53
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_core.setup_cache",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_core",
            "ARCHIVE.cli_core.setup_cache"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize cache if enabled in config.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421760",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "setup_copilot",
          "docstring": "Initialize Copilot integration if enabled.",
          "line_range": [
            55,
            63
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_core.setup_copilot",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_core",
            "ARCHIVE.cli_core.setup_copilot"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize Copilot integration if enabled.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421771",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "run_interactive_mode",
          "docstring": "Run the interactive CLI mode.",
          "line_range": [
            65,
            97
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_core.run_interactive_mode",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_core",
            "ARCHIVE.cli_core.run_interactive_mode"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Run the interactive CLI mode.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421783",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cleanup",
          "docstring": "Clean up resources.",
          "line_range": [
            99,
            107
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_core.cleanup",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_core",
            "ARCHIVE.cli_core.cleanup"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Clean up resources.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421795",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "CLICore",
          "docstring": "Core CLI class handling main loop and coordination.",
          "line_range": [
            25,
            107
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "Initialize CLI core with root directory.",
              "line_range": [
                28,
                35
              ],
              "parameters": [
                "self",
                "root_dir"
              ],
              "uid": "ARCHIVE.cli_core.CLICore.__init__",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.CLICore",
                "ARCHIVE.cli_core.CLICore.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize CLI core with root directory.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421820",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "setup_cache",
              "docstring": "Initialize cache if enabled in config.",
              "line_range": [
                37,
                53
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_core.CLICore.setup_cache",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.CLICore",
                "ARCHIVE.cli_core.CLICore.setup_cache"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize cache if enabled in config.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421831",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "setup_copilot",
              "docstring": "Initialize Copilot integration if enabled.",
              "line_range": [
                55,
                63
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_core.CLICore.setup_copilot",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.CLICore",
                "ARCHIVE.cli_core.CLICore.setup_copilot"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize Copilot integration if enabled.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421843",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "run_interactive_mode",
              "docstring": "Run the interactive CLI mode.",
              "line_range": [
                65,
                97
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_core.CLICore.run_interactive_mode",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.CLICore",
                "ARCHIVE.cli_core.CLICore.run_interactive_mode"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Run the interactive CLI mode.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421855",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "cleanup",
              "docstring": "Clean up resources.",
              "line_range": [
                99,
                107
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_core.CLICore.cleanup",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.CLICore",
                "ARCHIVE.cli_core.CLICore.cleanup"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Clean up resources.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421866",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "ARCHIVE.cli_core.CLICore",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_core",
            "ARCHIVE.cli_core.CLICore"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Core CLI class handling main loop and coordination.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421807",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "CLIConfig",
          "CLIUtils",
          "CommandProcessor"
        ],
        "setup_cache": [
          "cache_config.get",
          "logging.warning",
          "logging.info",
          "cache_path.mkdir",
          "Path",
          "JSONCache",
          "str"
        ],
        "setup_copilot": [
          "logging.info",
          "logging.warning",
          "initialize_copilot",
          "copilot_config.get"
        ],
        "run_interactive_mode": [
          "self.setup_copilot",
          "input",
          "user_input.lower",
          "user_input.startswith",
          "self.cleanup",
          "self.setup_cache",
          "logging.error",
          "print"
        ],
        "cleanup": [
          "logging.info"
        ],
        "create_cli_core": [
          "CLICore"
        ]
      },
      "dependencies": [
        "CLIConfig",
        "CLIUtils",
        "CommandProcessor",
        "CopilotContextManager",
        "JSONCache",
        "Optional",
        "Path",
        "cli_commands",
        "cli_config",
        "cli_utils",
        "copilot",
        "initialize_copilot",
        "llmstruct.cache",
        "logging",
        "pathlib",
        "typing"
      ],
      "hash": null,
      "uid": "ARCHIVE.cli_core",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_core"
      ],
      "uid_type": "module",
      "artifact_id": "b5309edf-9df3-07dc-a5ae-a7deb1ae3eb9",
      "smart_summary": {
        "summary": "Core CLI functionality and main loop.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.421723",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 8,
        "lines_of_code": 60,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 16,
        "test_coverage": 0.0,
        "maintainability_index": 60
      },
      "markdown_anchor": {
        "id": "archive-cli_core",
        "title": "Module: ARCHIVE.cli_core",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_core](#archive-cli_core)",
        "html_anchor": "<a id=\"archive-cli_core\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_utils",
      "path": "ARCHIVE/cli_utils.py",
      "category": "core",
      "module_doc": "CLI utility functions.",
      "functions": [
        {
          "name": "__init__",
          "docstring": "Initialize utils with root directory.",
          "line_range": [
            24,
            26
          ],
          "parameters": [
            "self",
            "root_dir"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.__init__",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize utils with root directory.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421890",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "read_file_content",
          "docstring": "Read file content with size limit.",
          "line_range": [
            28,
            50
          ],
          "parameters": [
            "self",
            "file_path",
            "max_size"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.read_file_content",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.read_file_content"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Read file content with size limit.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421907",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "write_file_content",
          "docstring": "Write content to file.",
          "line_range": [
            52,
            70
          ],
          "parameters": [
            "self",
            "file_path",
            "content"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.write_file_content",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.write_file_content"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Write content to file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421923",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_directory_structure",
          "docstring": "Get directory structure using folder generator.",
          "line_range": [
            72,
            115
          ],
          "parameters": [
            "self",
            "path",
            "gitignore_patterns",
            "include_patterns",
            "exclude_patterns",
            "exclude_dirs"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.get_directory_structure",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.get_directory_structure"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get directory structure using folder generator.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421936",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "validate_json",
          "docstring": "Validate JSON content.",
          "line_range": [
            117,
            123
          ],
          "parameters": [
            "self",
            "content"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.validate_json",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.validate_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Validate JSON content.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421947",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "format_json",
          "docstring": "Format data as JSON string.",
          "line_range": [
            125,
            131
          ],
          "parameters": [
            "self",
            "data",
            "indent"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.format_json",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.format_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Format data as JSON string.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421959",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "generate_unique_id",
          "docstring": "Generate unique ID for commands, queues, etc.",
          "line_range": [
            133,
            137
          ],
          "parameters": [
            "self",
            "prefix"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.generate_unique_id",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.generate_unique_id"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate unique ID for commands, queues, etc.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421970",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "safe_path_join",
          "docstring": "Safely join path parts, preventing directory traversal.",
          "line_range": [
            139,
            149
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.safe_path_join",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.safe_path_join"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Safely join path parts, preventing directory traversal.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421982",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "file_exists",
          "docstring": "Check if file exists.",
          "line_range": [
            151,
            157
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.file_exists",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.file_exists"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Check if file exists.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421993",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "dir_exists",
          "docstring": "Check if directory exists.",
          "line_range": [
            159,
            165
          ],
          "parameters": [
            "self",
            "dir_path"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.dir_exists",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.dir_exists"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Check if directory exists.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422005",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "get_file_size",
          "docstring": "Get file size in bytes.",
          "line_range": [
            167,
            173
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.get_file_size",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.get_file_size"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get file size in bytes.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422016",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "backup_file",
          "docstring": "Create backup of file with timestamp.",
          "line_range": [
            175,
            191
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.backup_file",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.backup_file"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create backup of file with timestamp.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422028",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cleanup_old_backups",
          "docstring": "Clean up old backup files, keeping only the most recent ones.",
          "line_range": [
            193,
            222
          ],
          "parameters": [
            "self",
            "file_path",
            "keep_count"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_utils.cleanup_old_backups",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.cleanup_old_backups"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Clean up old backup files, keeping only the most recent ones.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422039",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "CLIUtils",
          "docstring": "Utility functions for CLI operations.",
          "line_range": [
            21,
            222
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "Initialize utils with root directory.",
              "line_range": [
                24,
                26
              ],
              "parameters": [
                "self",
                "root_dir"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.__init__",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize utils with root directory.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422062",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "read_file_content",
              "docstring": "Read file content with size limit.",
              "line_range": [
                28,
                50
              ],
              "parameters": [
                "self",
                "file_path",
                "max_size"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.read_file_content",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.read_file_content"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Read file content with size limit.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422073",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "write_file_content",
              "docstring": "Write content to file.",
              "line_range": [
                52,
                70
              ],
              "parameters": [
                "self",
                "file_path",
                "content"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.write_file_content",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.write_file_content"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Write content to file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422084",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_directory_structure",
              "docstring": "Get directory structure using folder generator.",
              "line_range": [
                72,
                115
              ],
              "parameters": [
                "self",
                "path",
                "gitignore_patterns",
                "include_patterns",
                "exclude_patterns",
                "exclude_dirs"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.get_directory_structure",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.get_directory_structure"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get directory structure using folder generator.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422099",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "validate_json",
              "docstring": "Validate JSON content.",
              "line_range": [
                117,
                123
              ],
              "parameters": [
                "self",
                "content"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.validate_json",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.validate_json"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Validate JSON content.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422110",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "format_json",
              "docstring": "Format data as JSON string.",
              "line_range": [
                125,
                131
              ],
              "parameters": [
                "self",
                "data",
                "indent"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.format_json",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.format_json"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Format data as JSON string.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422121",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "generate_unique_id",
              "docstring": "Generate unique ID for commands, queues, etc.",
              "line_range": [
                133,
                137
              ],
              "parameters": [
                "self",
                "prefix"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.generate_unique_id",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.generate_unique_id"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate unique ID for commands, queues, etc.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422133",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "safe_path_join",
              "docstring": "Safely join path parts, preventing directory traversal.",
              "line_range": [
                139,
                149
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.safe_path_join",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.safe_path_join"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Safely join path parts, preventing directory traversal.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422147",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "file_exists",
              "docstring": "Check if file exists.",
              "line_range": [
                151,
                157
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.file_exists",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.file_exists"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Check if file exists.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422159",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "dir_exists",
              "docstring": "Check if directory exists.",
              "line_range": [
                159,
                165
              ],
              "parameters": [
                "self",
                "dir_path"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.dir_exists",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.dir_exists"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Check if directory exists.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422170",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "get_file_size",
              "docstring": "Get file size in bytes.",
              "line_range": [
                167,
                173
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.get_file_size",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.get_file_size"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get file size in bytes.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422181",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "backup_file",
              "docstring": "Create backup of file with timestamp.",
              "line_range": [
                175,
                191
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.backup_file",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.backup_file"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Create backup of file with timestamp.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422192",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "cleanup_old_backups",
              "docstring": "Clean up old backup files, keeping only the most recent ones.",
              "line_range": [
                193,
                222
              ],
              "parameters": [
                "self",
                "file_path",
                "keep_count"
              ],
              "uid": "ARCHIVE.cli_utils.CLIUtils.cleanup_old_backups",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils",
                "ARCHIVE.cli_utils.CLIUtils.cleanup_old_backups"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Clean up old backup files, keeping only the most recent ones.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422212",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "ARCHIVE.cli_utils.CLIUtils",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils",
            "ARCHIVE.cli_utils.CLIUtils"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Utility functions for CLI operations.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422051",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "utility",
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [],
        "read_file_content": [
          "logging.warning",
          "os.stat",
          "logging.error",
          "f.read",
          "open"
        ],
        "write_file_content": [
          "logging.error",
          "logging.info",
          "open",
          "Path",
          "f.write"
        ],
        "get_directory_structure": [
          "get_folder_structure",
          "sorted",
          "logging.error",
          "os.listdir"
        ],
        "validate_json": [
          "str",
          "json.loads"
        ],
        "format_json": [
          "json.dumps",
          "str",
          "logging.error"
        ],
        "generate_unique_id": [
          "uuid.uuid4",
          "int",
          "time.time",
          "str"
        ],
        "safe_path_join": [
          "ValueError",
          "resolved_path.startswith"
        ],
        "file_exists": [
          "self.safe_path_join"
        ],
        "dir_exists": [
          "self.safe_path_join"
        ],
        "get_file_size": [
          "self.safe_path_join"
        ],
        "backup_file": [
          "self.safe_path_join",
          "dst.write",
          "time.time",
          "logging.error",
          "open",
          "int",
          "src.read"
        ],
        "cleanup_old_backups": [
          "self.safe_path_join",
          "logging.warning",
          "filename.split",
          "os.remove",
          "backups.append",
          "logging.error",
          "logging.info",
          "filename.startswith",
          "int",
          "backups.sort",
          "os.listdir"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "List",
        "Optional",
        "Path",
        "get_folder_structure",
        "json",
        "llmstruct.generators.json_generator",
        "logging",
        "os",
        "pathlib",
        "time",
        "typing",
        "uuid"
      ],
      "hash": null,
      "uid": "ARCHIVE.cli_utils",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_utils"
      ],
      "uid_type": "module",
      "artifact_id": "52571ae4-3b80-9e58-7c71-a1d431d45ed7",
      "smart_summary": {
        "summary": "CLI utility functions.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.421878",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 15,
        "lines_of_code": 130,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 14,
        "test_coverage": 0.0,
        "maintainability_index": 25
      },
      "markdown_anchor": {
        "id": "archive-cli_utils",
        "title": "Module: ARCHIVE.cli_utils",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_utils](#archive-cli_utils)",
        "html_anchor": "<a id=\"archive-cli_utils\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_main_commands",
      "path": "ARCHIVE/cli_main_commands.py",
      "category": "core",
      "module_doc": "Main CLI command handlers for LLMStruct.",
      "functions": [
        {
          "name": "parse",
          "docstring": "Parse codebase and generate struct.json.",
          "line_range": [
            33,
            68
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.parse",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.parse"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Parse codebase and generate struct.json.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422237",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        },
        {
          "name": "query",
          "docstring": "Query LLMs with prompt and context.",
          "line_range": [
            71,
            127
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.query",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.query"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Query LLMs with prompt and context.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422248",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "interactive",
          "docstring": "Run interactive CLI with modular structure if available, fallback to legacy.",
          "line_range": [
            130,
            136
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.interactive",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.interactive"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Run interactive CLI with modular structure if available, fallback to legacy.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422259",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "interactive_modular",
          "docstring": "Run interactive CLI with modular structure.",
          "line_range": [
            139,
            146
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.interactive_modular",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.interactive_modular"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Run interactive CLI with modular structure.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422271",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "interactive_legacy",
          "docstring": "Run interactive CLI with LLM, supporting file/folder viewing and writing.",
          "line_range": [
            149,
            175
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.interactive_legacy",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.interactive_legacy"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Run interactive CLI with LLM, supporting file/folder viewing and writing.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422288",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "basic_interactive_processing",
          "docstring": "Basic interactive processing without enhanced features.",
          "line_range": [
            178,
            230
          ],
          "parameters": [
            "args",
            "cache",
            "client"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.basic_interactive_processing",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.basic_interactive_processing"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Basic interactive processing without enhanced features.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422300",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        },
        {
          "name": "context",
          "docstring": "Generate context.json from input JSON.",
          "line_range": [
            233,
            235
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.context",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.context"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate context.json from input JSON.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422311",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "dogfood",
          "docstring": "Run dogfooding analysis.",
          "line_range": [
            238,
            240
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.dogfood",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.dogfood"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Run dogfooding analysis.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422323",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "review",
          "docstring": "Review codebase with LLM.",
          "line_range": [
            243,
            245
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.review",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.review"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Review codebase with LLM.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422334",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "copilot",
          "docstring": "Copilot integration and context management.",
          "line_range": [
            248,
            366
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.copilot",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.copilot"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Copilot integration and context management.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422345",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "audit",
          "docstring": "Audit project structure and generate reports.",
          "line_range": [
            369,
            387
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.audit",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.audit"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Audit project structure and generate reports.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422356",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "analyze_duplicates",
          "docstring": "Analyze function duplication using struct.json deep analysis.",
          "line_range": [
            390,
            495
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_main_commands.analyze_duplicates",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands",
            "ARCHIVE.cli_main_commands.analyze_duplicates"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Analyze function duplication using struct.json deep analysis.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422367",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "parse": [
          "attach_to_llm_request",
          "cache.close",
          "logging.error",
          "load_gitignore",
          "logging.info",
          "generate_json",
          "JSONCache"
        ],
        "query": [
          "LLMClient",
          "orchestrator.get_context_for_scenario",
          "json.dump",
          "logging.warning",
          "cache.close",
          "create_context_orchestrator",
          "logging.error",
          "hasattr",
          "client.query_with_context",
          "logging.info",
          "Path",
          "JSONCache",
          "client.query"
        ],
        "interactive": [
          "interactive_modular",
          "logging.warning",
          "interactive_legacy"
        ],
        "interactive_modular": [
          "interactive_legacy",
          "logging.error",
          "create_cli_core",
          "cli_core.run_interactive_mode"
        ],
        "interactive_legacy": [
          "LLMClient",
          "process_cli_queue_enhanced",
          "cache.close",
          "logging.error",
          "basic_interactive_processing",
          "print",
          "Path",
          "JSONCache"
        ],
        "basic_interactive_processing": [
          "user_input.startswith",
          "input",
          "user_input.lower",
          "f.read",
          "print",
          "open",
          "client.query"
        ],
        "context": [
          "logging.warning"
        ],
        "dogfood": [
          "logging.warning"
        ],
        "review": [
          "logging.warning"
        ],
        "copilot": [
          "manager.close",
          "manager.unload_context_layer",
          "template_path.exists",
          "manager.refresh_all_contexts",
          "logging.error",
          "smart_suggest",
          "logging.info",
          "open",
          "manager.get_context_status",
          "manager.load_context_layer",
          "initialize_copilot",
          "config_path.exists",
          "getattr",
          "shutil.copy",
          "Path",
          "enumerate",
          "f.write",
          "layers.split",
          "print",
          "hasattr",
          "manager.validate_change",
          "manager.export_context"
        ],
        "audit": [
          "analyze_duplicates",
          "hasattr",
          "file_path.exists",
          "print",
          "Path"
        ],
        "analyze_duplicates": [
          "json.dump",
          "len",
          "getattr",
          "f.get",
          "logging.error",
          "analysis.get",
          "json.dumps",
          "func.get",
          "print",
          "open",
          "WorkflowOrchestrator",
          "orchestrator.analyze_codebase_for_duplicates"
        ]
      },
      "dependencies": [
        "JSONCache",
        "LLMClient",
        "Optional",
        "Path",
        "WorkflowOrchestrator",
        "argparse",
        "asyncio",
        "attach_to_llm_request",
        "cli",
        "cli_core",
        "context_orchestrator",
        "copilot",
        "create_cli_core",
        "create_context_orchestrator",
        "generate_json",
        "initialize_copilot",
        "json",
        "llmstruct",
        "llmstruct.cache",
        "llmstruct.generators.json_generator",
        "llmstruct.self_run",
        "load_gitignore",
        "logging",
        "os",
        "pathlib",
        "process_cli_queue_enhanced",
        "shutil",
        "smart_suggest",
        "typing",
        "workflow_orchestrator"
      ],
      "hash": null,
      "uid": "ARCHIVE.cli_main_commands",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_main_commands"
      ],
      "uid_type": "module",
      "artifact_id": "9c81e687-23e2-f149-3842-cc912c2cf619",
      "smart_summary": {
        "summary": "Main CLI command handlers for LLMStruct.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.422224",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module",
          "management"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 12,
        "lines_of_code": 120,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 30,
        "test_coverage": 0.0,
        "maintainability_index": 40
      },
      "markdown_anchor": {
        "id": "archive-cli_main_commands",
        "title": "Module: ARCHIVE.cli_main_commands",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_main_commands](#archive-cli_main_commands)",
        "html_anchor": "<a id=\"archive-cli_main_commands\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_config",
      "path": "ARCHIVE/cli_config.py",
      "category": "core",
      "module_doc": "CLI configuration management.",
      "functions": [
        {
          "name": "__init__",
          "docstring": "Initialize configuration manager.",
          "line_range": [
            20,
            24
          ],
          "parameters": [
            "self",
            "root_dir"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.__init__",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize configuration manager.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422391",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "_load_config",
          "docstring": "Load configuration from llmstruct.toml.",
          "line_range": [
            26,
            34
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config._load_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config._load_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Load configuration from llmstruct.toml.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422402",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "get_cache_config",
          "docstring": "Get cache configuration section.",
          "line_range": [
            36,
            38
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_cache_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_cache_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get cache configuration section.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422417",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "get_copilot_config",
          "docstring": "Get Copilot configuration section.",
          "line_range": [
            40,
            42
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_copilot_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_copilot_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get Copilot configuration section.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422428",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "get_queue_config",
          "docstring": "Get queue configuration section.",
          "line_range": [
            44,
            46
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_queue_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_queue_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get queue configuration section.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422443",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "get_context_config",
          "docstring": "Get context configuration section.",
          "line_range": [
            48,
            50
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_context_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_context_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get context configuration section.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422454",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "get_gitignore_patterns",
          "docstring": "Load and normalize patterns from .gitignore.",
          "line_range": [
            52,
            66
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_gitignore_patterns",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_gitignore_patterns"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Load and normalize patterns from .gitignore.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422471",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_exclude_dirs",
          "docstring": "Get directories to exclude from scanning.",
          "line_range": [
            68,
            82
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_exclude_dirs",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_exclude_dirs"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get directories to exclude from scanning.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422483",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_include_patterns",
          "docstring": "Get file patterns to include.",
          "line_range": [
            84,
            89
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_include_patterns",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_include_patterns"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get file patterns to include.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422494",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_exclude_patterns",
          "docstring": "Get file patterns to exclude.",
          "line_range": [
            91,
            96
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_exclude_patterns",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_exclude_patterns"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get file patterns to exclude.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422506",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_max_file_size",
          "docstring": "Get maximum file size for processing (in bytes).",
          "line_range": [
            98,
            100
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_max_file_size",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_max_file_size"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get maximum file size for processing (in bytes).",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422519",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_auto_update_config",
          "docstring": "Get auto-update configuration.",
          "line_range": [
            102,
            104
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_auto_update_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_auto_update_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get auto-update configuration.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422543",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "is_auto_update_enabled",
          "docstring": "Check if auto-update is enabled.",
          "line_range": [
            106,
            108
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.is_auto_update_enabled",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.is_auto_update_enabled"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Check if auto-update is enabled.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422562",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "get_struct_file_path",
          "docstring": "Get path to struct.json file.",
          "line_range": [
            110,
            112
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_struct_file_path",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_struct_file_path"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get path to struct.json file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422574",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_context_file_path",
          "docstring": "Get path to context file.",
          "line_range": [
            114,
            116
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.get_context_file_path",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.get_context_file_path"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get path to context file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422585",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "save_config",
          "docstring": "Save current configuration to file.",
          "line_range": [
            118,
            124
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.save_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.save_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Save current configuration to file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422596",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "update_config",
          "docstring": "Update configuration value.",
          "line_range": [
            126,
            131
          ],
          "parameters": [
            "self",
            "section",
            "key",
            "value"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.update_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.update_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Update configuration value.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422607",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "reload_config",
          "docstring": "Reload configuration from file.",
          "line_range": [
            133,
            135
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_config.reload_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.reload_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Reload configuration from file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422619",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "CLIConfig",
          "docstring": "Manages CLI configuration from llmstruct.toml and other sources.",
          "line_range": [
            17,
            135
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "Initialize configuration manager.",
              "line_range": [
                20,
                24
              ],
              "parameters": [
                "self",
                "root_dir"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.__init__",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize configuration manager.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422643",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "_load_config",
              "docstring": "Load configuration from llmstruct.toml.",
              "line_range": [
                26,
                34
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig._load_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig._load_config"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Load configuration from llmstruct.toml.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422655",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_cache_config",
              "docstring": "Get cache configuration section.",
              "line_range": [
                36,
                38
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_cache_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_cache_config"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get cache configuration section.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422670",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_copilot_config",
              "docstring": "Get Copilot configuration section.",
              "line_range": [
                40,
                42
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_copilot_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_copilot_config"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get Copilot configuration section.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422687",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_queue_config",
              "docstring": "Get queue configuration section.",
              "line_range": [
                44,
                46
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_queue_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_queue_config"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get queue configuration section.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422699",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_context_config",
              "docstring": "Get context configuration section.",
              "line_range": [
                48,
                50
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_context_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_context_config"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get context configuration section.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422710",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_gitignore_patterns",
              "docstring": "Load and normalize patterns from .gitignore.",
              "line_range": [
                52,
                66
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_gitignore_patterns",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_gitignore_patterns"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Load and normalize patterns from .gitignore.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422721",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_exclude_dirs",
              "docstring": "Get directories to exclude from scanning.",
              "line_range": [
                68,
                82
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_exclude_dirs",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_exclude_dirs"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get directories to exclude from scanning.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422743",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_include_patterns",
              "docstring": "Get file patterns to include.",
              "line_range": [
                84,
                89
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_include_patterns",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_include_patterns"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get file patterns to include.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422769",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_exclude_patterns",
              "docstring": "Get file patterns to exclude.",
              "line_range": [
                91,
                96
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_exclude_patterns",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_exclude_patterns"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get file patterns to exclude.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422783",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_max_file_size",
              "docstring": "Get maximum file size for processing (in bytes).",
              "line_range": [
                98,
                100
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_max_file_size",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_max_file_size"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get maximum file size for processing (in bytes).",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422795",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_auto_update_config",
              "docstring": "Get auto-update configuration.",
              "line_range": [
                102,
                104
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_auto_update_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_auto_update_config"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get auto-update configuration.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422806",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "configuration"
                ]
              }
            },
            {
              "name": "is_auto_update_enabled",
              "docstring": "Check if auto-update is enabled.",
              "line_range": [
                106,
                108
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.is_auto_update_enabled",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.is_auto_update_enabled"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Check if auto-update is enabled.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422817",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "get_struct_file_path",
              "docstring": "Get path to struct.json file.",
              "line_range": [
                110,
                112
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_struct_file_path",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_struct_file_path"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get path to struct.json file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422828",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_context_file_path",
              "docstring": "Get path to context file.",
              "line_range": [
                114,
                116
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.get_context_file_path",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.get_context_file_path"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get path to context file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422839",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "save_config",
              "docstring": "Save current configuration to file.",
              "line_range": [
                118,
                124
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.save_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.save_config"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Save current configuration to file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422850",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "configuration"
                ]
              }
            },
            {
              "name": "update_config",
              "docstring": "Update configuration value.",
              "line_range": [
                126,
                131
              ],
              "parameters": [
                "self",
                "section",
                "key",
                "value"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.update_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.update_config"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Update configuration value.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422861",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "configuration"
                ]
              }
            },
            {
              "name": "reload_config",
              "docstring": "Reload configuration from file.",
              "line_range": [
                133,
                135
              ],
              "parameters": [
                "self"
              ],
              "uid": "ARCHIVE.cli_config.CLIConfig.reload_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig",
                "ARCHIVE.cli_config.CLIConfig.reload_config"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Reload configuration from file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422872",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "configuration"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "ARCHIVE.cli_config.CLIConfig",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config",
            "ARCHIVE.cli_config.CLIConfig"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Manages CLI configuration from llmstruct.toml and other sources.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422631",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "self._load_config",
          "Path"
        ],
        "_load_config": [
          "logging.error",
          "toml.load"
        ],
        "get_cache_config": [],
        "get_copilot_config": [],
        "get_queue_config": [],
        "get_context_config": [],
        "get_gitignore_patterns": [
          "gitignore_path.exists",
          "line.strip",
          "logging.error",
          "gitignore_path.open",
          "Path",
          "line.startswith"
        ],
        "get_exclude_dirs": [
          "list",
          "cli_config.get",
          "set",
          "parsing_config.get"
        ],
        "get_include_patterns": [
          "cli_config.get",
          "parsing_config.get"
        ],
        "get_exclude_patterns": [
          "cli_config.get",
          "parsing_config.get"
        ],
        "get_max_file_size": [],
        "get_auto_update_config": [],
        "is_auto_update_enabled": [
          "self.get_auto_update_config"
        ],
        "get_struct_file_path": [],
        "get_context_file_path": [],
        "save_config": [
          "toml.dump",
          "logging.error"
        ],
        "update_config": [
          "self.save_config"
        ],
        "reload_config": [
          "self._load_config"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "List",
        "Path",
        "logging",
        "pathlib",
        "toml",
        "typing"
      ],
      "hash": null,
      "uid": "ARCHIVE.cli_config",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_config"
      ],
      "uid_type": "module",
      "artifact_id": "86f94751-8517-551a-a92b-e67fc6d08ac2",
      "smart_summary": {
        "summary": "CLI configuration management.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.422379",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module",
          "management"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 20,
        "lines_of_code": 180,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 8,
        "test_coverage": 0.0,
        "maintainability_index": 0
      },
      "markdown_anchor": {
        "id": "archive-cli_config",
        "title": "Module: ARCHIVE.cli_config",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_config](#archive-cli_config)",
        "html_anchor": "<a id=\"archive-cli_config\"></a>"
      }
    },
    {
      "module_id": "ARCHIVE.cli_commands",
      "path": "ARCHIVE/cli_commands.py",
      "category": "core",
      "module_doc": "CLI command processing and handlers.",
      "functions": [
        {
          "name": "__init__",
          "docstring": "Initialize command processor.",
          "line_range": [
            33,
            72
          ],
          "parameters": [
            "self",
            "root_dir",
            "config",
            "utils"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.__init__",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize command processor.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422903",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "set_cache",
          "docstring": "Set cache instance.",
          "line_range": [
            74,
            76
          ],
          "parameters": [
            "self",
            "cache"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.set_cache",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.set_cache"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Set cache instance.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422915",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "set_copilot",
          "docstring": "Set Copilot manager instance.",
          "line_range": [
            78,
            80
          ],
          "parameters": [
            "self",
            "copilot_manager"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.set_copilot",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.set_copilot"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Set Copilot manager instance.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422926",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "process_command",
          "docstring": "Process a command starting with /.",
          "line_range": [
            82,
            98
          ],
          "parameters": [
            "self",
            "command_line"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.process_command",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.process_command"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Process a command starting with /.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422937",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        },
        {
          "name": "process_prompt",
          "docstring": "Process a regular user prompt (not a command).",
          "line_range": [
            100,
            152
          ],
          "parameters": [
            "self",
            "prompt"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.process_prompt",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.process_prompt"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Process a regular user prompt (not a command).",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422952",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        },
        {
          "name": "cmd_help",
          "docstring": "Show help information.",
          "line_range": [
            154,
            217
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_help",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_help"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Show help information.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422964",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cmd_workspace",
          "docstring": "Handle workspace state and permissions management.",
          "line_range": [
            219,
            334
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_workspace",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_workspace"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle workspace state and permissions management.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422975",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "cmd_mode",
          "docstring": "Handle context mode operations with workspace integration.",
          "line_range": [
            336,
            437
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_mode",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_mode"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle context mode operations with workspace integration.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422986",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "cmd_view",
          "docstring": "View file or directory contents.",
          "line_range": [
            439,
            478
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_view",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_view"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "View file or directory contents.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422997",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cmd_write",
          "docstring": "Write content to a file.",
          "line_range": [
            480,
            505
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_write",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_write"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Write content to a file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423008",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cmd_queue",
          "docstring": "Handle queue operations.",
          "line_range": [
            507,
            549
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_queue",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_queue"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle queue operations.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423019",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "cmd_cache",
          "docstring": "Handle cache operations.",
          "line_range": [
            551,
            590
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_cache",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_cache"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle cache operations.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423030",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "cmd_copilot",
          "docstring": "Handle Copilot operations.",
          "line_range": [
            592,
            626
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_copilot",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_copilot"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle Copilot operations.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423041",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "cmd_config",
          "docstring": "Handle configuration operations.",
          "line_range": [
            628,
            660
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle configuration operations.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423051",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "cmd_status",
          "docstring": "Show system status.",
          "line_range": [
            662,
            676
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_status",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_status"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Show system status.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423063",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cmd_backup",
          "docstring": "Create backup of a file.",
          "line_range": [
            678,
            693
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_backup",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_backup"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create backup of a file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423076",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cmd_parse",
          "docstring": "Parse project structure.",
          "line_range": [
            695,
            715
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_parse",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_parse"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Parse project structure.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423089",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        },
        {
          "name": "cmd_audit",
          "docstring": "Handle audit operations.",
          "line_range": [
            717,
            743
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_audit",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_audit"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle audit operations.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423103",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "handle_auto_update",
          "docstring": "Handle auto-update operations.",
          "line_range": [
            745,
            765
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.handle_auto_update",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.handle_auto_update"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle auto-update operations.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423114",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "handle_struct_status",
          "docstring": "Handle struct status operations.",
          "line_range": [
            767,
            791
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.handle_struct_status",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.handle_struct_status"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle struct status operations.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423125",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "cmd_context",
          "docstring": "Handle context operations.",
          "line_range": [
            793,
            849
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_context",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_context"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle context operations.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423136",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "cmd_session",
          "docstring": "Handle session operations.",
          "line_range": [
            851,
            902
          ],
          "parameters": [
            "self",
            "args"
          ],
          "decorators": [],
          "uid": "ARCHIVE.cli_commands.cmd_session",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.cmd_session"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Handle session operations.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423147",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "CommandProcessor",
          "docstring": "Processes CLI commands and user prompts.",
          "line_range": [
            30,
            902
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "Initialize command processor.",
              "line_range": [
                33,
                72
              ],
              "parameters": [
                "self",
                "root_dir",
                "config",
                "utils"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.__init__",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize command processor.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423172",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "set_cache",
              "docstring": "Set cache instance.",
              "line_range": [
                74,
                76
              ],
              "parameters": [
                "self",
                "cache"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.set_cache",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.set_cache"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Set cache instance.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423184",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "set_copilot",
              "docstring": "Set Copilot manager instance.",
              "line_range": [
                78,
                80
              ],
              "parameters": [
                "self",
                "copilot_manager"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.set_copilot",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.set_copilot"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Set Copilot manager instance.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423200",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "process_command",
              "docstring": "Process a command starting with /.",
              "line_range": [
                82,
                98
              ],
              "parameters": [
                "self",
                "command_line"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.process_command",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.process_command"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Process a command starting with /.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423212",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "processing"
                ]
              }
            },
            {
              "name": "process_prompt",
              "docstring": "Process a regular user prompt (not a command).",
              "line_range": [
                100,
                152
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.process_prompt",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.process_prompt"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Process a regular user prompt (not a command).",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423223",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "processing"
                ]
              }
            },
            {
              "name": "cmd_help",
              "docstring": "Show help information.",
              "line_range": [
                154,
                217
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_help",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_help"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Show help information.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423234",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "cmd_workspace",
              "docstring": "Handle workspace state and permissions management.",
              "line_range": [
                219,
                334
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_workspace",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_workspace"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle workspace state and permissions management.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423245",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_mode",
              "docstring": "Handle context mode operations with workspace integration.",
              "line_range": [
                336,
                437
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_mode",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_mode"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle context mode operations with workspace integration.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423255",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_view",
              "docstring": "View file or directory contents.",
              "line_range": [
                439,
                478
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_view",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_view"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "View file or directory contents.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423266",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "cmd_write",
              "docstring": "Write content to a file.",
              "line_range": [
                480,
                505
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_write",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_write"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Write content to a file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423283",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "cmd_queue",
              "docstring": "Handle queue operations.",
              "line_range": [
                507,
                549
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_queue",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_queue"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle queue operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423294",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_cache",
              "docstring": "Handle cache operations.",
              "line_range": [
                551,
                590
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_cache",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_cache"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle cache operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423305",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_copilot",
              "docstring": "Handle Copilot operations.",
              "line_range": [
                592,
                626
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_copilot",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_copilot"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle Copilot operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423315",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_config",
              "docstring": "Handle configuration operations.",
              "line_range": [
                628,
                660
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_config"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle configuration operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423326",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "cmd_status",
              "docstring": "Show system status.",
              "line_range": [
                662,
                676
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_status",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_status"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Show system status.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423337",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "cmd_backup",
              "docstring": "Create backup of a file.",
              "line_range": [
                678,
                693
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_backup",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_backup"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Create backup of a file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423348",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "cmd_parse",
              "docstring": "Parse project structure.",
              "line_range": [
                695,
                715
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_parse",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_parse"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Parse project structure.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423358",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "processing"
                ]
              }
            },
            {
              "name": "cmd_audit",
              "docstring": "Handle audit operations.",
              "line_range": [
                717,
                743
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_audit",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_audit"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle audit operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423369",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "handle_auto_update",
              "docstring": "Handle auto-update operations.",
              "line_range": [
                745,
                765
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.handle_auto_update",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.handle_auto_update"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle auto-update operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423379",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "handle_struct_status",
              "docstring": "Handle struct status operations.",
              "line_range": [
                767,
                791
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.handle_struct_status",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.handle_struct_status"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle struct status operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423390",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_context",
              "docstring": "Handle context operations.",
              "line_range": [
                793,
                849
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_context",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_context"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle context operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423404",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_session",
              "docstring": "Handle session operations.",
              "line_range": [
                851,
                902
              ],
              "parameters": [
                "self",
                "args"
              ],
              "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_session",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor",
                "ARCHIVE.cli_commands.CommandProcessor.cmd_session"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Handle session operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423415",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "ARCHIVE.cli_commands.CommandProcessor",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands",
            "ARCHIVE.cli_commands.CommandProcessor"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Processes CLI commands and user prompts.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423158",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class",
              "processing"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "print",
          "WorkspaceStateManager"
        ],
        "set_cache": [],
        "set_copilot": [],
        "process_command": [
          "len",
          "logging.error",
          "command_line.strip",
          "print",
          "command_line.split"
        ],
        "process_prompt": [
          "logging.warning",
          "get_optimized_context",
          "len",
          "context_info.get",
          "prompt.strip",
          "logging.error",
          "CopilotEvent",
          "context_data.get",
          "logging.info",
          "print"
        ],
        "cmd_help": [
          "print"
        ],
        "cmd_workspace": [
          "len",
          "entry.get",
          "override.get",
          "state.get",
          "args.strip",
          "result.get",
          "logging.error",
          "action_args.split",
          "boundaries.get",
          "print",
          "int",
          "permissions.get"
        ],
        "cmd_mode": [
          "args.upper",
          "len",
          "get_optimized_context",
          "args.strip",
          "args.lower",
          "result.get",
          "metrics.get",
          "context_data.get",
          "print",
          "re.findall",
          "permissions.get"
        ],
        "cmd_view": [
          "print",
          "sorted",
          "args.strip",
          "os.listdir"
        ],
        "cmd_write": [
          "len",
          "content.startswith",
          "content.endswith",
          "print",
          "args.split"
        ],
        "cmd_queue": [
          "len",
          "os.remove",
          "args.strip",
          "queue_data.get",
          "print",
          "open",
          "json.load",
          "cmd.get",
          "enumerate"
        ],
        "cmd_cache": [
          "len",
          "args.strip",
          "stats.get",
          "print",
          "os.listdir"
        ],
        "cmd_copilot": [
          "args.strip",
          "json.dumps",
          "print",
          "open",
          "json.load"
        ],
        "cmd_config": [
          "print",
          "args.strip",
          "json.dumps"
        ],
        "cmd_status": [
          "print"
        ],
        "cmd_backup": [
          "print",
          "args.strip"
        ],
        "cmd_parse": [
          "print",
          "generate_json"
        ],
        "cmd_audit": [
          "print",
          "args.strip"
        ],
        "handle_auto_update": [
          "print",
          "generate_json"
        ],
        "handle_struct_status": [
          "len",
          "os.stat",
          "struct_data.get",
          "print",
          "open",
          "json.load",
          "datetime.fromtimestamp"
        ],
        "cmd_context": [
          "get_optimized_context",
          "len",
          "args.strip",
          "metrics.get",
          "context_data.get",
          "print"
        ],
        "cmd_session": [
          "datetime.now",
          "len",
          "state.get",
          "args.strip",
          "print"
        ]
      },
      "dependencies": [
        "Any",
        "CLIConfig",
        "CLIUtils",
        "CopilotContextManager",
        "CopilotEvent",
        "Dict",
        "JSONCache",
        "List",
        "Optional",
        "Path",
        "WorkspaceStateManager",
        "cli_config",
        "cli_utils",
        "copilot",
        "create_context_orchestrator",
        "datetime",
        "generate_json",
        "get_optimized_context",
        "get_optimized_context_for_scenario",
        "initialize_copilot",
        "json",
        "llmstruct.cache",
        "llmstruct.context_orchestrator",
        "llmstruct.copilot",
        "llmstruct.generators.json_generator",
        "logging",
        "os",
        "pathlib",
        "re",
        "subprocess",
        "sys",
        "trigger_copilot_event",
        "typing",
        "workspace"
      ],
      "hash": null,
      "uid": "ARCHIVE.cli_commands",
      "uid_components": [
        "ARCHIVE",
        "ARCHIVE.cli_commands"
      ],
      "uid_type": "module",
      "artifact_id": "6788421c-55c7-c89b-3bd3-4f66df8fc494",
      "smart_summary": {
        "summary": "CLI command processing and handlers.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.422884",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module",
          "management"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 24,
        "lines_of_code": 220,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 34,
        "test_coverage": 0.0,
        "maintainability_index": 0
      },
      "markdown_anchor": {
        "id": "archive-cli_commands",
        "title": "Module: ARCHIVE.cli_commands",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: ARCHIVE.cli_commands](#archive-cli_commands)",
        "html_anchor": "<a id=\"archive-cli_commands\"></a>"
      }
    },
    {
      "module_id": "api.__init__",
      "path": "api/__init__.py",
      "category": "cli",
      "module_doc": "LLMStruct FastAPI Module\n\nProvides HTTP REST API access to LLMStruct CLI functionality.",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [],
      "hash": null,
      "uid": "api.__init__",
      "uid_components": [
        "api",
        "api.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "2141f9ab-29bd-1320-531c-39b8ee35e3f3",
      "smart_summary": {
        "summary": "LLMStruct FastAPI Module",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.423427",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 0,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "api-__init__",
        "title": "Module: api.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.__init__](#api-__init__)",
        "html_anchor": "<a id=\"api-__init__\"></a>"
      }
    },
    {
      "module_id": "api.config",
      "path": "api/config.py",
      "category": "core",
      "module_doc": "Configuration management for LLMStruct FastAPI",
      "functions": [],
      "classes": [
        {
          "name": "Settings",
          "docstring": "Application settings with environment variable support",
          "line_range": [
            12,
            43
          ],
          "methods": [],
          "bases": [
            "BaseSettings"
          ],
          "uid": "api.config.Settings",
          "uid_components": [
            "api",
            "api.config",
            "api.config.Settings"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Application settings with environment variable support",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423450",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class",
              "configuration"
            ]
          }
        }
      ],
      "callgraph": {},
      "dependencies": [
        "BaseSettings",
        "List",
        "pydantic",
        "pydantic_settings",
        "typing"
      ],
      "hash": null,
      "uid": "api.config",
      "uid_components": [
        "api",
        "api.config"
      ],
      "uid_type": "module",
      "artifact_id": "9f366aa4-017b-fddf-a2d2-1212f4b53671",
      "smart_summary": {
        "summary": "Configuration management for LLMStruct FastAPI",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.423439",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module",
          "management"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 2,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 5,
        "test_coverage": 0.0,
        "maintainability_index": 90
      },
      "markdown_anchor": {
        "id": "api-config",
        "title": "Module: api.config",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.config](#api-config)",
        "html_anchor": "<a id=\"api-config\"></a>"
      }
    },
    {
      "module_id": "api.app",
      "path": "api/app.py",
      "category": "core",
      "module_doc": "Main FastAPI application for LLMStruct",
      "functions": [
        {
          "name": "root",
          "docstring": "Root endpoint with API information",
          "line_range": [
            78,
            86
          ],
          "parameters": [],
          "decorators": [
            "app.get('/', tags=['root'])"
          ],
          "uid": "api.app.root",
          "uid_components": [
            "api",
            "api.app",
            "api.app.root"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Root endpoint with API information",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423483",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "root": [
          "app.get"
        ]
      },
      "dependencies": [
        "CORSMiddleware",
        "Depends",
        "FastAPI",
        "GZipMiddleware",
        "api_key_middleware",
        "chat",
        "config",
        "continue_adapter",
        "fastapi",
        "fastapi.middleware.cors",
        "fastapi.middleware.gzip",
        "logging",
        "middleware.auth",
        "middleware.logging",
        "request_logging_middleware",
        "routes",
        "settings",
        "system",
        "uvicorn"
      ],
      "hash": null,
      "uid": "api.app",
      "uid_components": [
        "api",
        "api.app"
      ],
      "uid_type": "module",
      "artifact_id": "43425a1e-e61c-eb5b-1299-5defb87285f8",
      "smart_summary": {
        "summary": "Main FastAPI application for LLMStruct",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.423472",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 19,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "api-app",
        "title": "Module: api.app",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.app](#api-app)",
        "html_anchor": "<a id=\"api-app\"></a>"
      }
    },
    {
      "module_id": "core.summary_system",
      "path": "core/summary_system.py",
      "category": "core",
      "module_doc": "Smart Summary System for LLMStruct v2.1\n\nProvides intelligent summary generation with fallback hierarchy:\n1. Docstring extraction\n2. LLM-generated summaries with caching\n3. Default fallbacks\n\nUses professional tools:\n- radon: Code complexity metrics\n- pydantic: Data validation and models\n- openai/anthropic: LLM integration",
      "functions": [
        {
          "name": "create_summary_system",
          "docstring": "Create Smart Summary System with optional LLM configuration.\n\nArgs:\n    llm_config: Optional LLM provider configuration\n    \nReturns:\n    Configured SmartSummarySystem instance",
          "line_range": [
            452,
            462
          ],
          "parameters": [
            "llm_config"
          ],
          "decorators": [],
          "uid": "core.summary_system.create_summary_system",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.create_summary_system"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create Smart Summary System with optional LLM configuration.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423507",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "enhance_entity_with_smart_summary",
          "docstring": "Enhance entity with smart summary and radon metrics.\n\nArgs:\n    entity: Code entity to enhance\n    summary_system: SmartSummarySystem instance\n    \nReturns:\n    Enhanced entity with smart summary and professional metrics",
          "line_range": [
            465,
            490
          ],
          "parameters": [
            "entity",
            "summary_system"
          ],
          "decorators": [],
          "uid": "core.summary_system.enhance_entity_with_smart_summary",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.enhance_entity_with_smart_summary"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Enhance entity with smart summary and radon metrics.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423520",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "Initialize Smart Summary System.\n\nArgs:\n    llm_config: LLM provider configuration\n    cache_dir: Directory for caching LLM responses",
          "line_range": [
            84,
            104
          ],
          "parameters": [
            "self",
            "llm_config",
            "cache_dir"
          ],
          "decorators": [],
          "uid": "core.summary_system.__init__",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize Smart Summary System.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423532",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_setup_llm_client",
          "docstring": "Setup LLM client based on provider.",
          "line_range": [
            106,
            120
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "core.summary_system._setup_llm_client",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system._setup_llm_client"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Setup LLM client based on provider.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423543",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "calculate_radon_metrics",
          "docstring": "Calculate code metrics using Radon.\n\nArgs:\n    code: Source code content\n    file_path: File path for caching\n    \nReturns:\n    RadonMetrics with professional complexity analysis",
          "line_range": [
            122,
            175
          ],
          "parameters": [
            "self",
            "code",
            "file_path"
          ],
          "decorators": [],
          "uid": "core.summary_system.calculate_radon_metrics",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.calculate_radon_metrics"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Calculate code metrics using Radon.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423555",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "computation"
            ]
          }
        },
        {
          "name": "extract_docstring_summary",
          "docstring": "Extract summary from docstring.\n\nArgs:\n    entity: Code entity (function, class, module)\n    \nReturns:\n    Extracted summary or None",
          "line_range": [
            177,
            199
          ],
          "parameters": [
            "self",
            "entity"
          ],
          "decorators": [],
          "uid": "core.summary_system.extract_docstring_summary",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.extract_docstring_summary"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Extract summary from docstring.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423566",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "generate_llm_summary",
          "docstring": "Generate summary using LLM.\n\nArgs:\n    entity: Code entity to summarize\n    context: Additional context (module, project info)\n    \nReturns:\n    LLM-generated summary or None",
          "line_range": [
            201,
            261
          ],
          "parameters": [
            "self",
            "entity",
            "context"
          ],
          "decorators": [],
          "uid": "core.summary_system.generate_llm_summary",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.generate_llm_summary"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate summary using LLM.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423578",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "_create_summary_prompt",
          "docstring": "Create prompt for LLM summary generation.",
          "line_range": [
            263,
            289
          ],
          "parameters": [
            "self",
            "entity",
            "context"
          ],
          "decorators": [],
          "uid": "core.summary_system._create_summary_prompt",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system._create_summary_prompt"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create prompt for LLM summary generation.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423589",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "_load_cached_summary",
          "docstring": "Load cached LLM summary.",
          "line_range": [
            291,
            311
          ],
          "parameters": [
            "self",
            "cache_key"
          ],
          "decorators": [],
          "uid": "core.summary_system._load_cached_summary",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system._load_cached_summary"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Load cached LLM summary.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423600",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_save_cached_summary",
          "docstring": "Save LLM summary to cache.",
          "line_range": [
            313,
            324
          ],
          "parameters": [
            "self",
            "cache_key",
            "summary"
          ],
          "decorators": [],
          "uid": "core.summary_system._save_cached_summary",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system._save_cached_summary"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Save LLM summary to cache.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423610",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "generate_smart_summary",
          "docstring": "Generate smart summary with fallback hierarchy.\n\nArgs:\n    entity: Code entity to summarize\n    context: Additional context\n    \nReturns:\n    CodeSummary with intelligent summary and metadata",
          "line_range": [
            326,
            386
          ],
          "parameters": [
            "self",
            "entity",
            "context"
          ],
          "decorators": [],
          "uid": "core.summary_system.generate_smart_summary",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.generate_smart_summary"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate smart summary with fallback hierarchy.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423621",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "_generate_fallback_summary",
          "docstring": "Generate fallback summary using heuristics.",
          "line_range": [
            388,
            415
          ],
          "parameters": [
            "self",
            "entity"
          ],
          "decorators": [],
          "uid": "core.summary_system._generate_fallback_summary",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system._generate_fallback_summary"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate fallback summary using heuristics.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423636",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "_generate_tags",
          "docstring": "Generate categorization tags.",
          "line_range": [
            417,
            448
          ],
          "parameters": [
            "self",
            "entity",
            "summary"
          ],
          "decorators": [],
          "uid": "core.summary_system._generate_tags",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system._generate_tags"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate categorization tags.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423647",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "SummarySource",
          "docstring": "Pydantic model for summary source tracking.",
          "line_range": [
            35,
            44
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "core.summary_system.SummarySource",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.SummarySource"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Pydantic model for summary source tracking.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423663",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "CodeSummary",
          "docstring": "Pydantic model for code entity summary.",
          "line_range": [
            47,
            54
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "core.summary_system.CodeSummary",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.CodeSummary"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Pydantic model for code entity summary.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423675",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "RadonMetrics",
          "docstring": "Pydantic model for Radon-based code metrics.",
          "line_range": [
            57,
            67
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "core.summary_system.RadonMetrics",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.RadonMetrics"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Pydantic model for Radon-based code metrics.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423689",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "LLMProvider",
          "docstring": "Pydantic model for LLM provider configuration.",
          "line_range": [
            70,
            78
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "core.summary_system.LLMProvider",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.LLMProvider"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Pydantic model for LLM provider configuration.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423700",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "SmartSummarySystem",
          "docstring": "Smart Summary System with professional tools integration.",
          "line_range": [
            81,
            448
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "Initialize Smart Summary System.\n\nArgs:\n    llm_config: LLM provider configuration\n    cache_dir: Directory for caching LLM responses",
              "line_range": [
                84,
                104
              ],
              "parameters": [
                "self",
                "llm_config",
                "cache_dir"
              ],
              "uid": "core.summary_system.SmartSummarySystem.__init__",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize Smart Summary System.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423723",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_setup_llm_client",
              "docstring": "Setup LLM client based on provider.",
              "line_range": [
                106,
                120
              ],
              "parameters": [
                "self"
              ],
              "uid": "core.summary_system.SmartSummarySystem._setup_llm_client",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem._setup_llm_client"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Setup LLM client based on provider.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423734",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "calculate_radon_metrics",
              "docstring": "Calculate code metrics using Radon.\n\nArgs:\n    code: Source code content\n    file_path: File path for caching\n    \nReturns:\n    RadonMetrics with professional complexity analysis",
              "line_range": [
                122,
                175
              ],
              "parameters": [
                "self",
                "code",
                "file_path"
              ],
              "uid": "core.summary_system.SmartSummarySystem.calculate_radon_metrics",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem.calculate_radon_metrics"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Calculate code metrics using Radon.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423884",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "computation"
                ]
              }
            },
            {
              "name": "extract_docstring_summary",
              "docstring": "Extract summary from docstring.\n\nArgs:\n    entity: Code entity (function, class, module)\n    \nReturns:\n    Extracted summary or None",
              "line_range": [
                177,
                199
              ],
              "parameters": [
                "self",
                "entity"
              ],
              "uid": "core.summary_system.SmartSummarySystem.extract_docstring_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem.extract_docstring_summary"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Extract summary from docstring.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423900",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "generate_llm_summary",
              "docstring": "Generate summary using LLM.\n\nArgs:\n    entity: Code entity to summarize\n    context: Additional context (module, project info)\n    \nReturns:\n    LLM-generated summary or None",
              "line_range": [
                201,
                261
              ],
              "parameters": [
                "self",
                "entity",
                "context"
              ],
              "uid": "core.summary_system.SmartSummarySystem.generate_llm_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem.generate_llm_summary"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate summary using LLM.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423913",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "_create_summary_prompt",
              "docstring": "Create prompt for LLM summary generation.",
              "line_range": [
                263,
                289
              ],
              "parameters": [
                "self",
                "entity",
                "context"
              ],
              "uid": "core.summary_system.SmartSummarySystem._create_summary_prompt",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem._create_summary_prompt"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Create prompt for LLM summary generation.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423925",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "_load_cached_summary",
              "docstring": "Load cached LLM summary.",
              "line_range": [
                291,
                311
              ],
              "parameters": [
                "self",
                "cache_key"
              ],
              "uid": "core.summary_system.SmartSummarySystem._load_cached_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem._load_cached_summary"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Load cached LLM summary.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423937",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_save_cached_summary",
              "docstring": "Save LLM summary to cache.",
              "line_range": [
                313,
                324
              ],
              "parameters": [
                "self",
                "cache_key",
                "summary"
              ],
              "uid": "core.summary_system.SmartSummarySystem._save_cached_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem._save_cached_summary"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Save LLM summary to cache.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423948",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "generate_smart_summary",
              "docstring": "Generate smart summary with fallback hierarchy.\n\nArgs:\n    entity: Code entity to summarize\n    context: Additional context\n    \nReturns:\n    CodeSummary with intelligent summary and metadata",
              "line_range": [
                326,
                386
              ],
              "parameters": [
                "self",
                "entity",
                "context"
              ],
              "uid": "core.summary_system.SmartSummarySystem.generate_smart_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem.generate_smart_summary"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate smart summary with fallback hierarchy.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423960",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "_generate_fallback_summary",
              "docstring": "Generate fallback summary using heuristics.",
              "line_range": [
                388,
                415
              ],
              "parameters": [
                "self",
                "entity"
              ],
              "uid": "core.summary_system.SmartSummarySystem._generate_fallback_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem._generate_fallback_summary"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate fallback summary using heuristics.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423971",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "_generate_tags",
              "docstring": "Generate categorization tags.",
              "line_range": [
                417,
                448
              ],
              "parameters": [
                "self",
                "entity",
                "summary"
              ],
              "uid": "core.summary_system.SmartSummarySystem._generate_tags",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem",
                "core.summary_system.SmartSummarySystem._generate_tags"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate categorization tags.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423982",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "core.summary_system.SmartSummarySystem",
          "uid_components": [
            "core",
            "core.summary_system",
            "core.summary_system.SmartSummarySystem"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Smart Summary System with professional tools integration.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423711",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "self._setup_llm_client",
          "LLMProvider",
          "Path"
        ],
        "_setup_llm_client": [
          "os.getenv",
          "openai.OpenAI",
          "anthropic.Anthropic"
        ],
        "calculate_radon_metrics": [
          "cc_visit",
          "mi_visit",
          "len",
          "hashlib.md5",
          "line.strip",
          "min",
          "sum",
          "code.split",
          "h_visit",
          "max",
          "RadonMetrics",
          "hasattr"
        ],
        "extract_docstring_summary": [
          "entity.get",
          "cleaned.startswith",
          "docstring.strip",
          "line.strip"
        ],
        "generate_llm_summary": [
          "self._save_cached_summary",
          "hashlib.md5",
          "entity.get",
          "self._load_cached_summary",
          "json.dumps",
          "print",
          "self._create_summary_prompt"
        ],
        "_create_summary_prompt": [
          "entity.get"
        ],
        "_load_cached_summary": [
          "cache_file.exists",
          "cache_file.unlink",
          "datetime.fromisoformat",
          "timedelta",
          "datetime.utcnow",
          "open",
          "json.load"
        ],
        "_save_cached_summary": [
          "datetime.utcnow",
          "open",
          "json.dump"
        ],
        "generate_smart_summary": [
          "self._generate_fallback_summary",
          "SummarySource",
          "self.extract_docstring_summary",
          "loop.run_until_complete",
          "hashlib.md5",
          "CodeSummary",
          "self.generate_llm_summary",
          "asyncio.new_event_loop",
          "asyncio.set_event_loop",
          "json.dumps",
          "self._generate_tags",
          "loop.close"
        ],
        "_generate_fallback_summary": [
          "entity_type.title",
          "entity.get",
          "entity_name.replace",
          "entity_name.split",
          "entity_name.startswith"
        ],
        "_generate_tags": [
          "list",
          "entity.get",
          "summary.lower",
          "tags.append",
          "set",
          "any"
        ],
        "create_summary_system": [
          "SmartSummarySystem"
        ],
        "enhance_entity_with_smart_summary": [
          "radon_metrics.model_dump",
          "entity.get",
          "smart_summary.model_dump",
          "summary_system.generate_smart_summary",
          "summary_system.calculate_radon_metrics",
          "entity.copy"
        ]
      },
      "dependencies": [
        "Any",
        "BaseModel",
        "ConfigDict",
        "Dict",
        "Field",
        "List",
        "Optional",
        "Path",
        "UIDType",
        "Union",
        "anthropic",
        "asdict",
        "asyncio",
        "cc_visit",
        "dataclass",
        "dataclasses",
        "datetime",
        "generate_uid",
        "h_visit",
        "hashlib",
        "json",
        "mi_visit",
        "openai",
        "os",
        "pathlib",
        "pydantic",
        "radon.complexity",
        "radon.metrics",
        "timedelta",
        "typing",
        "uid_generator"
      ],
      "hash": null,
      "uid": "core.summary_system",
      "uid_components": [
        "core",
        "core.summary_system"
      ],
      "uid_type": "module",
      "artifact_id": "3e7fc7e2-796e-e3c1-797f-9c8d08707ca1",
      "smart_summary": {
        "summary": "Smart Summary System for LLMStruct v2.1",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.423496",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 23,
        "lines_of_code": 130,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 31,
        "test_coverage": 0.0,
        "maintainability_index": 0
      },
      "markdown_anchor": {
        "id": "core-summary_system",
        "title": "Module: core.summary_system",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: core.summary_system](#core-summary_system)",
        "html_anchor": "<a id=\"core-summary_system\"></a>"
      }
    },
    {
      "module_id": "core.uid_generator",
      "path": "core/uid_generator.py",
      "category": "core",
      "module_doc": "UID Generator for LLMStruct v2.1 - Advanced UID System\n\nProvides stable, FQNAME-based UIDs for modules, classes, functions, and methods.\nReplaces artifact_id with consistent, human-readable identifiers.\n\nExamples:\n    - Module: llmstruct.generators.json_generator\n    - Class: llmstruct.generators.json_generator.JsonGenerator\n    - Function: llmstruct.generators.json_generator.generate_json\n    - Method: llmstruct.generators.json_generator.JsonGenerator.build_toc",
      "functions": [
        {
          "name": "normalize_path_to_module_id",
          "docstring": "Convert file path to module ID format.\n\nArgs:\n    file_path: Path to the file (e.g., \"src/llmstruct/generators/json_generator.py\")\n    root_dir: Root directory path\n    \nReturns:\n    Module ID (e.g., \"llmstruct.generators.json_generator\")",
          "line_range": [
            31,
            60
          ],
          "parameters": [
            "file_path",
            "root_dir"
          ],
          "decorators": [],
          "uid": "core.uid_generator.normalize_path_to_module_id",
          "uid_components": [
            "core",
            "core.uid_generator",
            "core.uid_generator.normalize_path_to_module_id"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Convert file path to module ID format.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424014",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "generate_uid",
          "docstring": "Generate stable UID based on FQNAME pattern.\n\nArgs:\n    uid_type: Type of the UID (module, class, function, method)\n    module_id: Module identifier (e.g., \"llmstruct.generators.json_generator\")\n    name: Name of the entity (function, class, method name)\n    class_name: Class name for methods/properties\n    parent_uid: Parent UID for nested structures\n    \nReturns:\n    Stable UID string\n    \nExamples:\n    generate_uid(UIDType.MODULE, \"llmstruct.generators.json_generator\", \"\")\n    # -> \"llmstruct.generators.json_generator\"\n    \n    generate_uid(UIDType.FUNCTION, \"llmstruct.generators.json_generator\", \"generate_json\")\n    # -> \"llmstruct.generators.json_generator.generate_json\"\n    \n    generate_uid(UIDType.METHOD, \"llmstruct.generators.json_generator\", \"build_toc\", \"JsonGenerator\")\n    # -> \"llmstruct.generators.json_generator.JsonGenerator.build_toc\"",
          "line_range": [
            63,
            112
          ],
          "parameters": [
            "uid_type",
            "module_id",
            "name",
            "class_name",
            "parent_uid"
          ],
          "decorators": [],
          "uid": "core.uid_generator.generate_uid",
          "uid_components": [
            "core",
            "core.uid_generator",
            "core.uid_generator.generate_uid"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate stable UID based on FQNAME pattern.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424028",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "generate_uid_components",
          "docstring": "Generate UID components for UI navigation.\n\nArgs:\n    uid: Full UID string\n    \nReturns:\n    List of UID components for hierarchical navigation\n    \nExample:\n    generate_uid_components(\"llmstruct.generators.json_generator.JsonGenerator.build_toc\")\n    # -> [\n    #     \"llmstruct\",\n    #     \"llmstruct.generators\", \n    #     \"llmstruct.generators.json_generator\",\n    #     \"llmstruct.generators.json_generator.JsonGenerator\",\n    #     \"llmstruct.generators.json_generator.JsonGenerator.build_toc\"\n    # ]",
          "line_range": [
            115,
            142
          ],
          "parameters": [
            "uid"
          ],
          "decorators": [],
          "uid": "core.uid_generator.generate_uid_components",
          "uid_components": [
            "core",
            "core.uid_generator",
            "core.uid_generator.generate_uid_components"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate UID components for UI navigation.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424041",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "create_stable_uid",
          "docstring": "Create stable UID with components and metadata.\n\nArgs:\n    entity_type: Type of entity (module, class, function, method)\n    module_path: Path to module file  \n    root_dir: Root directory\n    entity_name: Name of the entity\n    class_name: Class name for methods\n    **kwargs: Additional metadata\n    \nReturns:\n    Dictionary with uid, uid_components, and metadata",
          "line_range": [
            145,
            198
          ],
          "parameters": [
            "entity_type",
            "module_path",
            "root_dir",
            "entity_name",
            "class_name"
          ],
          "decorators": [],
          "uid": "core.uid_generator.create_stable_uid",
          "uid_components": [
            "core",
            "core.uid_generator",
            "core.uid_generator.create_stable_uid"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create stable UID with components and metadata.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424053",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "create_legacy_artifact_id",
          "docstring": "Create legacy artifact_id from UID for backward compatibility.\n\nArgs:\n    uid: The UID string\n    \nReturns:\n    UUID-style string based on UID hash",
          "line_range": [
            201,
            215
          ],
          "parameters": [
            "uid"
          ],
          "decorators": [],
          "uid": "core.uid_generator.create_legacy_artifact_id",
          "uid_components": [
            "core",
            "core.uid_generator",
            "core.uid_generator.create_legacy_artifact_id"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create legacy artifact_id from UID for backward compatibility.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424066",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "migrate_artifact_id_to_uid",
          "docstring": "Migrate existing artifact_id fields to UID system.\n\nArgs:\n    data: Existing JSON data with artifact_id fields\n    root_dir: Root directory for path normalization\n    \nReturns:\n    Updated data with UID fields",
          "line_range": [
            219,
            285
          ],
          "parameters": [
            "data",
            "root_dir"
          ],
          "decorators": [],
          "uid": "core.uid_generator.migrate_artifact_id_to_uid",
          "uid_components": [
            "core",
            "core.uid_generator",
            "core.uid_generator.migrate_artifact_id_to_uid"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Migrate existing artifact_id fields to UID system.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424078",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "UIDType",
          "docstring": "Types of UIDs that can be generated.",
          "line_range": [
            20,
            28
          ],
          "methods": [],
          "bases": [
            "Enum"
          ],
          "uid": "core.uid_generator.UIDType",
          "uid_components": [
            "core",
            "core.uid_generator",
            "core.uid_generator.UIDType"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Types of UIDs that can be generated.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424090",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "normalize_path_to_module_id": [
          "path.endswith",
          "module_id.endswith",
          "module_id.startswith",
          "file_path.replace",
          "path.replace"
        ],
        "generate_uid": [],
        "generate_uid_components": [
          "uid.split",
          "range",
          "len",
          "components.append"
        ],
        "create_stable_uid": [
          "uid_type_map.get",
          "normalize_path_to_module_id",
          "generate_uid",
          "generate_uid_components"
        ],
        "create_legacy_artifact_id": [
          "uid.encode",
          "hashlib.md5"
        ],
        "migrate_artifact_id_to_uid": [
          "data.get",
          "isinstance",
          "generate_uid_components",
          "generate_uid",
          "migrate_artifact_id_to_uid",
          "data.items",
          "create_legacy_artifact_id"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "Enum",
        "List",
        "Optional",
        "Union",
        "enum",
        "hashlib",
        "re",
        "typing"
      ],
      "hash": null,
      "uid": "core.uid_generator",
      "uid_components": [
        "core",
        "core.uid_generator"
      ],
      "uid_type": "module",
      "artifact_id": "eb3a07b8-b2e7-0445-0322-58c58e7b2ece",
      "smart_summary": {
        "summary": "UID Generator for LLMStruct v2.1 - Advanced UID System",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.424001",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 8,
        "lines_of_code": 60,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 10,
        "test_coverage": 0.0,
        "maintainability_index": 60
      },
      "markdown_anchor": {
        "id": "core-uid_generator",
        "title": "Module: core.uid_generator",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: core.uid_generator](#core-uid_generator)",
        "html_anchor": "<a id=\"core-uid_generator\"></a>"
      }
    },
    {
      "module_id": "core.__init__",
      "path": "core/__init__.py",
      "category": "cli",
      "module_doc": "Core LLMStruct v2.1 components for advanced processing.",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [
        "CodeMetrics",
        "CodeSummary",
        "HierarchicalJSON",
        "LLMProvider",
        "MarkdownAnchor",
        "RadonMetrics",
        "SchemaValidationSystem",
        "SmartSummarySystem",
        "SummarySource",
        "UIDType",
        "ValidationLevel",
        "ValidationResult",
        "create_schema_validator",
        "create_stable_uid",
        "create_summary_system",
        "enhance_entity_with_smart_summary",
        "enhance_json_structure",
        "generate_uid",
        "generate_uid_components",
        "json_structure",
        "schema_validation",
        "summary_system",
        "uid_generator",
        "validate_llmstruct_file",
        "validate_llmstruct_json"
      ],
      "hash": null,
      "uid": "core.__init__",
      "uid_components": [
        "core",
        "core.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "1a8516bf-0d1f-25b1-6fa3-b2be12288f6b",
      "smart_summary": {
        "summary": "Core LLMStruct v2.1 components for advanced processing.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.424102",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 25,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "core-__init__",
        "title": "Module: core.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: core.__init__](#core-__init__)",
        "html_anchor": "<a id=\"core-__init__\"></a>"
      }
    },
    {
      "module_id": "core.schema_validation",
      "path": "core/schema_validation.py",
      "category": "core",
      "module_doc": "Schema Validation System for LLMStruct v2.1\n\nComprehensive validation system using professional tools:\n- jsonschema: JSON Schema validation (industry standard)\n- cerberus: Flexible validation rules\n- marshmallow: Serialization/deserialization with validation\n- pydantic: Type-safe models with validation\n\nProvides multi-layer validation:\n1. Structure validation (JSON Schema)\n2. Content validation (Cerberus rules)\n3. Type validation (Pydantic models)\n4. Custom business logic validation",
      "functions": [
        {
          "name": "create_schema_validator",
          "docstring": "Create Schema Validation System.\n\nArgs:\n    schema_dir: Directory for validation schemas\n    \nReturns:\n    Configured SchemaValidationSystem instance",
          "line_range": [
            932,
            942
          ],
          "parameters": [
            "schema_dir"
          ],
          "decorators": [],
          "uid": "core.schema_validation.create_schema_validator",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.create_schema_validator"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create Schema Validation System.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424130",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "validate_llmstruct_json",
          "docstring": "Quick validation of LLMStruct JSON data.\n\nArgs:\n    data: JSON data to validate\n    level: Validation level\n    \nReturns:\n    ValidationResult",
          "line_range": [
            945,
            957
          ],
          "parameters": [
            "data",
            "level"
          ],
          "decorators": [],
          "uid": "core.schema_validation.validate_llmstruct_json",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.validate_llmstruct_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Quick validation of LLMStruct JSON data.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424142",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "validate_llmstruct_file",
          "docstring": "Quick validation of LLMStruct JSON file.\n\nArgs:\n    file_path: Path to JSON file\n    level: Validation level\n    \nReturns:\n    ValidationResult",
          "line_range": [
            960,
            972
          ],
          "parameters": [
            "file_path",
            "level"
          ],
          "decorators": [],
          "uid": "core.schema_validation.validate_llmstruct_file",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.validate_llmstruct_file"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Quick validation of LLMStruct JSON file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424154",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "Initialize Schema Validation System.\n\nArgs:\n    schema_dir: Directory containing validation schemas",
          "line_range": [
            73,
            92
          ],
          "parameters": [
            "self",
            "schema_dir"
          ],
          "decorators": [],
          "uid": "core.schema_validation.__init__",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize Schema Validation System.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424165",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_load_json_schemas",
          "docstring": "Load JSON Schema definitions.",
          "line_range": [
            94,
            269
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "core.schema_validation._load_json_schemas",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation._load_json_schemas"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Load JSON Schema definitions.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424177",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_load_cerberus_schemas",
          "docstring": "Load Cerberus validation rules.",
          "line_range": [
            271,
            344
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "core.schema_validation._load_cerberus_schemas",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation._load_cerberus_schemas"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Load Cerberus validation rules.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424191",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_create_marshmallow_schema",
          "docstring": "Create Marshmallow schema for serialization validation.",
          "line_range": [
            346,
            378
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "core.schema_validation._create_marshmallow_schema",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation._create_marshmallow_schema"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Create Marshmallow schema for serialization validation.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424219",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "_define_validation_levels",
          "docstring": "Define validation levels with increasing strictness.",
          "line_range": [
            380,
            415
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "core.schema_validation._define_validation_levels",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation._define_validation_levels"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Define validation levels with increasing strictness.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424231",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "validate_json_schema",
          "docstring": "Validate data against JSON Schema.\n\nArgs:\n    data: Data to validate\n    schema_name: Schema to use for validation\n    \nReturns:\n    Tuple of (is_valid, errors)",
          "line_range": [
            417,
            459
          ],
          "parameters": [
            "self",
            "data",
            "schema_name"
          ],
          "decorators": [],
          "uid": "core.schema_validation.validate_json_schema",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.validate_json_schema"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Validate data against JSON Schema.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424243",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "validate_content_rules",
          "docstring": "Validate data using simple content rules (Cerberus alternative).\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
          "line_range": [
            461,
            547
          ],
          "parameters": [
            "self",
            "data"
          ],
          "decorators": [],
          "uid": "core.schema_validation.validate_content_rules",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.validate_content_rules"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Validate data using simple content rules (Cerberus alternative).",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424254",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "validate_marshmallow_schema",
          "docstring": "Validate data using Marshmallow schema.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
          "line_range": [
            549,
            580
          ],
          "parameters": [
            "self",
            "data"
          ],
          "decorators": [],
          "uid": "core.schema_validation.validate_marshmallow_schema",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.validate_marshmallow_schema"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Validate data using Marshmallow schema.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424266",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "validate_uid_consistency",
          "docstring": "Validate UID consistency across the structure.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
          "line_range": [
            582,
            679
          ],
          "parameters": [
            "self",
            "data"
          ],
          "decorators": [],
          "uid": "core.schema_validation.validate_uid_consistency",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.validate_uid_consistency"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Validate UID consistency across the structure.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424278",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "validate_naming_conventions",
          "docstring": "Validate naming conventions.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
          "line_range": [
            681,
            726
          ],
          "parameters": [
            "self",
            "data"
          ],
          "decorators": [],
          "uid": "core.schema_validation.validate_naming_conventions",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.validate_naming_conventions"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Validate naming conventions.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424290",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "validate_quality_checks",
          "docstring": "Perform quality checks on the data.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
          "line_range": [
            728,
            777
          ],
          "parameters": [
            "self",
            "data"
          ],
          "decorators": [],
          "uid": "core.schema_validation.validate_quality_checks",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.validate_quality_checks"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Perform quality checks on the data.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424302",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "calculate_validation_score",
          "docstring": "Calculate validation score based on errors and warnings.\n\nArgs:\n    errors: List of validation errors\n    warnings: List of validation warnings\n    total_entities: Total number of entities validated\n    \nReturns:\n    Validation score (0-100)",
          "line_range": [
            779,
            804
          ],
          "parameters": [
            "self",
            "errors",
            "warnings",
            "total_entities"
          ],
          "decorators": [],
          "uid": "core.schema_validation.calculate_validation_score",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.calculate_validation_score"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Calculate validation score based on errors and warnings.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424313",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "computation"
            ]
          }
        },
        {
          "name": "validate",
          "docstring": "Comprehensive validation of LLMStruct data.\n\nArgs:\n    data: Data to validate\n    level: Validation level (basic, standard, strict, enterprise)\n    \nReturns:\n    ValidationResult with comprehensive validation information",
          "line_range": [
            806,
            888
          ],
          "parameters": [
            "self",
            "data",
            "level"
          ],
          "decorators": [],
          "uid": "core.schema_validation.validate",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.validate"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Comprehensive validation of LLMStruct data.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424325",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "validate_file",
          "docstring": "Validate JSON file.\n\nArgs:\n    file_path: Path to JSON file\n    level: Validation level\n    \nReturns:\n    ValidationResult",
          "line_range": [
            890,
            928
          ],
          "parameters": [
            "self",
            "file_path",
            "level"
          ],
          "decorators": [],
          "uid": "core.schema_validation.validate_file",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.validate_file"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Validate JSON file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424337",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "ValidationResult",
          "docstring": "Pydantic model for validation results.",
          "line_range": [
            37,
            48
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "core.schema_validation.ValidationResult",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.ValidationResult"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Pydantic model for validation results.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424352",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ValidationLevel",
          "docstring": "Pydantic model for validation level configuration.",
          "line_range": [
            51,
            59
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "core.schema_validation.ValidationLevel",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.ValidationLevel"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Pydantic model for validation level configuration.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424365",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "SchemaValidationSystem",
          "docstring": "Comprehensive Schema Validation System using professional tools.\n\nValidation Layers:\n1. JSON Schema - Structure validation\n2. Cerberus - Content validation  \n3. Pydantic - Type validation\n4. Custom - Business logic validation",
          "line_range": [
            62,
            928
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "Initialize Schema Validation System.\n\nArgs:\n    schema_dir: Directory containing validation schemas",
              "line_range": [
                73,
                92
              ],
              "parameters": [
                "self",
                "schema_dir"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem.__init__",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize Schema Validation System.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424392",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_load_json_schemas",
              "docstring": "Load JSON Schema definitions.",
              "line_range": [
                94,
                269
              ],
              "parameters": [
                "self"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem._load_json_schemas",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem._load_json_schemas"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Load JSON Schema definitions.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424408",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_load_cerberus_schemas",
              "docstring": "Load Cerberus validation rules.",
              "line_range": [
                271,
                344
              ],
              "parameters": [
                "self"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem._load_cerberus_schemas",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem._load_cerberus_schemas"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Load Cerberus validation rules.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424422",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_create_marshmallow_schema",
              "docstring": "Create Marshmallow schema for serialization validation.",
              "line_range": [
                346,
                378
              ],
              "parameters": [
                "self"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem._create_marshmallow_schema",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem._create_marshmallow_schema"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Create Marshmallow schema for serialization validation.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424434",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "_define_validation_levels",
              "docstring": "Define validation levels with increasing strictness.",
              "line_range": [
                380,
                415
              ],
              "parameters": [
                "self"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem._define_validation_levels",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem._define_validation_levels"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Define validation levels with increasing strictness.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424446",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "validate_json_schema",
              "docstring": "Validate data against JSON Schema.\n\nArgs:\n    data: Data to validate\n    schema_name: Schema to use for validation\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                417,
                459
              ],
              "parameters": [
                "self",
                "data",
                "schema_name"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem.validate_json_schema",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem.validate_json_schema"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Validate data against JSON Schema.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424457",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_content_rules",
              "docstring": "Validate data using simple content rules (Cerberus alternative).\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                461,
                547
              ],
              "parameters": [
                "self",
                "data"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem.validate_content_rules",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem.validate_content_rules"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Validate data using simple content rules (Cerberus alternative).",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424469",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_marshmallow_schema",
              "docstring": "Validate data using Marshmallow schema.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                549,
                580
              ],
              "parameters": [
                "self",
                "data"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem.validate_marshmallow_schema",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem.validate_marshmallow_schema"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Validate data using Marshmallow schema.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424480",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_uid_consistency",
              "docstring": "Validate UID consistency across the structure.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                582,
                679
              ],
              "parameters": [
                "self",
                "data"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem.validate_uid_consistency",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem.validate_uid_consistency"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Validate UID consistency across the structure.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424492",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_naming_conventions",
              "docstring": "Validate naming conventions.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                681,
                726
              ],
              "parameters": [
                "self",
                "data"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem.validate_naming_conventions",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem.validate_naming_conventions"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Validate naming conventions.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424503",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_quality_checks",
              "docstring": "Perform quality checks on the data.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                728,
                777
              ],
              "parameters": [
                "self",
                "data"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem.validate_quality_checks",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem.validate_quality_checks"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Perform quality checks on the data.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424515",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "calculate_validation_score",
              "docstring": "Calculate validation score based on errors and warnings.\n\nArgs:\n    errors: List of validation errors\n    warnings: List of validation warnings\n    total_entities: Total number of entities validated\n    \nReturns:\n    Validation score (0-100)",
              "line_range": [
                779,
                804
              ],
              "parameters": [
                "self",
                "errors",
                "warnings",
                "total_entities"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem.calculate_validation_score",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem.calculate_validation_score"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Calculate validation score based on errors and warnings.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424527",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "computation"
                ]
              }
            },
            {
              "name": "validate",
              "docstring": "Comprehensive validation of LLMStruct data.\n\nArgs:\n    data: Data to validate\n    level: Validation level (basic, standard, strict, enterprise)\n    \nReturns:\n    ValidationResult with comprehensive validation information",
              "line_range": [
                806,
                888
              ],
              "parameters": [
                "self",
                "data",
                "level"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem.validate",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem.validate"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Comprehensive validation of LLMStruct data.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424539",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "validate_file",
              "docstring": "Validate JSON file.\n\nArgs:\n    file_path: Path to JSON file\n    level: Validation level\n    \nReturns:\n    ValidationResult",
              "line_range": [
                890,
                928
              ],
              "parameters": [
                "self",
                "file_path",
                "level"
              ],
              "uid": "core.schema_validation.SchemaValidationSystem.validate_file",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem",
                "core.schema_validation.SchemaValidationSystem.validate_file"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Validate JSON file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424550",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "core.schema_validation.SchemaValidationSystem",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.SchemaValidationSystem"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Comprehensive Schema Validation System using professional tools.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424377",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "MetadataSchema",
          "docstring": "",
          "line_range": [
            349,
            357
          ],
          "methods": [],
          "bases": [
            "Schema"
          ],
          "uid": "core.schema_validation.MetadataSchema",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.MetadataSchema"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Defines the structure and properties of metadata for organizing and managing data in a standardized format.",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:33.626627",
              "confidence": 0.7,
              "cache_key": "73f7d1f6"
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ModuleSchema",
          "docstring": "",
          "line_range": [
            359,
            368
          ],
          "methods": [],
          "bases": [
            "Schema"
          ],
          "uid": "core.schema_validation.ModuleSchema",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.ModuleSchema"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Defines data structure for modular components in a software system\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:34.207958",
              "confidence": 0.7,
              "cache_key": "529be634"
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "LLMStructSchema",
          "docstring": "",
          "line_range": [
            370,
            376
          ],
          "methods": [],
          "bases": [
            "Schema"
          ],
          "uid": "core.schema_validation.LLMStructSchema",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.LLMStructSchema"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Defines data structures for representing complex hierarchical schemas\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:34.728421",
              "confidence": 0.7,
              "cache_key": "179c1fb9"
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "Meta",
          "docstring": "",
          "line_range": [
            350,
            351
          ],
          "methods": [],
          "bases": [],
          "uid": "core.schema_validation.Meta",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.Meta"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Meta class provides a framework for dynamic metadata manipulation and retrieval.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:35.279640",
              "confidence": 0.7,
              "cache_key": "2a0d484c"
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "Meta",
          "docstring": "",
          "line_range": [
            360,
            361
          ],
          "methods": [],
          "bases": [],
          "uid": "core.schema_validation.Meta",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.Meta"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Analyzes and manipulates metadata for efficient data organization and retrieval.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:36.144032",
              "confidence": 0.7,
              "cache_key": "ee3d09d0"
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "Meta",
          "docstring": "",
          "line_range": [
            371,
            372
          ],
          "methods": [],
          "bases": [],
          "uid": "core.schema_validation.Meta",
          "uid_components": [
            "core",
            "core.schema_validation",
            "core.schema_validation.Meta"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Meta class provides a flexible framework for creating and manipulating metadata in a structured manner.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:36.843317",
              "confidence": 0.7,
              "cache_key": "a6c5d260"
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "self._define_validation_levels",
          "self._create_marshmallow_schema",
          "self._load_cerberus_schemas",
          "Validator",
          "self._load_json_schemas",
          "Path"
        ],
        "_load_json_schemas": [],
        "_load_cerberus_schemas": [],
        "_create_marshmallow_schema": [
          "fields.List",
          "fields.Str",
          "fields.Nested",
          "LLMStructSchema",
          "fields.Dict"
        ],
        "_define_validation_levels": [
          "ValidationLevel"
        ],
        "validate_json_schema": [
          "list",
          "errors.append",
          "str",
          "validate"
        ],
        "validate_content_rules": [
          "path.endswith",
          "module_id.replace",
          "len",
          "errors.append",
          "func.get",
          "module.get",
          "enumerate",
          "str",
          "metadata.get"
        ],
        "validate_marshmallow_schema": [
          "errors.append",
          "str"
        ],
        "validate_uid_consistency": [
          "toc_item.get",
          "data.get",
          "len",
          "errors.append",
          "all_uids.add",
          "set",
          "cls.get",
          "func.get",
          "module.get",
          "method.get",
          "enumerate"
        ],
        "validate_naming_conventions": [
          "re.compile",
          "data.get",
          "cls.get",
          "snake_case_pattern.match",
          "pascal_case_pattern.match",
          "func.get",
          "module.get",
          "warnings.append",
          "enumerate"
        ],
        "validate_quality_checks": [
          "len",
          "data.get",
          "radon_metrics.get",
          "func.get",
          "warnings.append",
          "module.get",
          "enumerate"
        ],
        "calculate_validation_score": [
          "max",
          "len",
          "min"
        ],
        "validate": [
          "self.validate_marshmallow_schema",
          "len",
          "data.get",
          "all_errors.extend",
          "all_warnings.append",
          "cls.get",
          "self.calculate_validation_score",
          "self.validate_uid_consistency",
          "ValidationResult",
          "ValueError",
          "self.validate_quality_checks",
          "module.get",
          "all_warnings.extend",
          "self.validate_json_schema",
          "self.validate_content_rules",
          "self.validate_naming_conventions"
        ],
        "validate_file": [
          "self.validate",
          "ValidationResult",
          "open",
          "json.load",
          "str"
        ],
        "create_schema_validator": [
          "SchemaValidationSystem"
        ],
        "validate_llmstruct_json": [
          "validator.validate",
          "create_schema_validator"
        ],
        "validate_llmstruct_file": [
          "validator.validate_file",
          "create_schema_validator"
        ]
      },
      "dependencies": [
        "Any",
        "BaseModel",
        "ConfigDict",
        "Dict",
        "Draft7Validator",
        "Field",
        "List",
        "Optional",
        "Path",
        "Schema",
        "Tuple",
        "UIDType",
        "Union",
        "ValidationError",
        "Validator",
        "cerberus",
        "dataclass",
        "dataclasses",
        "datetime",
        "fields",
        "json",
        "jsonschema",
        "marshmallow",
        "os",
        "pathlib",
        "pydantic",
        "re",
        "typing",
        "uid_generator",
        "validate"
      ],
      "hash": null,
      "uid": "core.schema_validation",
      "uid_components": [
        "core",
        "core.schema_validation"
      ],
      "uid_type": "module",
      "artifact_id": "d6e53b97-045a-8c06-bfc5-40dac11c6227",
      "smart_summary": {
        "summary": "Schema Validation System for LLMStruct v2.1",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:32.424118",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 35,
        "lines_of_code": 170,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 30,
        "test_coverage": 0.0,
        "maintainability_index": 0
      },
      "markdown_anchor": {
        "id": "core-schema_validation",
        "title": "Module: core.schema_validation",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: core.schema_validation](#core-schema_validation)",
        "html_anchor": "<a id=\"core-schema_validation\"></a>"
      }
    },
    {
      "module_id": "core.json_structure",
      "path": "core/json_structure.py",
      "category": "core",
      "module_doc": "Enhanced JSON Structure for LLMStruct v2.1\n\nProvides hierarchical JSON organization, built-in metrics, and markdown anchors.\nOptimizes JSON structure for LLM consumption and human readability.",
      "functions": [
        {
          "name": "enhance_json_structure",
          "docstring": "Convenience function to enhance JSON structure.\n\nArgs:\n    json_data: Original JSON from generators\n    \nReturns:\n    Enhanced JSON with v2.1 features",
          "line_range": [
            207,
            218
          ],
          "parameters": [
            "json_data"
          ],
          "decorators": [],
          "uid": "core.json_structure.enhance_json_structure",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure.enhance_json_structure"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Convenience function to enhance JSON structure.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:36.843401",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "to_dict",
          "docstring": "Convert to dictionary for JSON serialization.",
          "line_range": [
            26,
            28
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "core.json_structure.to_dict",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure.to_dict"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Convert to dictionary for JSON serialization.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:36.843424",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "to_markdown_link",
          "docstring": "Generate markdown link.",
          "line_range": [
            39,
            41
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "core.json_structure.to_markdown_link",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure.to_markdown_link"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate markdown link.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:36.843445",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "to_anchor_tag",
          "docstring": "Generate HTML anchor tag.",
          "line_range": [
            43,
            45
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "core.json_structure.to_anchor_tag",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure.to_anchor_tag"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate HTML anchor tag.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:36.843465",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            51,
            54
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "core.json_structure.__init__",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes an object instance with default values and sets up necessary attributes\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:37.629513",
              "confidence": 0.7,
              "cache_key": "52308daf"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "generate_enhanced_json",
          "docstring": "Generate enhanced JSON with hierarchical structure and metrics.\n\nArgs:\n    base_json: Original JSON structure from generators\n    \nReturns:\n    Enhanced JSON with hierarchy, metrics, and anchors",
          "line_range": [
            56,
            104
          ],
          "parameters": [
            "self",
            "base_json"
          ],
          "decorators": [],
          "uid": "core.json_structure.generate_enhanced_json",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure.generate_enhanced_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate enhanced JSON with hierarchical structure and metrics.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:37.629564",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "organize_modules_hierarchically",
          "docstring": "Organize modules in hierarchical structure for better navigation.",
          "line_range": [
            106,
            124
          ],
          "parameters": [
            "self",
            "modules"
          ],
          "decorators": [],
          "uid": "core.json_structure.organize_modules_hierarchically",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure.organize_modules_hierarchically"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Organize modules in hierarchical structure for better navigation.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:37.629594",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_enhance_module",
          "docstring": "Enhance module with metrics and anchors.",
          "line_range": [
            126,
            138
          ],
          "parameters": [
            "self",
            "module"
          ],
          "decorators": [],
          "uid": "core.json_structure._enhance_module",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure._enhance_module"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Enhance module with metrics and anchors.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:37.629610",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_calculate_module_metrics",
          "docstring": "Calculate built-in metrics for module.",
          "line_range": [
            140,
            154
          ],
          "parameters": [
            "self",
            "module"
          ],
          "decorators": [],
          "uid": "core.json_structure._calculate_module_metrics",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure._calculate_module_metrics"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Calculate built-in metrics for module.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:37.629622",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "computation"
            ]
          }
        },
        {
          "name": "_generate_markdown_anchor",
          "docstring": "Generate markdown anchor for entity.",
          "line_range": [
            156,
            187
          ],
          "parameters": [
            "self",
            "uid",
            "entity_type",
            "name"
          ],
          "decorators": [],
          "uid": "core.json_structure._generate_markdown_anchor",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure._generate_markdown_anchor"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate markdown anchor for entity.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:37.629635",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "_calculate_global_metrics",
          "docstring": "Calculate global project metrics.",
          "line_range": [
            189,
            203
          ],
          "parameters": [
            "self",
            "json_data"
          ],
          "decorators": [],
          "uid": "core.json_structure._calculate_global_metrics",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure._calculate_global_metrics"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Calculate global project metrics.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:37.629647",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "computation"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "CodeMetrics",
          "docstring": "Built-in metrics for code entities.",
          "line_range": [
            16,
            28
          ],
          "methods": [
            {
              "name": "to_dict",
              "docstring": "Convert to dictionary for JSON serialization.",
              "line_range": [
                26,
                28
              ],
              "parameters": [
                "self"
              ],
              "uid": "core.json_structure.CodeMetrics.to_dict",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.CodeMetrics",
                "core.json_structure.CodeMetrics.to_dict"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Convert to dictionary for JSON serialization.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629672",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "core.json_structure.CodeMetrics",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure.CodeMetrics"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Built-in metrics for code entities.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:37.629660",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "MarkdownAnchor",
          "docstring": "Markdown anchor for documentation generation.",
          "line_range": [
            32,
            45
          ],
          "methods": [
            {
              "name": "to_markdown_link",
              "docstring": "Generate markdown link.",
              "line_range": [
                39,
                41
              ],
              "parameters": [
                "self"
              ],
              "uid": "core.json_structure.MarkdownAnchor.to_markdown_link",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.MarkdownAnchor",
                "core.json_structure.MarkdownAnchor.to_markdown_link"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate markdown link.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629695",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "to_anchor_tag",
              "docstring": "Generate HTML anchor tag.",
              "line_range": [
                43,
                45
              ],
              "parameters": [
                "self"
              ],
              "uid": "core.json_structure.MarkdownAnchor.to_anchor_tag",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.MarkdownAnchor",
                "core.json_structure.MarkdownAnchor.to_anchor_tag"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate HTML anchor tag.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629706",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "core.json_structure.MarkdownAnchor",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure.MarkdownAnchor"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Markdown anchor for documentation generation.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:37.629683",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "HierarchicalJSON",
          "docstring": "Enhanced JSON structure with hierarchy and metrics.",
          "line_range": [
            48,
            203
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                51,
                54
              ],
              "parameters": [
                "self"
              ],
              "uid": "core.json_structure.HierarchicalJSON.__init__",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.HierarchicalJSON",
                "core.json_structure.HierarchicalJSON.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initializes a new instance of the class and sets its initial state and attributes.",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:38.158687",
                  "confidence": 0.7,
                  "cache_key": "67ebe3b4"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "generate_enhanced_json",
              "docstring": "Generate enhanced JSON with hierarchical structure and metrics.\n\nArgs:\n    base_json: Original JSON structure from generators\n    \nReturns:\n    Enhanced JSON with hierarchy, metrics, and anchors",
              "line_range": [
                56,
                104
              ],
              "parameters": [
                "self",
                "base_json"
              ],
              "uid": "core.json_structure.HierarchicalJSON.generate_enhanced_json",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.HierarchicalJSON",
                "core.json_structure.HierarchicalJSON.generate_enhanced_json"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate enhanced JSON with hierarchical structure and metrics.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:38.158728",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "organize_modules_hierarchically",
              "docstring": "Organize modules in hierarchical structure for better navigation.",
              "line_range": [
                106,
                124
              ],
              "parameters": [
                "self",
                "modules"
              ],
              "uid": "core.json_structure.HierarchicalJSON.organize_modules_hierarchically",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.HierarchicalJSON",
                "core.json_structure.HierarchicalJSON.organize_modules_hierarchically"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Organize modules in hierarchical structure for better navigation.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:38.158746",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_enhance_module",
              "docstring": "Enhance module with metrics and anchors.",
              "line_range": [
                126,
                138
              ],
              "parameters": [
                "self",
                "module"
              ],
              "uid": "core.json_structure.HierarchicalJSON._enhance_module",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.HierarchicalJSON",
                "core.json_structure.HierarchicalJSON._enhance_module"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Enhance module with metrics and anchors.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:38.158760",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_calculate_module_metrics",
              "docstring": "Calculate built-in metrics for module.",
              "line_range": [
                140,
                154
              ],
              "parameters": [
                "self",
                "module"
              ],
              "uid": "core.json_structure.HierarchicalJSON._calculate_module_metrics",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.HierarchicalJSON",
                "core.json_structure.HierarchicalJSON._calculate_module_metrics"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Calculate built-in metrics for module.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:38.158772",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "computation"
                ]
              }
            },
            {
              "name": "_generate_markdown_anchor",
              "docstring": "Generate markdown anchor for entity.",
              "line_range": [
                156,
                187
              ],
              "parameters": [
                "self",
                "uid",
                "entity_type",
                "name"
              ],
              "uid": "core.json_structure.HierarchicalJSON._generate_markdown_anchor",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.HierarchicalJSON",
                "core.json_structure.HierarchicalJSON._generate_markdown_anchor"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate markdown anchor for entity.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:38.158784",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "_calculate_global_metrics",
              "docstring": "Calculate global project metrics.",
              "line_range": [
                189,
                203
              ],
              "parameters": [
                "self",
                "json_data"
              ],
              "uid": "core.json_structure.HierarchicalJSON._calculate_global_metrics",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.HierarchicalJSON",
                "core.json_structure.HierarchicalJSON._calculate_global_metrics"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Calculate global project metrics.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:38.158796",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "computation"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "core.json_structure.HierarchicalJSON",
          "uid_components": [
            "core",
            "core.json_structure",
            "core.json_structure.HierarchicalJSON"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Enhanced JSON structure with hierarchy and metrics.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:37.629717",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "to_dict": [
          "asdict"
        ],
        "to_markdown_link": [],
        "to_anchor_tag": [],
        "__init__": [
          "defaultdict"
        ],
        "generate_enhanced_json": [
          "self._calculate_global_metrics",
          "base_json.copy",
          "self.organize_modules_hierarchically",
          "self._enhance_module",
          "item.get",
          "self._generate_markdown_anchor"
        ],
        "organize_modules_hierarchically": [
          "len",
          "defaultdict",
          "self._enhance_module",
          "module_id.split",
          "dict",
          "module.get"
        ],
        "_enhance_module": [
          "module.copy",
          "self._calculate_module_metrics",
          "module.get",
          "self._generate_markdown_anchor"
        ],
        "_calculate_module_metrics": [
          "len",
          "sum",
          "func.get",
          "module.get",
          "max",
          "CodeMetrics"
        ],
        "_generate_markdown_anchor": [
          "anchor.to_markdown_link",
          "MarkdownAnchor",
          "uid.lower",
          "anchor.to_anchor_tag"
        ],
        "_calculate_global_metrics": [
          "m.get",
          "len",
          "round",
          "sum",
          "json_data.get",
          "max"
        ],
        "enhance_json_structure": [
          "enhancer.generate_enhanced_json",
          "HierarchicalJSON"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "List",
        "Optional",
        "Set",
        "Tuple",
        "asdict",
        "collections",
        "dataclass",
        "dataclasses",
        "defaultdict",
        "json",
        "math",
        "typing"
      ],
      "hash": null,
      "uid": "core.json_structure",
      "uid_components": [
        "core",
        "core.json_structure"
      ],
      "uid_type": "module",
      "artifact_id": "ac3599fe-be69-efa3-dbff-3d2e7827a049",
      "smart_summary": {
        "summary": "Enhanced JSON Structure for LLMStruct v2.1",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:36.843373",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 17,
        "lines_of_code": 110,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 14,
        "test_coverage": 0.0,
        "maintainability_index": 15
      },
      "markdown_anchor": {
        "id": "core-json_structure",
        "title": "Module: core.json_structure",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: core.json_structure](#core-json_structure)",
        "html_anchor": "<a id=\"core-json_structure\"></a>"
      }
    },
    {
      "module_id": "validators.__init__",
      "path": "validators/__init__.py",
      "category": "cli",
      "module_doc": "Validation modules for ensuring LLMStruct JSON complies with the schema.",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [
        "json_validator",
        "validate_struct_json"
      ],
      "hash": null,
      "uid": "validators.__init__",
      "uid_components": [
        "validators",
        "validators.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "83c9968a-b3cf-4350-31da-19d9a2c06915",
      "smart_summary": {
        "summary": "Validation modules for ensuring LLMStruct JSON complies with the schema.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:38.158809",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 2,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "validators-__init__",
        "title": "Module: validators.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: validators.__init__](#validators-__init__)",
        "html_anchor": "<a id=\"validators-__init__\"></a>"
      }
    },
    {
      "module_id": "validators.json_validator",
      "path": "validators/json_validator.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "validate_struct_json",
          "docstring": "Validate a single JSON file against a schema.",
          "line_range": [
            12,
            40
          ],
          "parameters": [
            "json_path",
            "schema_path"
          ],
          "decorators": [],
          "uid": "validators.json_validator.validate_struct_json",
          "uid_components": [
            "validators",
            "validators.json_validator",
            "validators.json_validator.validate_struct_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Validate a single JSON file against a schema.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:38.159095",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "validate_directory",
          "docstring": "Validate all JSON files in a directory against a schema.",
          "line_range": [
            43,
            61
          ],
          "parameters": [
            "directory",
            "schema_path",
            "include_patterns",
            "exclude_patterns"
          ],
          "decorators": [],
          "uid": "validators.json_validator.validate_directory",
          "uid_components": [
            "validators",
            "validators.json_validator",
            "validators.json_validator.validate_directory"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Validate all JSON files in a directory against a schema.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:38.159110",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "validate_struct_json": [
          "Path",
          "logging.error",
          "validate",
          "logging.info",
          "open",
          "schema_file.exists",
          "json_file.exists",
          "json.load",
          "str"
        ],
        "validate_directory": [
          "json_file.match",
          "validate_struct_json",
          "any",
          "Path",
          "str"
        ]
      },
      "dependencies": [
        "List",
        "Optional",
        "Path",
        "ValidationError",
        "json",
        "jsonschema",
        "logging",
        "pathlib",
        "sys",
        "typing",
        "validate"
      ],
      "hash": null,
      "uid": "validators.json_validator",
      "uid_components": [
        "validators",
        "validators.json_validator"
      ],
      "uid_type": "module",
      "artifact_id": "ae3d7c41-03a2-5e47-86bd-15b10b99898a",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:38.159072",
          "confidence": 0.7,
          "cache_key": "c9035bcd"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 2,
        "lines_of_code": 20,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 11,
        "test_coverage": 0.0,
        "maintainability_index": 90
      },
      "markdown_anchor": {
        "id": "validators-json_validator",
        "title": "Module: validators.json_validator",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: validators.json_validator](#validators-json_validator)",
        "html_anchor": "<a id=\"validators-json_validator\"></a>"
      }
    },
    {
      "module_id": "parsers.universal_converter",
      "path": "parsers/universal_converter.py",
      "category": "core",
      "module_doc": "Universal Code Converter - Orchestrates all language parsers\nConverts any codebase to llmstruct JSON format",
      "functions": [
        {
          "name": "main",
          "docstring": "CLI interface for universal converter",
          "line_range": [
            375,
            428
          ],
          "parameters": [],
          "decorators": [],
          "uid": "parsers.universal_converter.main",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.main"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "CLI interface for universal converter",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:38.159137",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__post_init__",
          "docstring": "",
          "line_range": [
            55,
            62
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter.__post_init__",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.__post_init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes object attributes after instance creation\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:38.759316",
              "confidence": 0.7,
              "cache_key": "560e8251"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            79,
            82
          ],
          "parameters": [
            "self",
            "config"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter.__init__",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes object with configuration settings for further operations\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:39.338484",
              "confidence": 0.7,
              "cache_key": "dc5a3151"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "detect_language",
          "docstring": "Detect programming language from file extension",
          "line_range": [
            84,
            92
          ],
          "parameters": [
            "self",
            "file_path"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter.detect_language",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.detect_language"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Detect programming language from file extension",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338524",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "detect_project_languages",
          "docstring": "Detect all languages in project and count files",
          "line_range": [
            94,
            109
          ],
          "parameters": [
            "self",
            "project_path"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter.detect_project_languages",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.detect_project_languages"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Detect all languages in project and count files",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338540",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_project_files",
          "docstring": "Get all relevant files for conversion",
          "line_range": [
            111,
            138
          ],
          "parameters": [
            "self",
            "project_path",
            "language"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter.get_project_files",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.get_project_files"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get all relevant files for conversion",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338554",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "convert_python_project",
          "docstring": "Convert Python project to llmstruct format",
          "line_range": [
            140,
            171
          ],
          "parameters": [
            "self",
            "project_path"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter.convert_python_project",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.convert_python_project"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Convert Python project to llmstruct format",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338567",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "convert_go_project",
          "docstring": "Convert Go project to llmstruct format",
          "line_range": [
            173,
            190
          ],
          "parameters": [
            "self",
            "project_path"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter.convert_go_project",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.convert_go_project"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Convert Go project to llmstruct format",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338579",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "convert_javascript_project",
          "docstring": "Convert JavaScript project to llmstruct format",
          "line_range": [
            192,
            223
          ],
          "parameters": [
            "self",
            "project_path"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter.convert_javascript_project",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.convert_javascript_project"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Convert JavaScript project to llmstruct format",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338590",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "convert_project",
          "docstring": "Convert any project to llmstruct format",
          "line_range": [
            225,
            250
          ],
          "parameters": [
            "self",
            "project_path",
            "language"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter.convert_project",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.convert_project"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Convert any project to llmstruct format",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338601",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "convert_multi_language_project",
          "docstring": "Convert multi-language project with separate sections per language",
          "line_range": [
            252,
            282
          ],
          "parameters": [
            "self",
            "project_path"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter.convert_multi_language_project",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.convert_multi_language_project"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Convert multi-language project with separate sections per language",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338612",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_build_project_structure",
          "docstring": "Build standard llmstruct project structure",
          "line_range": [
            284,
            312
          ],
          "parameters": [
            "self",
            "language",
            "project_path",
            "modules",
            "toc"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter._build_project_structure",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter._build_project_structure"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Build standard llmstruct project structure",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338624",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_build_empty_project_structure",
          "docstring": "Build empty structure when conversion fails",
          "line_range": [
            314,
            329
          ],
          "parameters": [
            "self",
            "language",
            "project_path",
            "error"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter._build_empty_project_structure",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter._build_empty_project_structure"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Build empty structure when conversion fails",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338635",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_merge_language_results",
          "docstring": "Merge multiple language results into unified structure",
          "line_range": [
            331,
            372
          ],
          "parameters": [
            "self",
            "project_path",
            "language_results"
          ],
          "decorators": [],
          "uid": "parsers.universal_converter._merge_language_results",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter._merge_language_results"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Merge multiple language results into unified structure",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.338646",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "Language",
          "docstring": "",
          "line_range": [
            33,
            42
          ],
          "methods": [],
          "bases": [
            "Enum"
          ],
          "uid": "parsers.universal_converter.Language",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.Language"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Analyzes syntax and semantics of programming languages for efficient code execution.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:39.967015",
              "confidence": 0.7,
              "cache_key": "d9f6db07"
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ConverterConfig",
          "docstring": "Configuration for universal converter",
          "line_range": [
            46,
            62
          ],
          "methods": [
            {
              "name": "__post_init__",
              "docstring": "",
              "line_range": [
                55,
                62
              ],
              "parameters": [
                "self"
              ],
              "uid": "parsers.universal_converter.ConverterConfig.__post_init__",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.ConverterConfig",
                "parsers.universal_converter.ConverterConfig.__post_init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Executes initialization code after object creation, allowing for custom setup procedures.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:40.544680",
                  "confidence": 0.7,
                  "cache_key": "6a95fdb6"
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "parsers.universal_converter.ConverterConfig",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.ConverterConfig"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Configuration for universal converter",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:39.967055",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class",
              "configuration"
            ]
          }
        },
        {
          "name": "UniversalConverter",
          "docstring": "Universal code converter for any programming language",
          "line_range": [
            65,
            372
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                79,
                82
              ],
              "parameters": [
                "self",
                "config"
              ],
              "uid": "parsers.universal_converter.UniversalConverter.__init__",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes an object with configuration settings for further operations\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:41.102748",
                  "confidence": 0.7,
                  "cache_key": "6d35494a"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "detect_language",
              "docstring": "Detect programming language from file extension",
              "line_range": [
                84,
                92
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "uid": "parsers.universal_converter.UniversalConverter.detect_language",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter.detect_language"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Detect programming language from file extension",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102788",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "detect_project_languages",
              "docstring": "Detect all languages in project and count files",
              "line_range": [
                94,
                109
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "uid": "parsers.universal_converter.UniversalConverter.detect_project_languages",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter.detect_project_languages"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Detect all languages in project and count files",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102805",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_project_files",
              "docstring": "Get all relevant files for conversion",
              "line_range": [
                111,
                138
              ],
              "parameters": [
                "self",
                "project_path",
                "language"
              ],
              "uid": "parsers.universal_converter.UniversalConverter.get_project_files",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter.get_project_files"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get all relevant files for conversion",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102818",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "convert_python_project",
              "docstring": "Convert Python project to llmstruct format",
              "line_range": [
                140,
                171
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "uid": "parsers.universal_converter.UniversalConverter.convert_python_project",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter.convert_python_project"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Convert Python project to llmstruct format",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102831",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "convert_go_project",
              "docstring": "Convert Go project to llmstruct format",
              "line_range": [
                173,
                190
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "uid": "parsers.universal_converter.UniversalConverter.convert_go_project",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter.convert_go_project"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Convert Go project to llmstruct format",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102843",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "convert_javascript_project",
              "docstring": "Convert JavaScript project to llmstruct format",
              "line_range": [
                192,
                223
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "uid": "parsers.universal_converter.UniversalConverter.convert_javascript_project",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter.convert_javascript_project"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Convert JavaScript project to llmstruct format",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102854",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "convert_project",
              "docstring": "Convert any project to llmstruct format",
              "line_range": [
                225,
                250
              ],
              "parameters": [
                "self",
                "project_path",
                "language"
              ],
              "uid": "parsers.universal_converter.UniversalConverter.convert_project",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter.convert_project"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Convert any project to llmstruct format",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102865",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "convert_multi_language_project",
              "docstring": "Convert multi-language project with separate sections per language",
              "line_range": [
                252,
                282
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "uid": "parsers.universal_converter.UniversalConverter.convert_multi_language_project",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter.convert_multi_language_project"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Convert multi-language project with separate sections per language",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102881",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_build_project_structure",
              "docstring": "Build standard llmstruct project structure",
              "line_range": [
                284,
                312
              ],
              "parameters": [
                "self",
                "language",
                "project_path",
                "modules",
                "toc"
              ],
              "uid": "parsers.universal_converter.UniversalConverter._build_project_structure",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter._build_project_structure"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Build standard llmstruct project structure",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102894",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_build_empty_project_structure",
              "docstring": "Build empty structure when conversion fails",
              "line_range": [
                314,
                329
              ],
              "parameters": [
                "self",
                "language",
                "project_path",
                "error"
              ],
              "uid": "parsers.universal_converter.UniversalConverter._build_empty_project_structure",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter._build_empty_project_structure"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Build empty structure when conversion fails",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102906",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_merge_language_results",
              "docstring": "Merge multiple language results into unified structure",
              "line_range": [
                331,
                372
              ],
              "parameters": [
                "self",
                "project_path",
                "language_results"
              ],
              "uid": "parsers.universal_converter.UniversalConverter._merge_language_results",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter",
                "parsers.universal_converter.UniversalConverter._merge_language_results"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Merge multiple language results into unified structure",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.102917",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "parsers.universal_converter.UniversalConverter",
          "uid_components": [
            "parsers",
            "parsers.universal_converter",
            "parsers.universal_converter.UniversalConverter"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Universal code converter for any programming language",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:40.544738",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__post_init__": [],
        "__init__": [
          "GoAnalyzer",
          "JavaScriptParser",
          "ConverterConfig"
        ],
        "detect_language": [
          "Path"
        ],
        "detect_project_languages": [
          "any",
          "self.detect_language",
          "os.walk",
          "languages.get"
        ],
        "get_project_files": [
          "any",
          "files.append",
          "self.detect_language",
          "os.walk"
        ],
        "convert_python_project": [
          "analyze_python",
          "len",
          "modules.append",
          "logger.warning",
          "logger.info",
          "self.get_project_files",
          "toc.append",
          "self._build_project_structure",
          "module_data.get"
        ],
        "convert_go_project": [
          "logger.error",
          "logger.info",
          "convert_to_llmstruct_format",
          "self._build_empty_project_structure",
          "str"
        ],
        "convert_javascript_project": [
          "len",
          "modules.append",
          "logger.warning",
          "logger.info",
          "self.get_project_files",
          "toc.append",
          "self._build_project_structure",
          "module_data.get"
        ],
        "convert_project": [
          "logger.info",
          "self.detect_project_languages",
          "ValueError",
          "self.convert_python_project",
          "self.convert_go_project",
          "self.convert_javascript_project",
          "max",
          "languages.keys",
          "NotImplementedError"
        ],
        "convert_multi_language_project": [
          "logger.error",
          "logger.warning",
          "logger.info",
          "self.detect_project_languages",
          "ValueError",
          "self.convert_python_project",
          "self.convert_go_project",
          "self.convert_javascript_project",
          "self._merge_language_results",
          "languages.keys"
        ],
        "_build_project_structure": [
          "language.title",
          "m.get",
          "len",
          "sum"
        ],
        "_build_empty_project_structure": [],
        "_merge_language_results": [
          "list",
          "all_toc.append",
          "all_modules.append",
          "result.get",
          "language_results.keys",
          "language_results.items",
          "stats.get"
        ],
        "main": [
          "logger.error",
          "exit",
          "UniversalConverter",
          "open",
          "parser.add_argument",
          "converter.convert_multi_language_project",
          "converter.convert_project",
          "Language",
          "result.get",
          "json.dumps",
          "f.write",
          "stats.get",
          "traceback.print_exc",
          "ConverterConfig",
          "print",
          "parser.parse_args",
          "argparse.ArgumentParser"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "Enum",
        "GoAnalyzer",
        "JavaScriptParser",
        "List",
        "Optional",
        "Path",
        "Union",
        "analyze_module",
        "argparse",
        "convert_to_llmstruct_format",
        "dataclass",
        "dataclasses",
        "enum",
        "go_analyzer",
        "javascript_parser",
        "json",
        "logging",
        "os",
        "pathlib",
        "python_parser",
        "sys",
        "traceback",
        "typing"
      ],
      "hash": null,
      "uid": "parsers.universal_converter",
      "uid_components": [
        "parsers",
        "parsers.universal_converter"
      ],
      "uid_type": "module",
      "artifact_id": "956805f9-00f8-f190-3a94-845b72b7b9e1",
      "smart_summary": {
        "summary": "Universal Code Converter - Orchestrates all language parsers",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:38.159125",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 20,
        "lines_of_code": 140,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 25,
        "test_coverage": 0.0,
        "maintainability_index": 0
      },
      "markdown_anchor": {
        "id": "parsers-universal_converter",
        "title": "Module: parsers.universal_converter",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: parsers.universal_converter](#parsers-universal_converter)",
        "html_anchor": "<a id=\"parsers-universal_converter\"></a>"
      }
    },
    {
      "module_id": "parsers.python_parser",
      "path": "parsers/python_parser.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "infer_category",
          "docstring": "Infer module category based on its path.",
          "line_range": [
            13,
            20
          ],
          "parameters": [
            "file_path"
          ],
          "decorators": [],
          "uid": "parsers.python_parser.infer_category",
          "uid_components": [
            "parsers",
            "parsers.python_parser",
            "parsers.python_parser.infer_category"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Infer module category based on its path.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:41.103292",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "compute_file_hash",
          "docstring": "Compute SHA-256 hash of file content.",
          "line_range": [
            72,
            79
          ],
          "parameters": [
            "file_path"
          ],
          "decorators": [],
          "uid": "parsers.python_parser.compute_file_hash",
          "uid_components": [
            "parsers",
            "parsers.python_parser",
            "parsers.python_parser.compute_file_hash"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Compute SHA-256 hash of file content.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:41.103308",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "computation"
            ]
          }
        },
        {
          "name": "analyze_module",
          "docstring": "Analyze Python module and return structured data.",
          "line_range": [
            82,
            154
          ],
          "parameters": [
            "file_path",
            "root_dir",
            "include_ranges",
            "include_hashes"
          ],
          "decorators": [],
          "uid": "parsers.python_parser.analyze_module",
          "uid_components": [
            "parsers",
            "parsers.python_parser",
            "parsers.python_parser.analyze_module"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Analyze Python module and return structured data.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:41.103322",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            26,
            29
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "parsers.python_parser.__init__",
          "uid_components": [
            "parsers",
            "parsers.python_parser",
            "parsers.python_parser.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes object attributes and sets default values for class instance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:41.835321",
              "confidence": 0.7,
              "cache_key": "9f9f7062"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "visit_Import",
          "docstring": "Capture import statements.",
          "line_range": [
            31,
            35
          ],
          "parameters": [
            "self",
            "node"
          ],
          "decorators": [],
          "uid": "parsers.python_parser.visit_Import",
          "uid_components": [
            "parsers",
            "parsers.python_parser",
            "parsers.python_parser.visit_Import"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Capture import statements.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:41.835388",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "visit_ImportFrom",
          "docstring": "Capture from-import statements.",
          "line_range": [
            37,
            43
          ],
          "parameters": [
            "self",
            "node"
          ],
          "decorators": [],
          "uid": "parsers.python_parser.visit_ImportFrom",
          "uid_components": [
            "parsers",
            "parsers.python_parser",
            "parsers.python_parser.visit_ImportFrom"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Capture from-import statements.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:41.835423",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "visit_FunctionDef",
          "docstring": "Track function definitions and their calls.",
          "line_range": [
            45,
            50
          ],
          "parameters": [
            "self",
            "node"
          ],
          "decorators": [],
          "uid": "parsers.python_parser.visit_FunctionDef",
          "uid_components": [
            "parsers",
            "parsers.python_parser",
            "parsers.python_parser.visit_FunctionDef"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Track function definitions and their calls.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:41.835446",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "visit_AsyncFunctionDef",
          "docstring": "Track async function definitions and their calls.",
          "line_range": [
            52,
            57
          ],
          "parameters": [
            "self",
            "node"
          ],
          "decorators": [],
          "uid": "parsers.python_parser.visit_AsyncFunctionDef",
          "uid_components": [
            "parsers",
            "parsers.python_parser",
            "parsers.python_parser.visit_AsyncFunctionDef"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Track async function definitions and their calls.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:41.835465",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "visit_Call",
          "docstring": "Capture function calls.",
          "line_range": [
            59,
            69
          ],
          "parameters": [
            "self",
            "node"
          ],
          "decorators": [],
          "uid": "parsers.python_parser.visit_Call",
          "uid_components": [
            "parsers",
            "parsers.python_parser",
            "parsers.python_parser.visit_Call"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Capture function calls.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:41.835490",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "CallVisitor",
          "docstring": "AST visitor to collect function calls and dependencies.",
          "line_range": [
            23,
            69
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                26,
                29
              ],
              "parameters": [
                "self"
              ],
              "uid": "parsers.python_parser.CallVisitor.__init__",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.CallVisitor",
                "parsers.python_parser.CallVisitor.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes an instance of a class with default attributes and values\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:42.459749",
                  "confidence": 0.7,
                  "cache_key": "7d125173"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "visit_Import",
              "docstring": "Capture import statements.",
              "line_range": [
                31,
                35
              ],
              "parameters": [
                "self",
                "node"
              ],
              "uid": "parsers.python_parser.CallVisitor.visit_Import",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.CallVisitor",
                "parsers.python_parser.CallVisitor.visit_Import"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Capture import statements.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:42.459802",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "visit_ImportFrom",
              "docstring": "Capture from-import statements.",
              "line_range": [
                37,
                43
              ],
              "parameters": [
                "self",
                "node"
              ],
              "uid": "parsers.python_parser.CallVisitor.visit_ImportFrom",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.CallVisitor",
                "parsers.python_parser.CallVisitor.visit_ImportFrom"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Capture from-import statements.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:42.459830",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "visit_FunctionDef",
              "docstring": "Track function definitions and their calls.",
              "line_range": [
                45,
                50
              ],
              "parameters": [
                "self",
                "node"
              ],
              "uid": "parsers.python_parser.CallVisitor.visit_FunctionDef",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.CallVisitor",
                "parsers.python_parser.CallVisitor.visit_FunctionDef"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Track function definitions and their calls.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:42.459855",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "visit_AsyncFunctionDef",
              "docstring": "Track async function definitions and their calls.",
              "line_range": [
                52,
                57
              ],
              "parameters": [
                "self",
                "node"
              ],
              "uid": "parsers.python_parser.CallVisitor.visit_AsyncFunctionDef",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.CallVisitor",
                "parsers.python_parser.CallVisitor.visit_AsyncFunctionDef"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Track async function definitions and their calls.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:42.459879",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "visit_Call",
              "docstring": "Capture function calls.",
              "line_range": [
                59,
                69
              ],
              "parameters": [
                "self",
                "node"
              ],
              "uid": "parsers.python_parser.CallVisitor.visit_Call",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.CallVisitor",
                "parsers.python_parser.CallVisitor.visit_Call"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Capture function calls.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:42.459904",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [
            "ast.NodeVisitor"
          ],
          "uid": "parsers.python_parser.CallVisitor",
          "uid_components": [
            "parsers",
            "parsers.python_parser",
            "parsers.python_parser.CallVisitor"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "AST visitor to collect function calls and dependencies.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:41.835518",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "infer_category": [
          "Path"
        ],
        "__init__": [
          "set"
        ],
        "visit_Import": [
          "self.generic_visit"
        ],
        "visit_ImportFrom": [
          "self.generic_visit"
        ],
        "visit_FunctionDef": [
          "self.generic_visit",
          "set"
        ],
        "visit_AsyncFunctionDef": [
          "self.generic_visit",
          "set"
        ],
        "visit_Call": [
          "isinstance",
          "self.generic_visit"
        ],
        "compute_file_hash": [
          "open",
          "hashlib.sha256",
          "f.read",
          "logging.error"
        ],
        "analyze_module": [
          "list",
          "sorted",
          "infer_category",
          "ast.get_docstring",
          "visitor.visit",
          "Path",
          "isinstance",
          "ast.unparse",
          "classes.append",
          "logging.error",
          "compute_file_hash",
          "CallVisitor",
          "f.read",
          "ast.walk",
          "open",
          "ast.parse",
          "functions.append",
          "str"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "Optional",
        "Path",
        "Set",
        "ast",
        "hashlib",
        "logging",
        "os",
        "pathlib",
        "typing"
      ],
      "hash": null,
      "uid": "parsers.python_parser",
      "uid_components": [
        "parsers",
        "parsers.python_parser"
      ],
      "uid_type": "module",
      "artifact_id": "4a74a0f8-8fb2-8ca2-28f3-39fa29b8e02b",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:41.103265",
          "confidence": 0.7,
          "cache_key": "dab9ac20"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 11,
        "lines_of_code": 90,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 11,
        "test_coverage": 0.0,
        "maintainability_index": 45
      },
      "markdown_anchor": {
        "id": "parsers-python_parser",
        "title": "Module: parsers.python_parser",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: parsers.python_parser](#parsers-python_parser)",
        "html_anchor": "<a id=\"parsers-python_parser\"></a>"
      }
    },
    {
      "module_id": "parsers.go_analyzer",
      "path": "parsers/go_analyzer.py",
      "category": "core",
      "module_doc": "Универсальный Go анализатор для Docker контейнера\nИспользует правильные подходы: go/packages, go/analysis",
      "functions": [
        {
          "name": "convert_to_llmstruct_format",
          "docstring": "Конвертирует результат анализа в формат llmstruct",
          "line_range": [
            203,
            337
          ],
          "parameters": [
            "analysis",
            "include_ranges",
            "goals"
          ],
          "decorators": [],
          "uid": "parsers.go_analyzer.convert_to_llmstruct_format",
          "uid_components": [
            "parsers",
            "parsers.go_analyzer",
            "parsers.go_analyzer.convert_to_llmstruct_format"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Конвертирует результат анализа в формат llmstruct",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:42.459994",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_compute_file_hash",
          "docstring": "Вычисляет SHA-256 хэш файла",
          "line_range": [
            339,
            345
          ],
          "parameters": [
            "file_path"
          ],
          "decorators": [],
          "uid": "parsers.go_analyzer._compute_file_hash",
          "uid_components": [
            "parsers",
            "parsers.go_analyzer",
            "parsers.go_analyzer._compute_file_hash"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Вычисляет SHA-256 хэш файла",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:42.460020",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "main",
          "docstring": "",
          "line_range": [
            347,
            402
          ],
          "parameters": [],
          "decorators": [],
          "uid": "parsers.go_analyzer.main",
          "uid_components": [
            "parsers",
            "parsers.go_analyzer",
            "parsers.go_analyzer.main"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Executes core program logic and controls flow of operations\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:42.967793",
              "confidence": 0.7,
              "cache_key": "eb46b335"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            24,
            26
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "parsers.go_analyzer.__init__",
          "uid_components": [
            "parsers",
            "parsers.go_analyzer",
            "parsers.go_analyzer.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes a new instance of the class with specified attributes and settings.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:43.512432",
              "confidence": 0.7,
              "cache_key": "346fa718"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_setup_analyzer",
          "docstring": "Настраивает временную среду для анализатора",
          "line_range": [
            28,
            66
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "parsers.go_analyzer._setup_analyzer",
          "uid_components": [
            "parsers",
            "parsers.go_analyzer",
            "parsers.go_analyzer._setup_analyzer"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Настраивает временную среду для анализатора",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:43.512473",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_cleanup",
          "docstring": "Очищает временные файлы",
          "line_range": [
            68,
            72
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "parsers.go_analyzer._cleanup",
          "uid_components": [
            "parsers",
            "parsers.go_analyzer",
            "parsers.go_analyzer._cleanup"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Очищает временные файлы",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:43.512493",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "analyze_project",
          "docstring": "Анализирует Go проект",
          "line_range": [
            74,
            125
          ],
          "parameters": [
            "self",
            "project_path"
          ],
          "decorators": [],
          "uid": "parsers.go_analyzer.analyze_project",
          "uid_components": [
            "parsers",
            "parsers.go_analyzer",
            "parsers.go_analyzer.analyze_project"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Анализирует Go проект",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:43.512506",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_fallback_analysis",
          "docstring": "Fallback анализ через простой парсинг файлов",
          "line_range": [
            127,
            201
          ],
          "parameters": [
            "self",
            "project_path"
          ],
          "decorators": [],
          "uid": "parsers.go_analyzer._fallback_analysis",
          "uid_components": [
            "parsers",
            "parsers.go_analyzer",
            "parsers.go_analyzer._fallback_analysis"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Fallback анализ через простой парсинг файлов",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:43.512519",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "GoAnalyzer",
          "docstring": "Универсальный анализатор Go проектов",
          "line_range": [
            21,
            201
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                24,
                26
              ],
              "parameters": [
                "self"
              ],
              "uid": "parsers.go_analyzer.GoAnalyzer.__init__",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer.GoAnalyzer",
                "parsers.go_analyzer.GoAnalyzer.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes an instance of a class with default values and configurations\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:43.999483",
                  "confidence": 0.7,
                  "cache_key": "9247f7b1"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_setup_analyzer",
              "docstring": "Настраивает временную среду для анализатора",
              "line_range": [
                28,
                66
              ],
              "parameters": [
                "self"
              ],
              "uid": "parsers.go_analyzer.GoAnalyzer._setup_analyzer",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer.GoAnalyzer",
                "parsers.go_analyzer.GoAnalyzer._setup_analyzer"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Настраивает временную среду для анализатора",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:43.999523",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_cleanup",
              "docstring": "Очищает временные файлы",
              "line_range": [
                68,
                72
              ],
              "parameters": [
                "self"
              ],
              "uid": "parsers.go_analyzer.GoAnalyzer._cleanup",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer.GoAnalyzer",
                "parsers.go_analyzer.GoAnalyzer._cleanup"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Очищает временные файлы",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:43.999543",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "analyze_project",
              "docstring": "Анализирует Go проект",
              "line_range": [
                74,
                125
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "uid": "parsers.go_analyzer.GoAnalyzer.analyze_project",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer.GoAnalyzer",
                "parsers.go_analyzer.GoAnalyzer.analyze_project"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Анализирует Go проект",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:43.999557",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_fallback_analysis",
              "docstring": "Fallback анализ через простой парсинг файлов",
              "line_range": [
                127,
                201
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "uid": "parsers.go_analyzer.GoAnalyzer._fallback_analysis",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer.GoAnalyzer",
                "parsers.go_analyzer.GoAnalyzer._fallback_analysis"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Fallback анализ через простой парсинг файлов",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:43.999571",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "parsers.go_analyzer.GoAnalyzer",
          "uid_components": [
            "parsers",
            "parsers.go_analyzer",
            "parsers.go_analyzer.GoAnalyzer"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Универсальный анализатор Go проектов",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:43.512533",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [],
        "_setup_analyzer": [
          "logging.warning",
          "analyzer_source.read_text",
          "tempfile.mkdtemp",
          "subprocess.run",
          "analyzer_file.write_text",
          "Path",
          "str"
        ],
        "_cleanup": [
          "Path",
          "shutil.rmtree"
        ],
        "analyze_project": [
          "logging.warning",
          "logging.error",
          "self._setup_analyzer",
          "json.loads",
          "logging.info",
          "subprocess.run",
          "self._cleanup",
          "self._fallback_analysis"
        ],
        "_fallback_analysis": [
          "line.split",
          "list",
          "sorted",
          "go_mod_path.exists",
          "len",
          "line.strip",
          "go_mod_path.read_text",
          "file_path.relative_to",
          "file_path.read_text",
          "logging.warning",
          "set",
          "packages.add",
          "logging.info",
          "Path",
          "content.split",
          "str",
          "line.startswith"
        ],
        "convert_to_llmstruct_format": [
          "path.endswith",
          "iface.get",
          "len",
          "modules.append",
          "file_data.get",
          "uuid.uuid4",
          "classes.append",
          "sum",
          "_compute_file_hash",
          "analysis.get",
          "struct.get",
          "module.get",
          "fn.get",
          "toc.append",
          "path.replace",
          "functions.append",
          "str"
        ],
        "_compute_file_hash": [
          "open",
          "hashlib.sha256",
          "f.read"
        ],
        "main": [
          "len",
          "open",
          "parser.add_argument",
          "analyzer.analyze_project",
          "convert_to_llmstruct_format",
          "result.get",
          "json.dumps",
          "f.write",
          "stats.get",
          "traceback.print_exc",
          "parser.parse_args",
          "print",
          "sys.exit",
          "GoAnalyzer",
          "Path",
          "argparse.ArgumentParser"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "List",
        "Optional",
        "Path",
        "argparse",
        "datetime",
        "hashlib",
        "json",
        "logging",
        "os",
        "pathlib",
        "shutil",
        "subprocess",
        "sys",
        "tempfile",
        "traceback",
        "typing",
        "uuid"
      ],
      "hash": null,
      "uid": "parsers.go_analyzer",
      "uid_components": [
        "parsers",
        "parsers.go_analyzer"
      ],
      "uid_type": "module",
      "artifact_id": "14239029-babb-8b21-4e13-a03eac8c6427",
      "smart_summary": {
        "summary": "Универсальный Go анализатор для Docker контейнера",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:42.459965",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 10,
        "lines_of_code": 80,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 19,
        "test_coverage": 0.0,
        "maintainability_index": 50
      },
      "markdown_anchor": {
        "id": "parsers-go_analyzer",
        "title": "Module: parsers.go_analyzer",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: parsers.go_analyzer](#parsers-go_analyzer)",
        "html_anchor": "<a id=\"parsers-go_analyzer\"></a>"
      }
    },
    {
      "module_id": "parsers.__init__",
      "path": "parsers/__init__.py",
      "category": "cli",
      "module_doc": "Language-specific parsers for extracting code structure data for LLMStruct JSON.",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [
        "JavaScriptParser",
        "javascript_parser"
      ],
      "hash": null,
      "uid": "parsers.__init__",
      "uid_components": [
        "parsers",
        "parsers.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "95e06b4e-000f-fbcd-5f8a-cb00e886cc6b",
      "smart_summary": {
        "summary": "Language-specific parsers for extracting code structure data for LLMStruct JSON.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:43.999586",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 2,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "parsers-__init__",
        "title": "Module: parsers.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: parsers.__init__](#parsers-__init__)",
        "html_anchor": "<a id=\"parsers-__init__\"></a>"
      }
    },
    {
      "module_id": "parsers.javascript_parser",
      "path": "parsers/javascript_parser.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            9,
            13
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "parsers.javascript_parser.__init__",
          "uid_components": [
            "parsers",
            "parsers.javascript_parser",
            "parsers.javascript_parser.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes class instance with default values and sets up necessary attributes\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:44.663733",
              "confidence": 0.7,
              "cache_key": "ceaa2b45"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "file_hash",
          "docstring": "",
          "line_range": [
            15,
            20
          ],
          "parameters": [
            "self",
            "filepath"
          ],
          "decorators": [],
          "uid": "parsers.javascript_parser.file_hash",
          "uid_components": [
            "parsers",
            "parsers.javascript_parser",
            "parsers.javascript_parser.file_hash"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Generates a hash value for a given file path using cryptographic algorithms\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:45.315945",
              "confidence": 0.7,
              "cache_key": "f8583ba1"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "compute_file_metadata",
          "docstring": "",
          "line_range": [
            22,
            41
          ],
          "parameters": [
            "self",
            "filepath",
            "include_hashes"
          ],
          "decorators": [],
          "uid": "parsers.javascript_parser.compute_file_metadata",
          "uid_components": [
            "parsers",
            "parsers.javascript_parser",
            "parsers.javascript_parser.compute_file_metadata"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Computes metadata for a specified file, including optional hash values.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:46.086373",
              "confidence": 0.7,
              "cache_key": "91460bc5"
            },
            "tags": [
              "function",
              "computation"
            ]
          }
        },
        {
          "name": "parse_module",
          "docstring": "",
          "line_range": [
            43,
            124
          ],
          "parameters": [
            "self",
            "filepath",
            "root_dir",
            "include_ranges",
            "include_hashes"
          ],
          "decorators": [],
          "uid": "parsers.javascript_parser.parse_module",
          "uid_components": [
            "parsers",
            "parsers.javascript_parser",
            "parsers.javascript_parser.parse_module"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Parses a module file for specified ranges and hashes within a root directory.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:46.787114",
              "confidence": 0.7,
              "cache_key": "46ff4601"
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        },
        {
          "name": "extract_signature",
          "docstring": "",
          "line_range": [
            78,
            80
          ],
          "parameters": [
            "node"
          ],
          "decorators": [],
          "uid": "parsers.javascript_parser.extract_signature",
          "uid_components": [
            "parsers",
            "parsers.javascript_parser",
            "parsers.javascript_parser.extract_signature"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Extracts the signature information from a given node in the abstract syntax tree.",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:47.441770",
              "confidence": 0.7,
              "cache_key": "15724a0d"
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "JavaScriptParser",
          "docstring": "",
          "line_range": [
            8,
            124
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                9,
                13
              ],
              "parameters": [
                "self"
              ],
              "uid": "parsers.javascript_parser.JavaScriptParser.__init__",
              "uid_components": [
                "parsers",
                "parsers.javascript_parser",
                "parsers.javascript_parser.JavaScriptParser",
                "parsers.javascript_parser.JavaScriptParser.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes an instance of a class with default values and attributes\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:48.465307",
                  "confidence": 0.7,
                  "cache_key": "3444c7cb"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "file_hash",
              "docstring": "",
              "line_range": [
                15,
                20
              ],
              "parameters": [
                "self",
                "filepath"
              ],
              "uid": "parsers.javascript_parser.JavaScriptParser.file_hash",
              "uid_components": [
                "parsers",
                "parsers.javascript_parser",
                "parsers.javascript_parser.JavaScriptParser",
                "parsers.javascript_parser.JavaScriptParser.file_hash"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Generates a hash value for a given file path using cryptographic algorithms.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:49.092303",
                  "confidence": 0.7,
                  "cache_key": "641cf0e9"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "compute_file_metadata",
              "docstring": "",
              "line_range": [
                22,
                41
              ],
              "parameters": [
                "self",
                "filepath",
                "include_hashes"
              ],
              "uid": "parsers.javascript_parser.JavaScriptParser.compute_file_metadata",
              "uid_components": [
                "parsers",
                "parsers.javascript_parser",
                "parsers.javascript_parser.JavaScriptParser",
                "parsers.javascript_parser.JavaScriptParser.compute_file_metadata"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Calculates and returns metadata for a specified file, including optional hash values.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:49.583580",
                  "confidence": 0.7,
                  "cache_key": "e1efc1c0"
                },
                "tags": [
                  "method",
                  "computation"
                ]
              }
            },
            {
              "name": "parse_module",
              "docstring": "",
              "line_range": [
                43,
                124
              ],
              "parameters": [
                "self",
                "filepath",
                "root_dir",
                "include_ranges",
                "include_hashes"
              ],
              "uid": "parsers.javascript_parser.JavaScriptParser.parse_module",
              "uid_components": [
                "parsers",
                "parsers.javascript_parser",
                "parsers.javascript_parser.JavaScriptParser",
                "parsers.javascript_parser.JavaScriptParser.parse_module"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Parses a module file with specified ranges and hashes for analysis\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:50.307784",
                  "confidence": 0.7,
                  "cache_key": "858edff3"
                },
                "tags": [
                  "method",
                  "processing"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "parsers.javascript_parser.JavaScriptParser",
          "uid_components": [
            "parsers",
            "parsers.javascript_parser",
            "parsers.javascript_parser.JavaScriptParser"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Parses JavaScript code to generate abstract syntax trees for program analysis.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:47.978718",
              "confidence": 0.7,
              "cache_key": "46ba2bda"
            },
            "tags": [
              "class",
              "processing"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "set"
        ],
        "file_hash": [
          "open",
          "hashlib.sha256",
          "f.read"
        ],
        "compute_file_metadata": [
          "open",
          "self.file_hash",
          "os.stat",
          "sum"
        ],
        "parse_module": [
          "esprima.parseModule",
          "f.read",
          "open",
          "self.compute_file_metadata",
          "str"
        ],
        "extract_signature": [
          "hasattr"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "datetime",
        "esprima",
        "hashlib",
        "os",
        "typing"
      ],
      "hash": null,
      "uid": "parsers.javascript_parser",
      "uid_components": [
        "parsers",
        "parsers.javascript_parser"
      ],
      "uid_type": "module",
      "artifact_id": "f6bc6a2b-cd38-fd20-eff3-7b5ce3c70bce",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:43.999892",
          "confidence": 0.7,
          "cache_key": "d186c6ae"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 7,
        "lines_of_code": 50,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 7,
        "test_coverage": 0.0,
        "maintainability_index": 65
      },
      "markdown_anchor": {
        "id": "parsers-javascript_parser",
        "title": "Module: parsers.javascript_parser",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: parsers.javascript_parser](#parsers-javascript_parser)",
        "html_anchor": "<a id=\"parsers-javascript_parser\"></a>"
      }
    },
    {
      "module_id": "generators.go_json_generator",
      "path": "generators/go_json_generator.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "get_go_folder_structure",
          "docstring": "Capture directory and file structure for Go projects with artifact_id, respecting .gitignore and patterns.",
          "line_range": [
            23,
            98
          ],
          "parameters": [
            "root_dir",
            "gitignore_patterns",
            "include_patterns",
            "exclude_patterns",
            "exclude_dirs"
          ],
          "decorators": [],
          "uid": "generators.go_json_generator.get_go_folder_structure",
          "uid_components": [
            "generators",
            "generators.go_json_generator",
            "generators.go_json_generator.get_go_folder_structure"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Capture directory and file structure for Go projects with artifact_id, respecting .gitignore and patterns.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:50.308127",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "build_go_toc_and_modules",
          "docstring": "Build TOC and modules for Go projects with artifact_id and robust filtering.",
          "line_range": [
            101,
            196
          ],
          "parameters": [
            "root_dir",
            "include_patterns",
            "exclude_patterns",
            "gitignore_patterns",
            "include_ranges",
            "include_hashes",
            "exclude_dirs"
          ],
          "decorators": [],
          "uid": "generators.go_json_generator.build_go_toc_and_modules",
          "uid_components": [
            "generators",
            "generators.go_json_generator",
            "generators.go_json_generator.build_go_toc_and_modules"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Build TOC and modules for Go projects with artifact_id and robust filtering.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:50.308145",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "extract_go_mod_info",
          "docstring": "Extract information from go.mod file.",
          "line_range": [
            199,
            235
          ],
          "parameters": [
            "root_dir"
          ],
          "decorators": [],
          "uid": "generators.go_json_generator.extract_go_mod_info",
          "uid_components": [
            "generators",
            "generators.go_json_generator",
            "generators.go_json_generator.extract_go_mod_info"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Extract information from go.mod file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:50.308158",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "generate_go_json",
          "docstring": "Generate JSON structure for Go project with artifact_id, summary, and tags.",
          "line_range": [
            238,
            312
          ],
          "parameters": [
            "root_dir",
            "include_patterns",
            "exclude_patterns",
            "gitignore_patterns",
            "include_ranges",
            "include_hashes",
            "goals",
            "exclude_dirs"
          ],
          "decorators": [],
          "uid": "generators.go_json_generator.generate_go_json",
          "uid_components": [
            "generators",
            "generators.go_json_generator",
            "generators.go_json_generator.generate_go_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate JSON structure for Go project with artifact_id, summary, and tags.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:50.308170",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "get_go_folder_structure": [
          "sorted",
          "os.walk",
          "p.rstrip",
          "file_path.relative_to",
          "generate_uid_components",
          "set",
          "uuid.uuid4",
          "any",
          "file_path.match",
          "structure.append",
          "create_legacy_artifact_id",
          "Path",
          "p.endswith",
          "str"
        ],
        "build_go_toc_and_modules": [
          "len",
          "modules.append",
          "p.rstrip",
          "f.match",
          "analyze_module",
          "generate_uid_components",
          "set",
          "isinstance",
          "generate_uid",
          "cls.get",
          "any",
          "module.get",
          "toc.append",
          "create_legacy_artifact_id",
          "Path",
          "p.endswith",
          "str"
        ],
        "extract_go_mod_info": [
          "line.split",
          "go_mod_path.exists",
          "len",
          "line.strip",
          "logging.error",
          "content.strip",
          "f.read",
          "open",
          "dependencies.append",
          "Path",
          "line.startswith"
        ],
        "generate_go_json": [
          "list",
          "extract_go_mod_info",
          "len",
          "m.get",
          "build_go_toc_and_modules",
          "set",
          "uuid.uuid4",
          "sum",
          "get_go_folder_structure",
          "go_mod_info.get",
          "Path",
          "str"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "List",
        "Optional",
        "Path",
        "UIDType",
        "analyze_module",
        "core.uid_generator",
        "create_legacy_artifact_id",
        "create_stable_uid",
        "datetime",
        "generate_uid",
        "generate_uid_components",
        "logging",
        "normalize_path_to_module_id",
        "os",
        "parsers.go_parser",
        "pathlib",
        "typing",
        "uuid"
      ],
      "hash": null,
      "uid": "generators.go_json_generator",
      "uid_components": [
        "generators",
        "generators.go_json_generator"
      ],
      "uid_type": "module",
      "artifact_id": "690fbcfd-37af-aae7-be65-bfd5569ad3c8",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:50.308099",
          "confidence": 0.7,
          "cache_key": "2f9c31f0"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 4,
        "lines_of_code": 40,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 20,
        "test_coverage": 0.0,
        "maintainability_index": 80
      },
      "markdown_anchor": {
        "id": "generators-go_json_generator",
        "title": "Module: generators.go_json_generator",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: generators.go_json_generator](#generators-go_json_generator)",
        "html_anchor": "<a id=\"generators-go_json_generator\"></a>"
      }
    },
    {
      "module_id": "generators.__init__",
      "path": "generators/__init__.py",
      "category": "cli",
      "module_doc": "Generator modules for creating LLMStruct JSON outputs from parsed code data.",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [
        "generate_json",
        "get_folder_structure",
        "json_generator"
      ],
      "hash": null,
      "uid": "generators.__init__",
      "uid_components": [
        "generators",
        "generators.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "a9e95c4d-a1f0-d961-7076-d6ebc87e7b5e",
      "smart_summary": {
        "summary": "Generator modules for creating LLMStruct JSON outputs from parsed code data.",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:50.308184",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 3,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "generators-__init__",
        "title": "Module: generators.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: generators.__init__](#generators-__init__)",
        "html_anchor": "<a id=\"generators-__init__\"></a>"
      }
    },
    {
      "module_id": "generators.json_generator",
      "path": "generators/json_generator.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "get_folder_structure",
          "docstring": "Capture directory and file structure with artifact_id, respecting .gitignore and patterns.",
          "line_range": [
            25,
            108
          ],
          "parameters": [
            "root_dir",
            "gitignore_patterns",
            "include_patterns",
            "exclude_patterns",
            "exclude_dirs"
          ],
          "decorators": [],
          "uid": "generators.json_generator.get_folder_structure",
          "uid_components": [
            "generators",
            "generators.json_generator",
            "generators.json_generator.get_folder_structure"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Capture directory and file structure with artifact_id, respecting .gitignore and patterns.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:50.308473",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "build_toc_and_modules",
          "docstring": "Build TOC and modules with artifact_id and robust filtering. Поддержка include_dirs.",
          "line_range": [
            111,
            220
          ],
          "parameters": [
            "root_dir",
            "include_patterns",
            "exclude_patterns",
            "gitignore_patterns",
            "include_ranges",
            "include_hashes",
            "exclude_dirs",
            "include_dirs"
          ],
          "decorators": [],
          "uid": "generators.json_generator.build_toc_and_modules",
          "uid_components": [
            "generators",
            "generators.json_generator",
            "generators.json_generator.build_toc_and_modules"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Build TOC and modules with artifact_id and robust filtering. Поддержка include_dirs.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:50.308490",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "generate_json",
          "docstring": "Generate JSON structure for project with artifact_id, summary, and tags. Поддержка include_dirs.",
          "line_range": [
            223,
            336
          ],
          "parameters": [
            "root_dir",
            "include_patterns",
            "exclude_patterns",
            "gitignore_patterns",
            "include_ranges",
            "include_hashes",
            "goals",
            "exclude_dirs",
            "include_dirs",
            "enable_smart_summaries",
            "llm_config"
          ],
          "decorators": [],
          "uid": "generators.json_generator.generate_json",
          "uid_components": [
            "generators",
            "generators.json_generator",
            "generators.json_generator.generate_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate JSON structure for project with artifact_id, summary, and tags. Поддержка include_dirs.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:50.308506",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "generate_json_with_output_file",
          "docstring": "",
          "line_range": [
            339,
            364
          ],
          "parameters": [
            "root_dir",
            "output_file",
            "gitignore_patterns",
            "include_patterns",
            "exclude_patterns",
            "exclude_dirs",
            "include_ranges",
            "include_hashes",
            "goals"
          ],
          "decorators": [],
          "uid": "generators.json_generator.generate_json_with_output_file",
          "uid_components": [
            "generators",
            "generators.json_generator",
            "generators.json_generator.generate_json_with_output_file"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Generates a JSON file with specified patterns and goals from a given directory.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:50.810694",
              "confidence": 0.7,
              "cache_key": "baad9c93"
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "norm_dirname",
          "docstring": "",
          "line_range": [
            133,
            134
          ],
          "parameters": [
            "d"
          ],
          "decorators": [],
          "uid": "generators.json_generator.norm_dirname",
          "uid_components": [
            "generators",
            "generators.json_generator",
            "generators.json_generator.norm_dirname"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Normalizes directory path by removing redundant slashes and resolving relative paths\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:51.360049",
              "confidence": 0.7,
              "cache_key": "2f71a8b9"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "is_included_dir",
          "docstring": "",
          "line_range": [
            143,
            147
          ],
          "parameters": [
            "f"
          ],
          "decorators": [],
          "uid": "generators.json_generator.is_included_dir",
          "uid_components": [
            "generators",
            "generators.json_generator",
            "generators.json_generator.is_included_dir"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Determines if a given directory is included in a specified file path.",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:52.111283",
              "confidence": 0.7,
              "cache_key": "7cc02e9d"
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "get_folder_structure": [
          "abs_dir_path.relative_to",
          "sorted",
          "os.walk",
          "p.rstrip",
          "file_path.relative_to",
          "generate_uid_components",
          "set",
          "create_legacy_artifact_id",
          "abs_dir_path.match",
          "any",
          "file_path.match",
          "structure.append",
          "abs_dir_path.joinpath",
          "Path",
          "p.endswith",
          "str"
        ],
        "build_toc_and_modules": [],
        "norm_dirname": [],
        "is_included_dir": [
          "any",
          "norm_dirname"
        ],
        "generate_json": [
          "set",
          "uuid.uuid4",
          "sum",
          "enhanced_modules.append",
          "module.copy",
          "enhance_entity_with_smart_summary",
          "create_summary_system",
          "enhanced_functions.append",
          "enhanced_methods.append",
          "module.get",
          "Path",
          "list",
          "get_folder_structure",
          "build_toc_and_modules",
          "str",
          "enhance_json_structure",
          "enhanced_classes.append",
          "len",
          "cls.get"
        ],
        "generate_json_with_output_file": [
          "open",
          "json.dump",
          "generate_json"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "List",
        "Optional",
        "Path",
        "UIDType",
        "analyze_module",
        "core.json_structure",
        "core.summary_system",
        "core.uid_generator",
        "create_legacy_artifact_id",
        "create_stable_uid",
        "create_summary_system",
        "datetime",
        "enhance_entity_with_smart_summary",
        "enhance_json_structure",
        "generate_uid",
        "generate_uid_components",
        "json",
        "logging",
        "normalize_path_to_module_id",
        "os",
        "parsers.python_parser",
        "pathlib",
        "typing",
        "uuid"
      ],
      "hash": null,
      "uid": "generators.json_generator",
      "uid_components": [
        "generators",
        "generators.json_generator"
      ],
      "uid_type": "module",
      "artifact_id": "2809b2d9-cd1b-3200-a59a-0bf46ced4497",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:19:50.308449",
          "confidence": 0.7,
          "cache_key": "b6fe328a"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 6,
        "lines_of_code": 60,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 26,
        "test_coverage": 0.0,
        "maintainability_index": 70
      },
      "markdown_anchor": {
        "id": "generators-json_generator",
        "title": "Module: generators.json_generator",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: generators.json_generator](#generators-json_generator)",
        "html_anchor": "<a id=\"generators-json_generator\"></a>"
      }
    },
    {
      "module_id": "api.routes.system",
      "path": "api/routes/system.py",
      "category": "core",
      "module_doc": "System routes for LLMStruct FastAPI\n\nHealth checks, metrics, and system information endpoints.",
      "functions": [
        {
          "name": "get_cli_bridge",
          "docstring": "Dependency to get CLI bridge instance",
          "line_range": [
            17,
            19
          ],
          "parameters": [],
          "decorators": [],
          "uid": "api.routes.system.get_cli_bridge",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.system",
            "api.routes.system.get_cli_bridge"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Dependency to get CLI bridge instance",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111348",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "health_check",
          "docstring": "Health check endpoint\n\nReturns the health status of the API and its dependencies.\nThis endpoint does not require authentication.",
          "line_range": [
            23,
            61
          ],
          "parameters": [
            "cli"
          ],
          "decorators": [
            "router.get('/health', response_model=HealthResponse)"
          ],
          "uid": "api.routes.system.health_check",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.system",
            "api.routes.system.health_check"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Health check endpoint",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111364",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "get_system_status",
          "docstring": "Get detailed system status\n\nReturns detailed system information including:\n- API version and configuration\n- CLI status and version\n- Resource usage (if available)",
          "line_range": [
            65,
            97
          ],
          "parameters": [],
          "decorators": [
            "router.get('/status')"
          ],
          "uid": "api.routes.system.get_system_status",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.system",
            "api.routes.system.get_system_status"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get detailed system status",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111381",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_version",
          "docstring": "Get API version information\n\nReturns version information for the API and underlying components.",
          "line_range": [
            101,
            123
          ],
          "parameters": [],
          "decorators": [
            "router.get('/version')"
          ],
          "uid": "api.routes.system.get_version",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.system",
            "api.routes.system.get_version"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get API version information",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111395",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "ping",
          "docstring": "Simple ping endpoint for basic connectivity testing",
          "line_range": [
            127,
            134
          ],
          "parameters": [],
          "decorators": [
            "router.get('/ping')"
          ],
          "uid": "api.routes.system.ping",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.system",
            "api.routes.system.ping"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Simple ping endpoint for basic connectivity testing",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111409",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "get_cli_bridge": [
          "CLIBridge"
        ],
        "health_check": [
          "Depends",
          "HealthResponse",
          "datetime.utcnow",
          "str",
          "cli.health_check",
          "router.get",
          "cli_health.get"
        ],
        "get_system_status": [
          "HTTPException",
          "datetime.utcnow",
          "str",
          "cli.health_check",
          "router.get",
          "CLIBridge",
          "cli_health.get"
        ],
        "get_version": [
          "HTTPException",
          "datetime.utcnow",
          "str",
          "cli.health_check",
          "router.get",
          "CLIBridge",
          "cli_health.get"
        ],
        "ping": [
          "datetime.utcnow",
          "router.get"
        ]
      },
      "dependencies": [
        "APIRouter",
        "CLIBridge",
        "Depends",
        "HTTPException",
        "HealthResponse",
        "HealthStatus",
        "asyncio",
        "datetime",
        "fastapi",
        "models.responses",
        "services.cli_bridge"
      ],
      "hash": null,
      "uid": "api.routes.system",
      "uid_components": [
        "api",
        "api.routes",
        "api.routes.system"
      ],
      "uid_type": "module",
      "artifact_id": "12ba74fb-ce49-2371-2ae7-2165e66984ff",
      "smart_summary": {
        "summary": "System routes for LLMStruct FastAPI",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:52.111329",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 5,
        "lines_of_code": 50,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 11,
        "test_coverage": 0.0,
        "maintainability_index": 75
      },
      "markdown_anchor": {
        "id": "api-routes-system",
        "title": "Module: api.routes.system",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.routes.system](#api-routes-system)",
        "html_anchor": "<a id=\"api-routes-system\"></a>"
      }
    },
    {
      "module_id": "api.routes.__init__",
      "path": "api/routes/__init__.py",
      "category": "cli",
      "module_doc": "Routes package for LLMStruct FastAPI\n\nContains all API endpoint routers.",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [],
      "hash": null,
      "uid": "api.routes.__init__",
      "uid_components": [
        "api",
        "api.routes",
        "api.routes.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "d0736668-b963-f05d-a46f-04d8c521ca8f",
      "smart_summary": {
        "summary": "Routes package for LLMStruct FastAPI",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:52.111424",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 0,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "api-routes-__init__",
        "title": "Module: api.routes.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.routes.__init__](#api-routes-__init__)",
        "html_anchor": "<a id=\"api-routes-__init__\"></a>"
      }
    },
    {
      "module_id": "api.routes.chat",
      "path": "api/routes/chat.py",
      "category": "core",
      "module_doc": "Chat Routes\n\nWebSocket-based real-time chat with LLM integration",
      "functions": [
        {
          "name": "websocket_chat",
          "docstring": "WebSocket endpoint for real-time chat",
          "line_range": [
            52,
            131
          ],
          "parameters": [
            "websocket",
            "session_id",
            "api_key"
          ],
          "decorators": [
            "router.websocket('/chat/ws')"
          ],
          "uid": "api.routes.chat.websocket_chat",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat",
            "api.routes.chat.websocket_chat"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "WebSocket endpoint for real-time chat",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111452",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "list_sessions",
          "docstring": "List active chat sessions",
          "line_range": [
            134,
            137
          ],
          "parameters": [],
          "decorators": [
            "router.get('/chat/sessions', dependencies=[Depends(get_api_key)])"
          ],
          "uid": "api.routes.chat.list_sessions",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat",
            "api.routes.chat.list_sessions"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "List active chat sessions",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111465",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_session",
          "docstring": "Get session details and history",
          "line_range": [
            140,
            145
          ],
          "parameters": [
            "session_id"
          ],
          "decorators": [
            "router.get('/chat/sessions/{session_id}', dependencies=[Depends(get_api_key)])"
          ],
          "uid": "api.routes.chat.get_session",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat",
            "api.routes.chat.get_session"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get session details and history",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111479",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "delete_session",
          "docstring": "Delete a chat session",
          "line_range": [
            148,
            153
          ],
          "parameters": [
            "session_id"
          ],
          "decorators": [
            "router.delete('/chat/sessions/{session_id}', dependencies=[Depends(get_api_key)])"
          ],
          "uid": "api.routes.chat.delete_session",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat",
            "api.routes.chat.delete_session"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Delete a chat session",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111491",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "send_message",
          "docstring": "Send a message via HTTP (alternative to WebSocket)",
          "line_range": [
            156,
            179
          ],
          "parameters": [
            "message"
          ],
          "decorators": [
            "router.post('/chat/message', dependencies=[Depends(get_api_key)])"
          ],
          "uid": "api.routes.chat.send_message",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat",
            "api.routes.chat.send_message"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Send a message via HTTP (alternative to WebSocket)",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111505",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            32,
            33
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "api.routes.chat.__init__",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat",
            "api.routes.chat.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes a new instance of the class with default values and settings\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:53.459336",
              "confidence": 0.7,
              "cache_key": "750e6f51"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "connect",
          "docstring": "",
          "line_range": [
            35,
            38
          ],
          "parameters": [
            "self",
            "websocket",
            "session_id"
          ],
          "decorators": [],
          "uid": "api.routes.chat.connect",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat",
            "api.routes.chat.connect"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Establishes a connection between a client and server using a WebSocket and session ID.",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:54.133491",
              "confidence": 0.7,
              "cache_key": "80fbc59a"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "disconnect",
          "docstring": "",
          "line_range": [
            40,
            43
          ],
          "parameters": [
            "self",
            "session_id"
          ],
          "decorators": [],
          "uid": "api.routes.chat.disconnect",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat",
            "api.routes.chat.disconnect"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Closes a specific session connection identified by session_id\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:54.751070",
              "confidence": 0.7,
              "cache_key": "8d1307c7"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "send_message",
          "docstring": "",
          "line_range": [
            45,
            47
          ],
          "parameters": [
            "self",
            "session_id",
            "message"
          ],
          "decorators": [],
          "uid": "api.routes.chat.send_message",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat",
            "api.routes.chat.send_message"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Transmits message to specified session ID using provided data\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:55.273834",
              "confidence": 0.7,
              "cache_key": "4ae244ce"
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "ConnectionManager",
          "docstring": "Manages WebSocket connections",
          "line_range": [
            29,
            47
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                32,
                33
              ],
              "parameters": [
                "self"
              ],
              "uid": "api.routes.chat.ConnectionManager.__init__",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.ConnectionManager",
                "api.routes.chat.ConnectionManager.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes an instance of a class with default attributes and settings\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:55.894529",
                  "confidence": 0.7,
                  "cache_key": "ff95f951"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "connect",
              "docstring": "",
              "line_range": [
                35,
                38
              ],
              "parameters": [
                "self",
                "websocket",
                "session_id"
              ],
              "uid": "api.routes.chat.ConnectionManager.connect",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.ConnectionManager",
                "api.routes.chat.ConnectionManager.connect"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Establishes a connection between the client and server using a WebSocket and session ID.",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:58.033933",
                  "confidence": 0.7,
                  "cache_key": "10c299c4"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "disconnect",
              "docstring": "",
              "line_range": [
                40,
                43
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "uid": "api.routes.chat.ConnectionManager.disconnect",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.ConnectionManager",
                "api.routes.chat.ConnectionManager.disconnect"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Terminates a user's session by removing session ID from active sessions list\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:58.646481",
                  "confidence": 0.7,
                  "cache_key": "3a2185c6"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "send_message",
              "docstring": "",
              "line_range": [
                45,
                47
              ],
              "parameters": [
                "self",
                "session_id",
                "message"
              ],
              "uid": "api.routes.chat.ConnectionManager.send_message",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.ConnectionManager",
                "api.routes.chat.ConnectionManager.send_message"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Sends a message to a specified session ID with the provided message content.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:59.155135",
                  "confidence": 0.7,
                  "cache_key": "0a182e75"
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "api.routes.chat.ConnectionManager",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat",
            "api.routes.chat.ConnectionManager"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Manages WebSocket connections",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:55.274018",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class",
              "management"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [],
        "connect": [
          "logger.info",
          "websocket.accept"
        ],
        "disconnect": [
          "logger.info"
        ],
        "send_message": [
          "logger.error",
          "session_manager.add_message",
          "ChatResponse",
          "Depends",
          "HTTPException",
          "llm_service.process_message",
          "router.post",
          "str"
        ],
        "websocket_chat": [
          "datetime.now",
          "logger.error",
          "session_manager.add_message",
          "manager.send_message",
          "manager.connect",
          "logger.info",
          "router.websocket",
          "uuid.uuid4",
          "json.loads",
          "manager.disconnect",
          "websocket.receive_text",
          "websocket.close",
          "llm_service.process_message",
          "message_data.get",
          "str",
          "session_manager.get_or_create_session"
        ],
        "list_sessions": [
          "Depends",
          "session_manager.list_sessions",
          "router.get"
        ],
        "get_session": [
          "Depends",
          "router.get",
          "HTTPException",
          "session_manager.get_session"
        ],
        "delete_session": [
          "Depends",
          "session_manager.delete_session",
          "router.delete",
          "HTTPException"
        ]
      },
      "dependencies": [
        "APIRouter",
        "Any",
        "ChatMessage",
        "ChatResponse",
        "ChatSessionManager",
        "Depends",
        "Dict",
        "HTTPBearer",
        "HTTPException",
        "LLMService",
        "Optional",
        "WebSocket",
        "WebSocketDisconnect",
        "asyncio",
        "datetime",
        "fastapi",
        "fastapi.security",
        "get_api_key",
        "json",
        "logging",
        "middleware.auth",
        "models.requests",
        "models.responses",
        "services.chat_session",
        "services.llm_service",
        "typing",
        "uuid"
      ],
      "hash": null,
      "uid": "api.routes.chat",
      "uid_components": [
        "api",
        "api.routes",
        "api.routes.chat"
      ],
      "uid_type": "module",
      "artifact_id": "860becb9-11cf-57e8-1684-a1748a699775",
      "smart_summary": {
        "summary": "Chat Routes",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:52.111438",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 11,
        "lines_of_code": 90,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 27,
        "test_coverage": 0.0,
        "maintainability_index": 45
      },
      "markdown_anchor": {
        "id": "api-routes-chat",
        "title": "Module: api.routes.chat",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.routes.chat](#api-routes-chat)",
        "html_anchor": "<a id=\"api-routes-chat\"></a>"
      }
    },
    {
      "module_id": "api.routes.continue_adapter",
      "path": "api/routes/continue_adapter.py",
      "category": "core",
      "module_doc": "Continue API Adapter\n\nTranslates Continue extension requests to LLMStruct chat API format",
      "functions": [
        {
          "name": "continue_chat_completion",
          "docstring": "Continue-compatible chat completion endpoint\nTranslates Continue requests to our LLMStruct format",
          "line_range": [
            59,
            129
          ],
          "parameters": [
            "request",
            "api_key"
          ],
          "decorators": [
            "router.post('/v1/chat/completions')"
          ],
          "uid": "api.routes.continue_adapter.continue_chat_completion",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.continue_adapter",
            "api.routes.continue_adapter.continue_chat_completion"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Continue-compatible chat completion endpoint",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:59.155200",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "continue_models",
          "docstring": "List available models for Continue",
          "line_range": [
            132,
            158
          ],
          "parameters": [
            "api_key"
          ],
          "decorators": [
            "router.get('/v1/models')"
          ],
          "uid": "api.routes.continue_adapter.continue_models",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.continue_adapter",
            "api.routes.continue_adapter.continue_models"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "List available models for Continue",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:59.155216",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "continue_embeddings",
          "docstring": "Embeddings endpoint for Continue (placeholder)",
          "line_range": [
            161,
            193
          ],
          "parameters": [
            "request",
            "api_key"
          ],
          "decorators": [
            "router.post('/v1/embeddings')"
          ],
          "uid": "api.routes.continue_adapter.continue_embeddings",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.continue_adapter",
            "api.routes.continue_adapter.continue_embeddings"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Embeddings endpoint for Continue (placeholder)",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:59.155229",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            25,
            35
          ],
          "parameters": [
            "self",
            "messages",
            "model",
            "temperature",
            "max_tokens",
            "stream"
          ],
          "decorators": [],
          "uid": "api.routes.continue_adapter.__init__",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.continue_adapter",
            "api.routes.continue_adapter.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes a model for generating text based on input messages and specified parameters.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:59.857548",
              "confidence": 0.7,
              "cache_key": "831c971c"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            39,
            56
          ],
          "parameters": [
            "self",
            "content",
            "model"
          ],
          "decorators": [],
          "uid": "api.routes.continue_adapter.__init__",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.continue_adapter",
            "api.routes.continue_adapter.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes a new instance of a class with specified content and model parameters.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:00.963120",
              "confidence": 0.7,
              "cache_key": "084ba4ea"
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "ContinueRequest",
          "docstring": "Continue API request format",
          "line_range": [
            23,
            35
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                25,
                35
              ],
              "parameters": [
                "self",
                "messages",
                "model",
                "temperature",
                "max_tokens",
                "stream"
              ],
              "uid": "api.routes.continue_adapter.ContinueRequest.__init__",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.continue_adapter",
                "api.routes.continue_adapter.ContinueRequest",
                "api.routes.continue_adapter.ContinueRequest.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes a model for generating text based on input messages and specified parameters.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:01.470942",
                  "confidence": 0.7,
                  "cache_key": "7c2a5a93"
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "api.routes.continue_adapter.ContinueRequest",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.continue_adapter",
            "api.routes.continue_adapter.ContinueRequest"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Continue API request format",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:00.963181",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ContinueResponse",
          "docstring": "Continue API response format (OpenAI-compatible)",
          "line_range": [
            37,
            56
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                39,
                56
              ],
              "parameters": [
                "self",
                "content",
                "model"
              ],
              "uid": "api.routes.continue_adapter.ContinueResponse.__init__",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.continue_adapter",
                "api.routes.continue_adapter.ContinueResponse",
                "api.routes.continue_adapter.ContinueResponse.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes a new instance of the class with specified content and model parameters.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:02.055285",
                  "confidence": 0.7,
                  "cache_key": "c3ae6e6b"
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "api.routes.continue_adapter.ContinueResponse",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.continue_adapter",
            "api.routes.continue_adapter.ContinueResponse"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Continue API response format (OpenAI-compatible)",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:01.470997",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "datetime.now",
          "int",
          "content.split",
          "len"
        ],
        "continue_chat_completion": [
          "logger.error",
          "request_data.get",
          "len",
          "Depends",
          "logger.info",
          "ContinueResponse",
          "HTTPException",
          "reversed",
          "datetime.now",
          "llm_service.process_message",
          "router.post",
          "msg.get",
          "str",
          "request.json"
        ],
        "continue_models": [
          "Depends",
          "int",
          "router.get",
          "datetime.now"
        ],
        "continue_embeddings": [
          "logger.error",
          "request_data.get",
          "len",
          "input_text.split",
          "Depends",
          "HTTPException",
          "router.post",
          "str",
          "request.json"
        ]
      },
      "dependencies": [
        "APIRouter",
        "Any",
        "ChatMessage",
        "ChatResponse",
        "Depends",
        "Dict",
        "HTTPException",
        "LLMService",
        "List",
        "Optional",
        "Request",
        "datetime",
        "fastapi",
        "get_api_key",
        "logging",
        "middleware.auth",
        "models.requests",
        "models.responses",
        "services.llm_service",
        "typing"
      ],
      "hash": null,
      "uid": "api.routes.continue_adapter",
      "uid_components": [
        "api",
        "api.routes",
        "api.routes.continue_adapter"
      ],
      "uid_type": "module",
      "artifact_id": "9f9ae652-58ea-a28f-e252-eb60670cb8c0",
      "smart_summary": {
        "summary": "Continue API Adapter",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:19:59.155176",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 9,
        "lines_of_code": 50,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 20,
        "test_coverage": 0.0,
        "maintainability_index": 55
      },
      "markdown_anchor": {
        "id": "api-routes-continue_adapter",
        "title": "Module: api.routes.continue_adapter",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.routes.continue_adapter](#api-routes-continue_adapter)",
        "html_anchor": "<a id=\"api-routes-continue_adapter\"></a>"
      }
    },
    {
      "module_id": "api.middleware.__init__",
      "path": "api/middleware/__init__.py",
      "category": "cli",
      "module_doc": "Middleware package for LLMStruct FastAPI\n\nContains authentication, logging, and other middleware.",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [],
      "hash": null,
      "uid": "api.middleware.__init__",
      "uid_components": [
        "api",
        "api.middleware",
        "api.middleware.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "7731b3fd-507c-2cac-f6ae-59a0a1a17dae",
      "smart_summary": {
        "summary": "Middleware package for LLMStruct FastAPI",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:20:02.055337",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 0,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "api-middleware-__init__",
        "title": "Module: api.middleware.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.middleware.__init__](#api-middleware-__init__)",
        "html_anchor": "<a id=\"api-middleware-__init__\"></a>"
      }
    },
    {
      "module_id": "api.middleware.logging",
      "path": "api/middleware/logging.py",
      "category": "core",
      "module_doc": "Logging middleware for LLMStruct FastAPI",
      "functions": [
        {
          "name": "request_logging_middleware",
          "docstring": "Request and response logging middleware",
          "line_range": [
            14,
            72
          ],
          "parameters": [
            "request",
            "call_next"
          ],
          "decorators": [],
          "uid": "api.middleware.logging.request_logging_middleware",
          "uid_components": [
            "api",
            "api.middleware",
            "api.middleware.logging",
            "api.middleware.logging.request_logging_middleware"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Request and response logging middleware",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:02.055393",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "request_logging_middleware": [
          "call_next",
          "logger.error",
          "getattr",
          "logger.info",
          "time.time",
          "uuid.uuid4",
          "str"
        ]
      },
      "dependencies": [
        "Callable",
        "Request",
        "fastapi",
        "logging",
        "time",
        "typing",
        "uuid"
      ],
      "hash": null,
      "uid": "api.middleware.logging",
      "uid_components": [
        "api",
        "api.middleware",
        "api.middleware.logging"
      ],
      "uid_type": "module",
      "artifact_id": "32aa4c95-9c32-ac22-1c0e-cc12db39cb58",
      "smart_summary": {
        "summary": "Logging middleware for LLMStruct FastAPI",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:20:02.055367",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 7,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "api-middleware-logging",
        "title": "Module: api.middleware.logging",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.middleware.logging](#api-middleware-logging)",
        "html_anchor": "<a id=\"api-middleware-logging\"></a>"
      }
    },
    {
      "module_id": "api.services.llm_service",
      "path": "api/services/llm_service.py",
      "category": "core",
      "module_doc": "LLM Service\n\nIntegrates with existing LLM models and context orchestration",
      "functions": [
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            24,
            28
          ],
          "parameters": [
            "self",
            "content",
            "context_info",
            "token_usage"
          ],
          "decorators": [],
          "uid": "api.services.llm_service.__init__",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes object with content, context information, and token usage parameters.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:02.683943",
              "confidence": 0.7,
              "cache_key": "4f43f72c"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            33,
            36
          ],
          "parameters": [
            "self",
            "api_key"
          ],
          "decorators": [],
          "uid": "api.services.llm_service.__init__",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes class instance with provided API key for further operations\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:03.171989",
              "confidence": 0.7,
              "cache_key": "22a73030"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "chat_completion",
          "docstring": "Send chat completion request to Anthropic",
          "line_range": [
            38,
            77
          ],
          "parameters": [
            "self",
            "messages",
            "temperature"
          ],
          "decorators": [],
          "uid": "api.services.llm_service.chat_completion",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.chat_completion"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Send chat completion request to Anthropic",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:03.172037",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            82,
            85
          ],
          "parameters": [
            "self",
            "api_key"
          ],
          "decorators": [],
          "uid": "api.services.llm_service.__init__",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes object with API key for authentication and access control.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:08.809553",
              "confidence": 0.7,
              "cache_key": "6dec3c86"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "chat_completion",
          "docstring": "Send chat completion request to Grok",
          "line_range": [
            87,
            113
          ],
          "parameters": [
            "self",
            "messages",
            "temperature"
          ],
          "decorators": [],
          "uid": "api.services.llm_service.chat_completion",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.chat_completion"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Send chat completion request to Grok",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:08.809593",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            118,
            124
          ],
          "parameters": [
            "self",
            "base_path"
          ],
          "decorators": [],
          "uid": "api.services.llm_service.__init__",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes an object with a specified base path for file operations\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:09.343796",
              "confidence": 0.7,
              "cache_key": "b1aa622c"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_initialize_components",
          "docstring": "Initialize context orchestrator and copilot manager",
          "line_range": [
            126,
            140
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "api.services.llm_service._initialize_components",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service._initialize_components"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Initialize context orchestrator and copilot manager",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343838",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        },
        {
          "name": "process_message",
          "docstring": "Process a user message and return AI response",
          "line_range": [
            143,
            168
          ],
          "parameters": [
            "self",
            "message",
            "session_id",
            "context_mode"
          ],
          "decorators": [],
          "uid": "api.services.llm_service.process_message",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.process_message"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Process a user message and return AI response",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343855",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        },
        {
          "name": "_try_llm_providers",
          "docstring": "Try LLM providers in order and return response",
          "line_range": [
            170,
            195
          ],
          "parameters": [
            "self",
            "message",
            "context_info"
          ],
          "decorators": [],
          "uid": "api.services.llm_service._try_llm_providers",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service._try_llm_providers"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Try LLM providers in order and return response",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343869",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_get_context",
          "docstring": "Get relevant context for the message",
          "line_range": [
            197,
            229
          ],
          "parameters": [
            "self",
            "message",
            "context_mode"
          ],
          "decorators": [],
          "uid": "api.services.llm_service._get_context",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service._get_context"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get relevant context for the message",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343881",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_get_full_context",
          "docstring": "Get full project context",
          "line_range": [
            231,
            243
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "api.services.llm_service._get_full_context",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service._get_full_context"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get full project context",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343892",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_get_focused_context",
          "docstring": "Get focused context based on message content",
          "line_range": [
            245,
            260
          ],
          "parameters": [
            "self",
            "message"
          ],
          "decorators": [],
          "uid": "api.services.llm_service._get_focused_context",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service._get_focused_context"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get focused context based on message content",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343904",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_get_minimal_context",
          "docstring": "Get minimal context - basic project info",
          "line_range": [
            262,
            267
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "api.services.llm_service._get_minimal_context",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service._get_minimal_context"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get minimal context - basic project info",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343915",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_generate_grok_response",
          "docstring": "Generate response using Grok API",
          "line_range": [
            269,
            287
          ],
          "parameters": [
            "self",
            "message",
            "context_info"
          ],
          "decorators": [],
          "uid": "api.services.llm_service._generate_grok_response",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service._generate_grok_response"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate response using Grok API",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343927",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "_generate_anthropic_response",
          "docstring": "Generate response using Anthropic API",
          "line_range": [
            289,
            307
          ],
          "parameters": [
            "self",
            "message",
            "context_info"
          ],
          "decorators": [],
          "uid": "api.services.llm_service._generate_anthropic_response",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service._generate_anthropic_response"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate response using Anthropic API",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343938",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "_build_system_prompt",
          "docstring": "Build system prompt with project context",
          "line_range": [
            309,
            344
          ],
          "parameters": [
            "self",
            "context_info"
          ],
          "decorators": [],
          "uid": "api.services.llm_service._build_system_prompt",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service._build_system_prompt"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Build system prompt with project context",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343950",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_generate_mock_response",
          "docstring": "Generate a mock AI response (placeholder for real LLM)",
          "line_range": [
            346,
            380
          ],
          "parameters": [
            "self",
            "message",
            "context_info"
          ],
          "decorators": [],
          "uid": "api.services.llm_service._generate_mock_response",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service._generate_mock_response"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate a mock AI response (placeholder for real LLM)",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343962",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "LLMResponse",
          "docstring": "Response from LLM processing",
          "line_range": [
            21,
            28
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                24,
                28
              ],
              "parameters": [
                "self",
                "content",
                "context_info",
                "token_usage"
              ],
              "uid": "api.services.llm_service.LLMResponse.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMResponse",
                "api.services.llm_service.LLMResponse.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes an object with specified content, context information, and token usage\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:09.845803",
                  "confidence": 0.7,
                  "cache_key": "39c6afba"
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "api.services.llm_service.LLMResponse",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.LLMResponse"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Response from LLM processing",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.343974",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "AnthropicClient",
          "docstring": "Client for Anthropic Claude API",
          "line_range": [
            30,
            77
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                33,
                36
              ],
              "parameters": [
                "self",
                "api_key"
              ],
              "uid": "api.services.llm_service.AnthropicClient.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.AnthropicClient",
                "api.services.llm_service.AnthropicClient.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes an object with the provided API key for authentication\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:10.650276",
                  "confidence": 0.7,
                  "cache_key": "7aa32c66"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "chat_completion",
              "docstring": "Send chat completion request to Anthropic",
              "line_range": [
                38,
                77
              ],
              "parameters": [
                "self",
                "messages",
                "temperature"
              ],
              "uid": "api.services.llm_service.AnthropicClient.chat_completion",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.AnthropicClient",
                "api.services.llm_service.AnthropicClient.chat_completion"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Send chat completion request to Anthropic",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:10.650325",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "api.services.llm_service.AnthropicClient",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.AnthropicClient"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Client for Anthropic Claude API",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:09.845843",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "GrokClient",
          "docstring": "Client for Grok API integration",
          "line_range": [
            79,
            113
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                82,
                85
              ],
              "parameters": [
                "self",
                "api_key"
              ],
              "uid": "api.services.llm_service.GrokClient.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.GrokClient",
                "api.services.llm_service.GrokClient.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes an object with an API key for authentication and access control.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:11.223094",
                  "confidence": 0.7,
                  "cache_key": "e3af9569"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "chat_completion",
              "docstring": "Send chat completion request to Grok",
              "line_range": [
                87,
                113
              ],
              "parameters": [
                "self",
                "messages",
                "temperature"
              ],
              "uid": "api.services.llm_service.GrokClient.chat_completion",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.GrokClient",
                "api.services.llm_service.GrokClient.chat_completion"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Send chat completion request to Grok",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:11.223260",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "api.services.llm_service.GrokClient",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.GrokClient"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Client for Grok API integration",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:10.650347",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "LLMService",
          "docstring": "Service for LLM processing with context integration",
          "line_range": [
            115,
            380
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                118,
                124
              ],
              "parameters": [
                "self",
                "base_path"
              ],
              "uid": "api.services.llm_service.LLMService.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes an object with a specified base path for file operations\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:12.151776",
                  "confidence": 0.7,
                  "cache_key": "2fc33b94"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_initialize_components",
              "docstring": "Initialize context orchestrator and copilot manager",
              "line_range": [
                126,
                140
              ],
              "parameters": [
                "self"
              ],
              "uid": "api.services.llm_service.LLMService._initialize_components",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService._initialize_components"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Initialize context orchestrator and copilot manager",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.151965",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "management"
                ]
              }
            },
            {
              "name": "process_message",
              "docstring": "Process a user message and return AI response",
              "line_range": [
                143,
                168
              ],
              "parameters": [
                "self",
                "message",
                "session_id",
                "context_mode"
              ],
              "uid": "api.services.llm_service.LLMService.process_message",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService.process_message"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Process a user message and return AI response",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.152057",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "processing"
                ]
              }
            },
            {
              "name": "_try_llm_providers",
              "docstring": "Try LLM providers in order and return response",
              "line_range": [
                170,
                195
              ],
              "parameters": [
                "self",
                "message",
                "context_info"
              ],
              "uid": "api.services.llm_service.LLMService._try_llm_providers",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService._try_llm_providers"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Try LLM providers in order and return response",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.152164",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_get_context",
              "docstring": "Get relevant context for the message",
              "line_range": [
                197,
                229
              ],
              "parameters": [
                "self",
                "message",
                "context_mode"
              ],
              "uid": "api.services.llm_service.LLMService._get_context",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService._get_context"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get relevant context for the message",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.152309",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_get_full_context",
              "docstring": "Get full project context",
              "line_range": [
                231,
                243
              ],
              "parameters": [
                "self"
              ],
              "uid": "api.services.llm_service.LLMService._get_full_context",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService._get_full_context"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get full project context",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.152443",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_get_focused_context",
              "docstring": "Get focused context based on message content",
              "line_range": [
                245,
                260
              ],
              "parameters": [
                "self",
                "message"
              ],
              "uid": "api.services.llm_service.LLMService._get_focused_context",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService._get_focused_context"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get focused context based on message content",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.152604",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_get_minimal_context",
              "docstring": "Get minimal context - basic project info",
              "line_range": [
                262,
                267
              ],
              "parameters": [
                "self"
              ],
              "uid": "api.services.llm_service.LLMService._get_minimal_context",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService._get_minimal_context"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get minimal context - basic project info",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.152677",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_generate_grok_response",
              "docstring": "Generate response using Grok API",
              "line_range": [
                269,
                287
              ],
              "parameters": [
                "self",
                "message",
                "context_info"
              ],
              "uid": "api.services.llm_service.LLMService._generate_grok_response",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService._generate_grok_response"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate response using Grok API",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.152734",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "_generate_anthropic_response",
              "docstring": "Generate response using Anthropic API",
              "line_range": [
                289,
                307
              ],
              "parameters": [
                "self",
                "message",
                "context_info"
              ],
              "uid": "api.services.llm_service.LLMService._generate_anthropic_response",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService._generate_anthropic_response"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate response using Anthropic API",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.152791",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "_build_system_prompt",
              "docstring": "Build system prompt with project context",
              "line_range": [
                309,
                344
              ],
              "parameters": [
                "self",
                "context_info"
              ],
              "uid": "api.services.llm_service.LLMService._build_system_prompt",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService._build_system_prompt"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Build system prompt with project context",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.152843",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_generate_mock_response",
              "docstring": "Generate a mock AI response (placeholder for real LLM)",
              "line_range": [
                346,
                380
              ],
              "parameters": [
                "self",
                "message",
                "context_info"
              ],
              "uid": "api.services.llm_service.LLMService._generate_mock_response",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService",
                "api.services.llm_service.LLMService._generate_mock_response"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Generate a mock AI response (placeholder for real LLM)",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:12.152895",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "api.services.llm_service.LLMService",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service",
            "api.services.llm_service.LLMService"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Service for LLM processing with context integration",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:11.223358",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "GrokClient",
          "Path.cwd",
          "AnthropicClient",
          "self._initialize_components"
        ],
        "chat_completion": [
          "response.json",
          "ValueError",
          "client.post",
          "httpx.AsyncClient",
          "response.raise_for_status"
        ],
        "_initialize_components": [
          "logger.error",
          "logger.info",
          "CopilotContextManager",
          "SmartContextOrchestrator",
          "str"
        ],
        "process_message": [
          "logger.error",
          "self._try_llm_providers",
          "self._get_context",
          "LLMResponse",
          "str"
        ],
        "_try_llm_providers": [
          "logger.warning",
          "len",
          "logger.info",
          "self._generate_grok_response",
          "self._generate_mock_response",
          "self._generate_anthropic_response"
        ],
        "_get_context": [
          "logger.error",
          "context_info.update",
          "self._get_focused_context",
          "self._get_minimal_context",
          "self._get_full_context",
          "str"
        ],
        "_get_full_context": [
          "list",
          "len",
          "struct_data.get",
          "struct_file.exists",
          "open",
          "json.load"
        ],
        "_get_focused_context": [
          "any",
          "message.lower"
        ],
        "_get_minimal_context": [
          "datetime.now",
          "str"
        ],
        "_generate_grok_response": [
          "ValueError",
          "len",
          "self._build_system_prompt"
        ],
        "_generate_anthropic_response": [
          "ValueError",
          "len",
          "self._build_system_prompt"
        ],
        "_build_system_prompt": [
          "context_info.get"
        ],
        "_generate_mock_response": [
          "len",
          "context_info.get",
          "message.lower"
        ]
      },
      "dependencies": [
        "Any",
        "CopilotContextManager",
        "Dict",
        "List",
        "Optional",
        "Path",
        "SmartContextOrchestrator",
        "asyncio",
        "context_orchestrator",
        "copilot",
        "datetime",
        "httpx",
        "json",
        "logging",
        "os",
        "pathlib",
        "typing"
      ],
      "hash": null,
      "uid": "api.services.llm_service",
      "uid_components": [
        "api",
        "api.services",
        "api.services.llm_service"
      ],
      "uid_type": "module",
      "artifact_id": "28585c00-d499-1e0e-4fc3-c527545a3bbc",
      "smart_summary": {
        "summary": "LLM Service",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:20:02.055419",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 25,
        "lines_of_code": 170,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 17,
        "test_coverage": 0.0,
        "maintainability_index": 0
      },
      "markdown_anchor": {
        "id": "api-services-llm_service",
        "title": "Module: api.services.llm_service",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.services.llm_service](#api-services-llm_service)",
        "html_anchor": "<a id=\"api-services-llm_service\"></a>"
      }
    },
    {
      "module_id": "api.services.__init__",
      "path": "api/services/__init__.py",
      "category": "cli",
      "module_doc": "Services package for LLMStruct FastAPI\n\nContains business logic and integration services.",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [],
      "hash": null,
      "uid": "api.services.__init__",
      "uid_components": [
        "api",
        "api.services",
        "api.services.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "2098fa1a-1880-cdd9-84be-8b4c4b77b089",
      "smart_summary": {
        "summary": "Services package for LLMStruct FastAPI",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:20:12.152955",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 0,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "api-services-__init__",
        "title": "Module: api.services.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.services.__init__](#api-services-__init__)",
        "html_anchor": "<a id=\"api-services-__init__\"></a>"
      }
    },
    {
      "module_id": "api.services.cli_bridge",
      "path": "api/services/cli_bridge.py",
      "category": "core",
      "module_doc": "CLI Bridge Service\n\nProvides async integration between FastAPI and existing LLMStruct CLI functionality.",
      "functions": [
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            29,
            33
          ],
          "parameters": [
            "self",
            "base_path"
          ],
          "decorators": [],
          "uid": "api.services.cli_bridge.__init__",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes object with specified base path for file operations\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:13.435929",
              "confidence": 0.7,
              "cache_key": "c98cad96"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_get_python_command",
          "docstring": "Determine the best Python command to use",
          "line_range": [
            35,
            40
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "api.services.cli_bridge._get_python_command",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge._get_python_command"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Determine the best Python command to use",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:13.435970",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "scan_project",
          "docstring": "Execute project scan via CLI",
          "line_range": [
            42,
            87
          ],
          "parameters": [
            "self",
            "options"
          ],
          "decorators": [],
          "uid": "api.services.cli_bridge.scan_project",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge.scan_project"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Execute project scan via CLI",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:13.435987",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_context",
          "docstring": "Get project context in specified mode",
          "line_range": [
            89,
            98
          ],
          "parameters": [
            "self",
            "mode",
            "include_files"
          ],
          "decorators": [],
          "uid": "api.services.cli_bridge.get_context",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge.get_context"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get project context in specified mode",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:13.436001",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_project_info",
          "docstring": "Get basic project information",
          "line_range": [
            100,
            104
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "api.services.cli_bridge.get_project_info",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge.get_project_info"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get basic project information",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:13.436013",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "validate_json",
          "docstring": "Validate JSON structure",
          "line_range": [
            106,
            110
          ],
          "parameters": [
            "self",
            "json_path"
          ],
          "decorators": [],
          "uid": "api.services.cli_bridge.validate_json",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge.validate_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Validate JSON structure",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:13.436025",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "health_check",
          "docstring": "Check CLI health and availability",
          "line_range": [
            112,
            128
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "api.services.cli_bridge.health_check",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge.health_check"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Check CLI health and availability",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:13.436038",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "validation"
            ]
          }
        },
        {
          "name": "_run_command",
          "docstring": "Run CLI command asynchronously",
          "line_range": [
            130,
            161
          ],
          "parameters": [
            "self",
            "cmd",
            "timeout"
          ],
          "decorators": [],
          "uid": "api.services.cli_bridge._run_command",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge._run_command"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Run CLI command asynchronously",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:13.436049",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_parse_cli_output",
          "docstring": "Parse CLI JSON output",
          "line_range": [
            163,
            176
          ],
          "parameters": [
            "self",
            "output"
          ],
          "decorators": [],
          "uid": "api.services.cli_bridge._parse_cli_output",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge._parse_cli_output"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Parse CLI JSON output",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:13.436061",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "CLIBridgeError",
          "docstring": "CLI Bridge specific errors",
          "line_range": [
            21,
            23
          ],
          "methods": [],
          "bases": [
            "Exception"
          ],
          "uid": "api.services.cli_bridge.CLIBridgeError",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge.CLIBridgeError"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "CLI Bridge specific errors",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:13.436074",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "CLIBridge",
          "docstring": "Bridge between FastAPI and existing CLI functionality",
          "line_range": [
            26,
            176
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                29,
                33
              ],
              "parameters": [
                "self",
                "base_path"
              ],
              "uid": "api.services.cli_bridge.CLIBridge.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridge",
                "api.services.cli_bridge.CLIBridge.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes class instance with specified base path for file operations.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:14.028536",
                  "confidence": 0.7,
                  "cache_key": "1868a5b4"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_get_python_command",
              "docstring": "Determine the best Python command to use",
              "line_range": [
                35,
                40
              ],
              "parameters": [
                "self"
              ],
              "uid": "api.services.cli_bridge.CLIBridge._get_python_command",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridge",
                "api.services.cli_bridge.CLIBridge._get_python_command"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Determine the best Python command to use",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.028578",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "scan_project",
              "docstring": "Execute project scan via CLI",
              "line_range": [
                42,
                87
              ],
              "parameters": [
                "self",
                "options"
              ],
              "uid": "api.services.cli_bridge.CLIBridge.scan_project",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridge",
                "api.services.cli_bridge.CLIBridge.scan_project"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Execute project scan via CLI",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.028595",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_context",
              "docstring": "Get project context in specified mode",
              "line_range": [
                89,
                98
              ],
              "parameters": [
                "self",
                "mode",
                "include_files"
              ],
              "uid": "api.services.cli_bridge.CLIBridge.get_context",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridge",
                "api.services.cli_bridge.CLIBridge.get_context"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get project context in specified mode",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.028609",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_project_info",
              "docstring": "Get basic project information",
              "line_range": [
                100,
                104
              ],
              "parameters": [
                "self"
              ],
              "uid": "api.services.cli_bridge.CLIBridge.get_project_info",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridge",
                "api.services.cli_bridge.CLIBridge.get_project_info"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get basic project information",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.028622",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "validate_json",
              "docstring": "Validate JSON structure",
              "line_range": [
                106,
                110
              ],
              "parameters": [
                "self",
                "json_path"
              ],
              "uid": "api.services.cli_bridge.CLIBridge.validate_json",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridge",
                "api.services.cli_bridge.CLIBridge.validate_json"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Validate JSON structure",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.028634",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "health_check",
              "docstring": "Check CLI health and availability",
              "line_range": [
                112,
                128
              ],
              "parameters": [
                "self"
              ],
              "uid": "api.services.cli_bridge.CLIBridge.health_check",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridge",
                "api.services.cli_bridge.CLIBridge.health_check"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Check CLI health and availability",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.028646",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "validation"
                ]
              }
            },
            {
              "name": "_run_command",
              "docstring": "Run CLI command asynchronously",
              "line_range": [
                130,
                161
              ],
              "parameters": [
                "self",
                "cmd",
                "timeout"
              ],
              "uid": "api.services.cli_bridge.CLIBridge._run_command",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridge",
                "api.services.cli_bridge.CLIBridge._run_command"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Run CLI command asynchronously",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.028658",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_parse_cli_output",
              "docstring": "Parse CLI JSON output",
              "line_range": [
                163,
                176
              ],
              "parameters": [
                "self",
                "output"
              ],
              "uid": "api.services.cli_bridge.CLIBridge._parse_cli_output",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridge",
                "api.services.cli_bridge.CLIBridge._parse_cli_output"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Parse CLI JSON output",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.028670",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "processing"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "api.services.cli_bridge.CLIBridge",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge",
            "api.services.cli_bridge.CLIBridge"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Bridge between FastAPI and existing CLI functionality",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:13.436085",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "self._get_python_command",
          "Path.cwd"
        ],
        "_get_python_command": [
          "venv_python.exists",
          "str"
        ],
        "scan_project": [
          "logger.error",
          "options.get",
          "self._parse_cli_output",
          "open",
          "self._run_command",
          "cmd.extend",
          "os.close",
          "os.unlink",
          "cmd.append",
          "json.load",
          "tempfile.mkstemp"
        ],
        "get_context": [
          "self._parse_cli_output",
          "cmd.extend",
          "self._run_command"
        ],
        "get_project_info": [
          "self._parse_cli_output",
          "self._run_command"
        ],
        "validate_json": [
          "self._parse_cli_output",
          "self._run_command"
        ],
        "health_check": [
          "str",
          "self._run_command"
        ],
        "_run_command": [
          "logger.error",
          "asyncio.create_subprocess_exec",
          "CLIBridgeError",
          "process.communicate",
          "logger.info",
          "stdout.decode",
          "asyncio.wait_for",
          "str",
          "stderr.decode"
        ],
        "_parse_cli_output": [
          "output.strip",
          "json.loads"
        ]
      },
      "dependencies": [
        "Any",
        "Dict",
        "List",
        "Optional",
        "Path",
        "asyncio",
        "config",
        "json",
        "logging",
        "os",
        "pathlib",
        "settings",
        "subprocess",
        "tempfile",
        "typing"
      ],
      "hash": null,
      "uid": "api.services.cli_bridge",
      "uid_components": [
        "api",
        "api.services",
        "api.services.cli_bridge"
      ],
      "uid_type": "module",
      "artifact_id": "abfd4670-5ee5-a7b2-a042-ef3e6ae58d8f",
      "smart_summary": {
        "summary": "CLI Bridge Service",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:20:12.153014",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 13,
        "lines_of_code": 90,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 15,
        "test_coverage": 0.0,
        "maintainability_index": 35
      },
      "markdown_anchor": {
        "id": "api-services-cli_bridge",
        "title": "Module: api.services.cli_bridge",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.services.cli_bridge](#api-services-cli_bridge)",
        "html_anchor": "<a id=\"api-services-cli_bridge\"></a>"
      }
    },
    {
      "module_id": "api.services.chat_session",
      "path": "api/services/chat_session.py",
      "category": "core",
      "module_doc": "Chat Session Manager\n\nManages persistent chat sessions and conversation history",
      "functions": [
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            19,
            24
          ],
          "parameters": [
            "self",
            "session_id"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.__init__",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes a new session with the specified session ID\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:14.508593",
              "confidence": 0.7,
              "cache_key": "bc83c6fe"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "add_message",
          "docstring": "Add a message to the session",
          "line_range": [
            26,
            36
          ],
          "parameters": [
            "self",
            "role",
            "content",
            "metadata"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.add_message",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.add_message"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Add a message to the session",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.508632",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_messages",
          "docstring": "Get messages from session, optionally limited",
          "line_range": [
            38,
            42
          ],
          "parameters": [
            "self",
            "limit"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.get_messages",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.get_messages"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get messages from session, optionally limited",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.508649",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_context_string",
          "docstring": "Get recent messages as context string",
          "line_range": [
            44,
            54
          ],
          "parameters": [
            "self",
            "limit"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.get_context_string",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.get_context_string"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get recent messages as context string",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.508663",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "to_dict",
          "docstring": "Convert session to dictionary",
          "line_range": [
            56,
            65
          ],
          "parameters": [
            "self"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.to_dict",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.to_dict"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Convert session to dictionary",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.508676",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            70,
            73
          ],
          "parameters": [
            "self",
            "storage_path"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.__init__",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.__init__"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Initializes object with specified storage path for data manipulation\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:14.994351",
              "confidence": 0.7,
              "cache_key": "ab25779c"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_or_create_session",
          "docstring": "Get existing session or create new one",
          "line_range": [
            75,
            87
          ],
          "parameters": [
            "self",
            "session_id"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.get_or_create_session",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.get_or_create_session"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get existing session or create new one",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.994390",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "generation"
            ]
          }
        },
        {
          "name": "get_session",
          "docstring": "Get session by ID",
          "line_range": [
            89,
            101
          ],
          "parameters": [
            "self",
            "session_id"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.get_session",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.get_session"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Get session by ID",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.994408",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "add_message",
          "docstring": "Add message to session",
          "line_range": [
            103,
            109
          ],
          "parameters": [
            "self",
            "session_id",
            "role",
            "content",
            "metadata"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.add_message",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.add_message"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Add message to session",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.994421",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "list_sessions",
          "docstring": "List all sessions with summary info",
          "line_range": [
            111,
            138
          ],
          "parameters": [
            "self",
            "limit"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.list_sessions",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.list_sessions"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "List all sessions with summary info",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.994433",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "delete_session",
          "docstring": "Delete a session",
          "line_range": [
            140,
            152
          ],
          "parameters": [
            "self",
            "session_id"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.delete_session",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.delete_session"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Delete a session",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.994444",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_load_session",
          "docstring": "Load session from storage",
          "line_range": [
            154,
            167
          ],
          "parameters": [
            "self",
            "session_id"
          ],
          "decorators": [],
          "uid": "api.services.chat_session._load_session",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session._load_session"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Load session from storage",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.994456",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "_save_session",
          "docstring": "Save session to storage",
          "line_range": [
            169,
            178
          ],
          "parameters": [
            "self",
            "session"
          ],
          "decorators": [],
          "uid": "api.services.chat_session._save_session",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session._save_session"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Save session to storage",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.994467",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cleanup_old_sessions",
          "docstring": "Clean up sessions older than specified days",
          "line_range": [
            180,
            183
          ],
          "parameters": [
            "self",
            "days"
          ],
          "decorators": [],
          "uid": "api.services.chat_session.cleanup_old_sessions",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.cleanup_old_sessions"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Clean up sessions older than specified days",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.994484",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [
        {
          "name": "ChatSession",
          "docstring": "Represents a chat session with history",
          "line_range": [
            16,
            65
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                19,
                24
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "uid": "api.services.chat_session.ChatSession.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSession",
                "api.services.chat_session.ChatSession.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes a new session with the specified session ID for further processing\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:15.517420",
                  "confidence": 0.7,
                  "cache_key": "4ad7d206"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "add_message",
              "docstring": "Add a message to the session",
              "line_range": [
                26,
                36
              ],
              "parameters": [
                "self",
                "role",
                "content",
                "metadata"
              ],
              "uid": "api.services.chat_session.ChatSession.add_message",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSession",
                "api.services.chat_session.ChatSession.add_message"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Add a message to the session",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:15.517473",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_messages",
              "docstring": "Get messages from session, optionally limited",
              "line_range": [
                38,
                42
              ],
              "parameters": [
                "self",
                "limit"
              ],
              "uid": "api.services.chat_session.ChatSession.get_messages",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSession",
                "api.services.chat_session.ChatSession.get_messages"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get messages from session, optionally limited",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:15.517499",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_context_string",
              "docstring": "Get recent messages as context string",
              "line_range": [
                44,
                54
              ],
              "parameters": [
                "self",
                "limit"
              ],
              "uid": "api.services.chat_session.ChatSession.get_context_string",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSession",
                "api.services.chat_session.ChatSession.get_context_string"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get recent messages as context string",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:15.517520",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "to_dict",
              "docstring": "Convert session to dictionary",
              "line_range": [
                56,
                65
              ],
              "parameters": [
                "self"
              ],
              "uid": "api.services.chat_session.ChatSession.to_dict",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSession",
                "api.services.chat_session.ChatSession.to_dict"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Convert session to dictionary",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:15.517538",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "api.services.chat_session.ChatSession",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.ChatSession"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Represents a chat session with history",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.994498",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ChatSessionManager",
          "docstring": "Manages multiple chat sessions",
          "line_range": [
            67,
            183
          ],
          "methods": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                70,
                73
              ],
              "parameters": [
                "self",
                "storage_path"
              ],
              "uid": "api.services.chat_session.ChatSessionManager.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSessionManager",
                "api.services.chat_session.ChatSessionManager.__init__"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "\"Initializes a new instance of the class with a specified storage path\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:16.021909",
                  "confidence": 0.7,
                  "cache_key": "bb16dee7"
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "get_or_create_session",
              "docstring": "Get existing session or create new one",
              "line_range": [
                75,
                87
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "uid": "api.services.chat_session.ChatSessionManager.get_or_create_session",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSessionManager",
                "api.services.chat_session.ChatSessionManager.get_or_create_session"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get existing session or create new one",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:16.022049",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method",
                  "generation"
                ]
              }
            },
            {
              "name": "get_session",
              "docstring": "Get session by ID",
              "line_range": [
                89,
                101
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "uid": "api.services.chat_session.ChatSessionManager.get_session",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSessionManager",
                "api.services.chat_session.ChatSessionManager.get_session"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Get session by ID",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:16.022127",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "add_message",
              "docstring": "Add message to session",
              "line_range": [
                103,
                109
              ],
              "parameters": [
                "self",
                "session_id",
                "role",
                "content",
                "metadata"
              ],
              "uid": "api.services.chat_session.ChatSessionManager.add_message",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSessionManager",
                "api.services.chat_session.ChatSessionManager.add_message"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Add message to session",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:16.022187",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "list_sessions",
              "docstring": "List all sessions with summary info",
              "line_range": [
                111,
                138
              ],
              "parameters": [
                "self",
                "limit"
              ],
              "uid": "api.services.chat_session.ChatSessionManager.list_sessions",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSessionManager",
                "api.services.chat_session.ChatSessionManager.list_sessions"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "List all sessions with summary info",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:16.022310",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "delete_session",
              "docstring": "Delete a session",
              "line_range": [
                140,
                152
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "uid": "api.services.chat_session.ChatSessionManager.delete_session",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSessionManager",
                "api.services.chat_session.ChatSessionManager.delete_session"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Delete a session",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:16.022364",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_load_session",
              "docstring": "Load session from storage",
              "line_range": [
                154,
                167
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "uid": "api.services.chat_session.ChatSessionManager._load_session",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSessionManager",
                "api.services.chat_session.ChatSessionManager._load_session"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Load session from storage",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:16.022416",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "_save_session",
              "docstring": "Save session to storage",
              "line_range": [
                169,
                178
              ],
              "parameters": [
                "self",
                "session"
              ],
              "uid": "api.services.chat_session.ChatSessionManager._save_session",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSessionManager",
                "api.services.chat_session.ChatSessionManager._save_session"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Save session to storage",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:16.022463",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            },
            {
              "name": "cleanup_old_sessions",
              "docstring": "Clean up sessions older than specified days",
              "line_range": [
                180,
                183
              ],
              "parameters": [
                "self",
                "days"
              ],
              "uid": "api.services.chat_session.ChatSessionManager.cleanup_old_sessions",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSessionManager",
                "api.services.chat_session.ChatSessionManager.cleanup_old_sessions"
              ],
              "uid_type": "method",
              "smart_summary": {
                "summary": "Clean up sessions older than specified days",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:16.022530",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "method"
                ]
              }
            }
          ],
          "bases": [],
          "uid": "api.services.chat_session.ChatSessionManager",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session",
            "api.services.chat_session.ChatSessionManager"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Manages multiple chat sessions",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:15.517557",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class",
              "management"
            ]
          }
        }
      ],
      "callgraph": {
        "__init__": [
          "Path.cwd"
        ],
        "add_message": [
          "session.add_message",
          "self._save_session",
          "self.get_or_create_session"
        ],
        "get_messages": [],
        "get_context_string": [
          "context_parts.append",
          "self.get_messages"
        ],
        "to_dict": [
          "len"
        ],
        "get_or_create_session": [
          "ChatSession",
          "session_file.exists",
          "self._load_session"
        ],
        "get_session": [
          "session_file.exists",
          "self._load_session"
        ],
        "list_sessions": [
          "logger.error",
          "sessions.sort",
          "len",
          "sessions.append",
          "self._load_session"
        ],
        "delete_session": [
          "session_file.unlink",
          "session_file.exists"
        ],
        "_load_session": [
          "open",
          "json.load",
          "ChatSession",
          "data.get"
        ],
        "_save_session": [
          "logger.error",
          "open",
          "json.dump",
          "session.to_dict"
        ],
        "cleanup_old_sessions": []
      },
      "dependencies": [
        "Any",
        "Dict",
        "List",
        "Optional",
        "Path",
        "asyncio",
        "datetime",
        "json",
        "logging",
        "pathlib",
        "typing"
      ],
      "hash": null,
      "uid": "api.services.chat_session",
      "uid_components": [
        "api",
        "api.services",
        "api.services.chat_session"
      ],
      "uid_type": "module",
      "artifact_id": "3c529125-d303-1ce9-d43e-d75e68b73f1b",
      "smart_summary": {
        "summary": "Chat Session Manager",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:20:14.028685",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module",
          "management"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 18,
        "lines_of_code": 140,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 11,
        "test_coverage": 0.0,
        "maintainability_index": 10
      },
      "markdown_anchor": {
        "id": "api-services-chat_session",
        "title": "Module: api.services.chat_session",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.services.chat_session](#api-services-chat_session)",
        "html_anchor": "<a id=\"api-services-chat_session\"></a>"
      }
    },
    {
      "module_id": "api.models.requests",
      "path": "api/models/requests.py",
      "category": "core",
      "module_doc": "Request models for LLMStruct FastAPI",
      "functions": [],
      "classes": [
        {
          "name": "ContextMode",
          "docstring": "",
          "line_range": [
            10,
            14
          ],
          "methods": [],
          "bases": [
            "str",
            "Enum"
          ],
          "uid": "api.models.requests.ContextMode",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.ContextMode"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Analyzes contextual information to determine appropriate mode of operation.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:16.661843",
              "confidence": 0.7,
              "cache_key": "58a49a73"
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "Priority",
          "docstring": "",
          "line_range": [
            17,
            21
          ],
          "methods": [],
          "bases": [
            "str",
            "Enum"
          ],
          "uid": "api.models.requests.Priority",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.Priority"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Organizes tasks based on urgency and importance, optimizing workflow efficiency.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:17.407694",
              "confidence": 0.7,
              "cache_key": "875e89ab"
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ScanRequest",
          "docstring": "Request model for project scanning",
          "line_range": [
            24,
            38
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.requests.ScanRequest",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.ScanRequest"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Request model for project scanning",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:17.407765",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ContextRequest",
          "docstring": "Request model for context generation",
          "line_range": [
            41,
            54
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.requests.ContextRequest",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.ContextRequest"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Request model for context generation",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:17.407796",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "TaskCreateRequest",
          "docstring": "Request model for creating tasks",
          "line_range": [
            57,
            74
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.requests.TaskCreateRequest",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.TaskCreateRequest"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Request model for creating tasks",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:17.407817",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class",
              "generation"
            ]
          }
        },
        {
          "name": "TaskUpdateRequest",
          "docstring": "Request model for updating tasks",
          "line_range": [
            77,
            92
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.requests.TaskUpdateRequest",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.TaskUpdateRequest"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Request model for updating tasks",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:17.407837",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "QueryRequest",
          "docstring": "Request model for LLM queries",
          "line_range": [
            95,
            110
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.requests.QueryRequest",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.QueryRequest"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Request model for LLM queries",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:17.407853",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ValidationRequest",
          "docstring": "Request model for JSON validation",
          "line_range": [
            113,
            124
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.requests.ValidationRequest",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.ValidationRequest"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Request model for JSON validation",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:17.407870",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ChatMessage",
          "docstring": "Chat message request",
          "line_range": [
            127,
            132
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.requests.ChatMessage",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.ChatMessage"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Chat message request",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:17.407886",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            31,
            38
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.requests.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages configuration settings for the application.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:18.026808",
              "confidence": 0.7,
              "cache_key": "bbb40665"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            47,
            54
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.requests.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages configuration settings for application components.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:18.498665",
              "confidence": 0.7,
              "cache_key": "b82f3643"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            65,
            74
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.requests.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages configuration settings for application runtime.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:19.141374",
              "confidence": 0.7,
              "cache_key": "30f3feeb"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            86,
            92
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.requests.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages application configuration settings efficiently.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:20.070607",
              "confidence": 0.7,
              "cache_key": "5cbc8ef8"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            102,
            110
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.requests.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages application configuration settings efficiently.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:20.624502",
              "confidence": 0.7,
              "cache_key": "266c815b"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            118,
            124
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.requests.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests",
            "api.models.requests.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages configuration settings for application runtime.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:21.071559",
              "confidence": 0.7,
              "cache_key": "f4bb3b40"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        }
      ],
      "callgraph": {},
      "dependencies": [
        "Any",
        "BaseModel",
        "Dict",
        "Enum",
        "Field",
        "List",
        "Optional",
        "enum",
        "pydantic",
        "typing"
      ],
      "hash": null,
      "uid": "api.models.requests",
      "uid_components": [
        "api",
        "api.models",
        "api.models.requests"
      ],
      "uid_type": "module",
      "artifact_id": "48dd6594-c1e9-e156-5951-65bfb98ae87a",
      "smart_summary": {
        "summary": "Request models for LLMStruct FastAPI",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:20:16.022591",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 30,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 10,
        "test_coverage": 0.0,
        "maintainability_index": 0
      },
      "markdown_anchor": {
        "id": "api-models-requests",
        "title": "Module: api.models.requests",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.models.requests](#api-models-requests)",
        "html_anchor": "<a id=\"api-models-requests\"></a>"
      }
    },
    {
      "module_id": "api.models.responses",
      "path": "api/models/responses.py",
      "category": "core",
      "module_doc": "Response models for LLMStruct FastAPI",
      "functions": [],
      "classes": [
        {
          "name": "TaskStatus",
          "docstring": "",
          "line_range": [
            11,
            15
          ],
          "methods": [],
          "bases": [
            "str",
            "Enum"
          ],
          "uid": "api.models.responses.TaskStatus",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.TaskStatus"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Tracks and updates the status of tasks within a system\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:21.523497",
              "confidence": 0.7,
              "cache_key": "b4a6c366"
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "HealthStatus",
          "docstring": "",
          "line_range": [
            18,
            21
          ],
          "methods": [],
          "bases": [
            "str",
            "Enum"
          ],
          "uid": "api.models.responses.HealthStatus",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.HealthStatus"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"HealthStatus class retrieves and analyzes real-time health data for accurate monitoring and assessment.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:22.184698",
              "confidence": 0.7,
              "cache_key": "c373693f"
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ProjectInfo",
          "docstring": "Response model for project information",
          "line_range": [
            24,
            49
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.responses.ProjectInfo",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.ProjectInfo"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Response model for project information",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:22.184749",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ScanResponse",
          "docstring": "Response model for project scan results",
          "line_range": [
            52,
            77
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.responses.ScanResponse",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.ScanResponse"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Response model for project scan results",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:22.184774",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ContextResponse",
          "docstring": "Response model for context generation",
          "line_range": [
            80,
            100
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.responses.ContextResponse",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.ContextResponse"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Response model for context generation",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:22.184792",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "TaskResponse",
          "docstring": "Response model for task operations",
          "line_range": [
            103,
            128
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.responses.TaskResponse",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.TaskResponse"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Response model for task operations",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:22.184809",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "QueryResponse",
          "docstring": "Response model for LLM queries",
          "line_range": [
            131,
            155
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.responses.QueryResponse",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.QueryResponse"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Response model for LLM queries",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:22.184825",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ValidationResponse",
          "docstring": "Response model for JSON validation",
          "line_range": [
            158,
            175
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.responses.ValidationResponse",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.ValidationResponse"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Response model for JSON validation",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:22.184841",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "HealthResponse",
          "docstring": "Response model for health checks",
          "line_range": [
            178,
            199
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.responses.HealthResponse",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.HealthResponse"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Response model for health checks",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:22.184856",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class",
              "validation"
            ]
          }
        },
        {
          "name": "ErrorResponse",
          "docstring": "Response model for API errors",
          "line_range": [
            202,
            217
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.responses.ErrorResponse",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.ErrorResponse"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Response model for API errors",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:22.184874",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "ChatResponse",
          "docstring": "Chat response",
          "line_range": [
            220,
            226
          ],
          "methods": [],
          "bases": [
            "BaseModel"
          ],
          "uid": "api.models.responses.ChatResponse",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.ChatResponse"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "Chat response",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:22.184889",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "class"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            36,
            49
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.responses.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages application configuration settings efficiently.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:22.697543",
              "confidence": 0.7,
              "cache_key": "38437003"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            62,
            77
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.responses.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages application configuration settings.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:23.241000",
              "confidence": 0.7,
              "cache_key": "4b98cf94"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            88,
            100
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.responses.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages application configuration settings efficiently.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:23.695087",
              "confidence": 0.7,
              "cache_key": "f7460d50"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            115,
            128
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.responses.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages configuration settings for application runtime.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:24.724795",
              "confidence": 0.7,
              "cache_key": "7a2f2706"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            139,
            155
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.responses.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and retrieves configuration settings for application runtime.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:25.478093",
              "confidence": 0.7,
              "cache_key": "8c068d55"
            },
            "tags": [
              "class",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            166,
            175
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.responses.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages application configuration settings efficiently.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:26.014705",
              "confidence": 0.7,
              "cache_key": "425a95fa"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            186,
            199
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.responses.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages application configuration settings.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:26.442554",
              "confidence": 0.7,
              "cache_key": "dffd0d86"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        },
        {
          "name": "Config",
          "docstring": "",
          "line_range": [
            209,
            217
          ],
          "methods": [],
          "bases": [],
          "uid": "api.models.responses.Config",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses",
            "api.models.responses.Config"
          ],
          "uid_type": "class",
          "smart_summary": {
            "summary": "\"Config class stores and manages configuration settings for the application.\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:27.131977",
              "confidence": 0.7,
              "cache_key": "c49f5328"
            },
            "tags": [
              "class",
              "management",
              "configuration"
            ]
          }
        }
      ],
      "callgraph": {},
      "dependencies": [
        "Any",
        "BaseModel",
        "Dict",
        "Enum",
        "Field",
        "List",
        "Optional",
        "datetime",
        "enum",
        "pydantic",
        "typing"
      ],
      "hash": null,
      "uid": "api.models.responses",
      "uid_components": [
        "api",
        "api.models",
        "api.models.responses"
      ],
      "uid_type": "module",
      "artifact_id": "1b8a21c4-14c8-0dfb-eeef-b95011f7f031",
      "smart_summary": {
        "summary": "Response models for LLMStruct FastAPI",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:20:21.071600",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 38,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 11,
        "test_coverage": 0.0,
        "maintainability_index": 0
      },
      "markdown_anchor": {
        "id": "api-models-responses",
        "title": "Module: api.models.responses",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.models.responses](#api-models-responses)",
        "html_anchor": "<a id=\"api-models-responses\"></a>"
      }
    },
    {
      "module_id": "api.models.__init__",
      "path": "api/models/__init__.py",
      "category": "cli",
      "module_doc": "Pydantic models for LLMStruct FastAPI\n\nDefines request and response models for API endpoints.",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [],
      "hash": null,
      "uid": "api.models.__init__",
      "uid_components": [
        "api",
        "api.models",
        "api.models.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "8e61fcfd-4302-dc53-b6c7-45376a339466",
      "smart_summary": {
        "summary": "Pydantic models for LLMStruct FastAPI",
        "summary_generated": false,
        "source": {
          "source_type": "docstring",
          "generated_at": "2025-06-25T19:20:27.132172",
          "confidence": 0.9,
          "cache_key": null
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 0,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "api-models-__init__",
        "title": "Module: api.models.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: api.models.__init__](#api-models-__init__)",
        "html_anchor": "<a id=\"api-models-__init__\"></a>"
      }
    },
    {
      "module_id": "modules.commands.metrics",
      "path": "modules/commands/metrics.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "metrics_status",
          "docstring": "Показать текущий статус метрик",
          "line_range": [
            1,
            20
          ],
          "parameters": [],
          "decorators": [],
          "uid": "modules.commands.metrics.metrics_status",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.metrics",
            "modules.commands.metrics.metrics_status"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Показать текущий статус метрик",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.133754",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "metrics_summary",
          "docstring": "Показать детальную сводку метрик",
          "line_range": [
            22,
            66
          ],
          "parameters": [],
          "decorators": [],
          "uid": "modules.commands.metrics.metrics_summary",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.metrics",
            "modules.commands.metrics.metrics_summary"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Показать детальную сводку метрик",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.133900",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "metrics_analytics",
          "docstring": "Сгенерировать аналитические данные",
          "line_range": [
            68,
            104
          ],
          "parameters": [
            "output_file",
            "format"
          ],
          "decorators": [],
          "uid": "modules.commands.metrics.metrics_analytics",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.metrics",
            "modules.commands.metrics.metrics_analytics"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Сгенерировать аналитические данные",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.133972",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "metrics_report",
          "docstring": "Создать всесторонний отчет",
          "line_range": [
            106,
            134
          ],
          "parameters": [
            "sessions",
            "output_file"
          ],
          "decorators": [],
          "uid": "modules.commands.metrics.metrics_report",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.metrics",
            "modules.commands.metrics.metrics_report"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Создать всесторонний отчет",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.134033",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "metrics_track",
          "docstring": "Ручное отслеживание событий",
          "line_range": [
            136,
            145
          ],
          "parameters": [
            "event_type",
            "details"
          ],
          "decorators": [],
          "uid": "modules.commands.metrics.metrics_track",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.metrics",
            "modules.commands.metrics.metrics_track"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Ручное отслеживание событий",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.134089",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "metrics_tokens",
          "docstring": "Показать детальную статистику токенов",
          "line_range": [
            147,
            185
          ],
          "parameters": [],
          "decorators": [],
          "uid": "modules.commands.metrics.metrics_tokens",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.metrics",
            "modules.commands.metrics.metrics_tokens"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Показать детальную статистику токенов",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.134143",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cmd_metrics",
          "docstring": "Управление метриками проекта",
          "line_range": [
            187,
            205
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.commands.metrics.cmd_metrics",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.metrics",
            "modules.commands.metrics.cmd_metrics"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Управление метриками проекта",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.134224",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "metrics_status": [
          "print",
          "get_metrics_tracker",
          "tracker.get_session_summary"
        ],
        "metrics_summary": [
          "print",
          "max",
          "get_metrics_tracker",
          "tracker.get_session_summary"
        ],
        "metrics_analytics": [
          "json.dump",
          "writer.writerow",
          "get_metrics_tracker",
          "tracker.get_session_summary",
          "json.dumps",
          "csv.writer",
          "tracker.get_analytics_data",
          "print",
          "open",
          "time.strftime",
          "enumerate"
        ],
        "metrics_report": [
          "len",
          "min",
          "get_metrics_tracker",
          "sum",
          "tracker.get_analytics_data",
          "print",
          "open",
          "time.strftime",
          "analytics.get",
          "f.write"
        ],
        "metrics_track": [
          "print",
          "track_workflow_event"
        ],
        "metrics_tokens": [
          "get_metrics_tracker",
          "summary.get",
          "interaction.get",
          "get_token_summary",
          "print",
          "enumerate"
        ],
        "cmd_metrics": [
          "metrics_analytics",
          "metrics_summary",
          "metrics_tokens",
          "metrics_status",
          "metrics_track",
          "print",
          "metrics_report"
        ]
      },
      "dependencies": [
        "csv",
        "get_metrics_tracker",
        "get_token_summary",
        "json",
        "llmstruct.metrics_tracker",
        "time",
        "track_workflow_event"
      ],
      "hash": null,
      "uid": "modules.commands.metrics",
      "uid_components": [
        "modules",
        "modules.commands",
        "modules.commands.metrics"
      ],
      "uid_type": "module",
      "artifact_id": "6b8e1c22-d3a4-aa67-1d7b-75053bf77ab8",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:27.133632",
          "confidence": 0.7,
          "cache_key": "afc6c771"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 7,
        "lines_of_code": 70,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 7,
        "test_coverage": 0.0,
        "maintainability_index": 65
      },
      "markdown_anchor": {
        "id": "modules-commands-metrics",
        "title": "Module: modules.commands.metrics",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.commands.metrics](#modules-commands-metrics)",
        "html_anchor": "<a id=\"modules-commands-metrics\"></a>"
      }
    },
    {
      "module_id": "modules.commands.services",
      "path": "modules/commands/services.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "add_api_bot_commands",
          "docstring": "Добавить команды для управления API и Bot сервисами",
          "line_range": [
            10,
            47
          ],
          "parameters": [
            "subparsers"
          ],
          "decorators": [],
          "uid": "modules.commands.services.add_api_bot_commands",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.services",
            "modules.commands.services.add_api_bot_commands"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Добавить команды для управления API и Bot сервисами",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.135798",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cmd_api_management",
          "docstring": "Управление API сервером",
          "line_range": [
            49,
            111
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.commands.services.cmd_api_management",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.services",
            "modules.commands.services.cmd_api_management"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Управление API сервером",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.135949",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cmd_bot_management",
          "docstring": "Управление Telegram ботами",
          "line_range": [
            113,
            190
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.commands.services.cmd_bot_management",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.services",
            "modules.commands.services.cmd_bot_management"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Управление Telegram ботами",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.136095",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "cmd_services",
          "docstring": "Управление всеми сервисами (API + Bots)",
          "line_range": [
            192,
            233
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.commands.services.cmd_services",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.services",
            "modules.commands.services.cmd_services"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Управление всеми сервисами (API + Bots)",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.136264",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "add_api_bot_commands": [
          "metrics_parser.add_subparsers",
          "api_subparsers.add_parser",
          "metrics_track.add_argument",
          "bot_subparsers.add_parser",
          "services_subparsers.add_parser",
          "metrics_report.add_argument",
          "api_parser.add_subparsers",
          "metrics_analytics.add_argument",
          "api_start.add_argument",
          "subparsers.add_parser",
          "services_parser.add_subparsers",
          "metrics_subparsers.add_parser",
          "bot_parser.add_subparsers",
          "bot_start.add_argument"
        ],
        "cmd_api_management": [
          "pid_file.exists",
          "process.terminate",
          "response.json",
          "data.get",
          "requests.get",
          "process.wait",
          "pid_file.unlink",
          "requests.post",
          "psutil.Process",
          "f.write",
          "venv_path.exists",
          "f.read",
          "print",
          "open",
          "int",
          "Path",
          "str",
          "subprocess.Popen"
        ],
        "cmd_bot_management": [
          "pid_file.exists",
          "process.terminate",
          "process.is_running",
          "process.wait",
          "active_bots.append",
          "pid_file.unlink",
          "psutil.Process",
          "os.getenv",
          "bot_scripts.get",
          "f.write",
          "f.read",
          "print",
          "open",
          "int",
          "Path",
          "str",
          "subprocess.Popen"
        ],
        "cmd_services": [
          "cmd_api_management",
          "cmd_bot_management",
          "time.sleep",
          "print",
          "type"
        ]
      },
      "dependencies": [
        "Path",
        "os",
        "pathlib",
        "psutil",
        "requests",
        "signal",
        "subprocess",
        "time"
      ],
      "hash": null,
      "uid": "modules.commands.services",
      "uid_components": [
        "modules",
        "modules.commands",
        "modules.commands.services"
      ],
      "uid_type": "module",
      "artifact_id": "21aaf1a3-6542-925a-77e2-7dde980c16e3",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:27.135612",
          "confidence": 0.7,
          "cache_key": "2bfeb13d"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 4,
        "lines_of_code": 40,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 8,
        "test_coverage": 0.0,
        "maintainability_index": 80
      },
      "markdown_anchor": {
        "id": "modules-commands-services",
        "title": "Module: modules.commands.services",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.commands.services](#modules-commands-services)",
        "html_anchor": "<a id=\"modules-commands-services\"></a>"
      }
    },
    {
      "module_id": "modules.commands.__init__",
      "path": "modules/commands/__init__.py",
      "category": "cli",
      "module_doc": "",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [],
      "hash": null,
      "uid": "modules.commands.__init__",
      "uid_components": [
        "modules",
        "modules.commands",
        "modules.commands.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "0dec485c-915d-a18f-e713-3bd6f3de8adc",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:27.137672",
          "confidence": 0.7,
          "cache_key": "7b2a2684"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 0,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "modules-commands-__init__",
        "title": "Module: modules.commands.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.commands.__init__](#modules-commands-__init__)",
        "html_anchor": "<a id=\"modules-commands-__init__\"></a>"
      }
    },
    {
      "module_id": "modules.commands.queue",
      "path": "modules/commands/queue.py",
      "category": "core",
      "module_doc": "",
      "functions": [
        {
          "name": "process_cli_queue_enhanced",
          "docstring": "Enhanced queue processing with workflow support, performance tracking, and safety validation.",
          "line_range": [
            9,
            208
          ],
          "parameters": [
            "root_dir",
            "context_path",
            "args",
            "cache",
            "client"
          ],
          "decorators": [],
          "uid": "modules.commands.queue.process_cli_queue_enhanced",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.queue",
            "modules.commands.queue.process_cli_queue_enhanced"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Enhanced queue processing with workflow support, performance tracking, and safety validation.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.138907",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "process_cli_queue_enhanced": [
          "write_to_file",
          "options.get",
          "workflow.get",
          "len",
          "isinstance",
          "get_folder_structure",
          "attach_to_llm_request",
          "time.time",
          "logging.error",
          "load_gitignore",
          "item.get",
          "logging.info",
          "read_file_content",
          "print",
          "open",
          "json.load",
          "enumerate",
          "client.query"
        ]
      },
      "dependencies": [
        "attach_to_llm_request",
        "get_folder_structure",
        "json",
        "llmstruct.generators.json_generator",
        "llmstruct.modules.cli.utils",
        "llmstruct.self_run",
        "load_gitignore",
        "logging",
        "os",
        "read_file_content",
        "time",
        "write_to_file"
      ],
      "hash": null,
      "uid": "modules.commands.queue",
      "uid_components": [
        "modules",
        "modules.commands",
        "modules.commands.queue"
      ],
      "uid_type": "module",
      "artifact_id": "bb4ee01f-b499-bb4f-b901-96cdaddce8c2",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:27.138790",
          "confidence": 0.7,
          "cache_key": "e99e7a05"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 12,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "modules-commands-queue",
        "title": "Module: modules.commands.queue",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.commands.queue](#modules-commands-queue)",
        "html_anchor": "<a id=\"modules-commands-queue\"></a>"
      }
    },
    {
      "module_id": "modules.cli.audit",
      "path": "modules/cli/audit.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "audit",
          "docstring": "Audit project structure and generate reports.",
          "line_range": [
            4,
            17
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.audit.audit",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.audit",
            "modules.cli.audit.audit"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Audit project structure and generate reports.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.140019",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "audit": [
          "analyze_duplicates",
          "hasattr",
          "file_path.exists",
          "print",
          "Path"
        ]
      },
      "dependencies": [
        "Path",
        "analyze_duplicates",
        "llmstruct.cli",
        "os",
        "pathlib"
      ],
      "hash": null,
      "uid": "modules.cli.audit",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.audit"
      ],
      "uid_type": "module",
      "artifact_id": "78193442-798c-3039-8969-26103184cdb1",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:27.139883",
          "confidence": 0.7,
          "cache_key": "36752e22"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 5,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "modules-cli-audit",
        "title": "Module: modules.cli.audit",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.audit](#modules-cli-audit)",
        "html_anchor": "<a id=\"modules-cli-audit\"></a>"
      }
    },
    {
      "module_id": "modules.cli.utils",
      "path": "modules/cli/utils.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "load_gitignore",
          "docstring": "Load and normalize patterns from .gitignore.",
          "line_range": [
            6,
            20
          ],
          "parameters": [
            "root_dir"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.load_gitignore",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.load_gitignore"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Load and normalize patterns from .gitignore.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.141531",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "load_config",
          "docstring": "Load settings from llmstruct.toml or return empty dict.",
          "line_range": [
            22,
            32
          ],
          "parameters": [
            "root_dir"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.load_config",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.load_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Load settings from llmstruct.toml or return empty dict.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.141603",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "read_file_content",
          "docstring": "Read content of a file if it exists and is a text file.",
          "line_range": [
            34,
            43
          ],
          "parameters": [
            "file_path"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.read_file_content",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.read_file_content"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Read content of a file if it exists and is a text file.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.141665",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "write_to_file",
          "docstring": "Write content to a file in base_dir (default ./tmp) and return the path.",
          "line_range": [
            45,
            63
          ],
          "parameters": [
            "content",
            "filename",
            "base_dir"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.write_to_file",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.write_to_file"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Write content to a file in base_dir (default ./tmp) and return the path.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.141721",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "parse_files_from_response",
          "docstring": "Extract filenames and content from LLM response (e.g., ```filename\ncontent```).",
          "line_range": [
            65,
            72
          ],
          "parameters": [
            "response"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.parse_files_from_response",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.parse_files_from_response"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Extract filenames and content from LLM response (e.g., ```filename",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.141774",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        },
        {
          "name": "get_cache_config",
          "docstring": "",
          "line_range": [
            74,
            75
          ],
          "parameters": [
            "config"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.get_cache_config",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.get_cache_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Retrieves and returns cache configuration settings based on input parameters.",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:27.616568",
              "confidence": 0.7,
              "cache_key": "4d33ef71"
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "get_copilot_config",
          "docstring": "",
          "line_range": [
            77,
            78
          ],
          "parameters": [
            "config"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.get_copilot_config",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.get_copilot_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Retrieves and returns copilot configuration settings from specified input\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:28.683854",
              "confidence": 0.7,
              "cache_key": "25fafeef"
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "get_queue_config",
          "docstring": "",
          "line_range": [
            80,
            81
          ],
          "parameters": [
            "config"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.get_queue_config",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.get_queue_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Retrieves and returns configuration settings for a specified queue\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:30.988571",
              "confidence": 0.7,
              "cache_key": "33f93efe"
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "get_context_config",
          "docstring": "",
          "line_range": [
            83,
            84
          ],
          "parameters": [
            "config"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.get_context_config",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.get_context_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Retrieves and returns context configuration settings for specified parameters\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:31.686780",
              "confidence": 0.7,
              "cache_key": "882cbae0"
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        },
        {
          "name": "get_exclude_dirs",
          "docstring": "",
          "line_range": [
            86,
            93
          ],
          "parameters": [
            "config"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.get_exclude_dirs",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.get_exclude_dirs"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Retrieves directories to exclude from processing based on configuration settings\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:32.274533",
              "confidence": 0.7,
              "cache_key": "3d4b5e46"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_include_patterns",
          "docstring": "",
          "line_range": [
            95,
            98
          ],
          "parameters": [
            "config"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.get_include_patterns",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.get_include_patterns"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Retrieves include patterns from configuration settings\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:32.845613",
              "confidence": 0.7,
              "cache_key": "30f632f6"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_exclude_patterns",
          "docstring": "",
          "line_range": [
            100,
            103
          ],
          "parameters": [
            "config"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.get_exclude_patterns",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.get_exclude_patterns"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Retrieves and processes exclusion patterns from configuration settings\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:33.451791",
              "confidence": 0.7,
              "cache_key": "2e8f5f3f"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_max_file_size",
          "docstring": "",
          "line_range": [
            105,
            106
          ],
          "parameters": [
            "config"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.get_max_file_size",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.get_max_file_size"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Determines and returns the maximum file size based on the provided configuration.",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:33.999580",
              "confidence": 0.7,
              "cache_key": "f7e8a106"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_struct_file_path",
          "docstring": "",
          "line_range": [
            108,
            109
          ],
          "parameters": [
            "config"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.get_struct_file_path",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.get_struct_file_path"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Retrieves the file path for a specified struct from the configuration data\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:34.666815",
              "confidence": 0.7,
              "cache_key": "033f8569"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "get_context_file_path",
          "docstring": "",
          "line_range": [
            111,
            112
          ],
          "parameters": [
            "config"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.get_context_file_path",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.get_context_file_path"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Returns the file path for a specified context configuration\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.269400",
              "confidence": 0.7,
              "cache_key": "e998b257"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "save_config",
          "docstring": "",
          "line_range": [
            114,
            121
          ],
          "parameters": [
            "config",
            "root_dir"
          ],
          "decorators": [],
          "uid": "modules.cli.utils.save_config",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils",
            "modules.cli.utils.save_config"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Saves configuration data to specified root directory\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.893108",
              "confidence": 0.7,
              "cache_key": "9248d387"
            },
            "tags": [
              "function",
              "configuration"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "load_gitignore": [
          "gitignore_path.exists",
          "line.strip",
          "logging.error",
          "gitignore_path.open",
          "Path",
          "line.startswith"
        ],
        "load_config": [
          "toml.load",
          "config_path.exists",
          "logging.error",
          "config_path.open",
          "Path"
        ],
        "read_file_content": [
          "path.is_file",
          "path.open",
          "logging.error",
          "f.read",
          "Path"
        ],
        "write_to_file": [
          "re.sub",
          "logging.warning",
          "logging.error",
          "file_path.exists",
          "logging.info",
          "file_path.open",
          "base_path.mkdir",
          "Path",
          "str",
          "f.write"
        ],
        "parse_files_from_response": [
          "content.strip",
          "re.findall",
          "files.append",
          "filename.strip"
        ],
        "get_cache_config": [
          "config.get"
        ],
        "get_copilot_config": [
          "config.get"
        ],
        "get_queue_config": [
          "config.get"
        ],
        "get_context_config": [
          "config.get"
        ],
        "get_exclude_dirs": [
          "list",
          "parsing_config.get",
          "set",
          "config.get",
          "cli_config.get"
        ],
        "get_include_patterns": [
          "cli_config.get",
          "parsing_config.get",
          "config.get"
        ],
        "get_exclude_patterns": [
          "cli_config.get",
          "parsing_config.get",
          "config.get"
        ],
        "get_max_file_size": [
          "config.get"
        ],
        "get_struct_file_path": [
          "config.get"
        ],
        "get_context_file_path": [
          "config.get"
        ],
        "save_config": [
          "toml.dump",
          "Path",
          "logging.error",
          "config_path.open"
        ]
      },
      "dependencies": [
        "List",
        "Optional",
        "Path",
        "logging",
        "pathlib",
        "re",
        "toml",
        "typing"
      ],
      "hash": null,
      "uid": "modules.cli.utils",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.utils"
      ],
      "uid_type": "module",
      "artifact_id": "0add91a5-3f17-0551-ef15-50666dc87f59",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:27.141418",
          "confidence": 0.7,
          "cache_key": "dab7f057"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 16,
        "lines_of_code": 160,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 8,
        "test_coverage": 0.0,
        "maintainability_index": 20
      },
      "markdown_anchor": {
        "id": "modules-cli-utils",
        "title": "Module: modules.cli.utils",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.utils](#modules-cli-utils)",
        "html_anchor": "<a id=\"modules-cli-utils\"></a>"
      }
    },
    {
      "module_id": "modules.cli.dogfood",
      "path": "modules/cli/dogfood.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "dogfood",
          "docstring": "Run dogfooding analysis.",
          "line_range": [
            3,
            5
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.dogfood.dogfood",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.dogfood",
            "modules.cli.dogfood.dogfood"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Run dogfooding analysis.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:35.893436",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "dogfood": [
          "logging.warning"
        ]
      },
      "dependencies": [
        "logging"
      ],
      "hash": null,
      "uid": "modules.cli.dogfood",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.dogfood"
      ],
      "uid_type": "module",
      "artifact_id": "ea6b87d7-40b8-682f-a9fe-f7a898588176",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:35.893409",
          "confidence": 0.7,
          "cache_key": "b6e8f24d"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 1,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "modules-cli-dogfood",
        "title": "Module: modules.cli.dogfood",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.dogfood](#modules-cli-dogfood)",
        "html_anchor": "<a id=\"modules-cli-dogfood\"></a>"
      }
    },
    {
      "module_id": "modules.cli.handlers_legacy",
      "path": "modules/cli/handlers_legacy.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "interactive_legacy",
          "docstring": "Run interactive CLI with LLM, supporting file/folder viewing and writing.",
          "line_range": [
            14,
            149
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.handlers_legacy.interactive_legacy",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.handlers_legacy",
            "modules.cli.handlers_legacy.interactive_legacy"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Run interactive CLI with LLM, supporting file/folder viewing and writing.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:35.893681",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "interactive_legacy": [
          "input",
          "user_input.lower",
          "cache.close",
          "logging.error",
          "parse",
          "write_to_file",
          "user_input.startswith",
          "attach_to_llm_request",
          "Path",
          "os.listdir",
          "m.group",
          "get_folder_structure",
          "load_gitignore",
          "print",
          "JSONCache",
          "client.query",
          "re.match",
          "LLMClient",
          "sorted",
          "logging.warning",
          "args_str.strip",
          "json.dumps",
          "read_file_content"
        ]
      },
      "dependencies": [
        "JSONCache",
        "LLMClient",
        "Path",
        "attach_to_llm_request",
        "get_folder_structure",
        "json",
        "llmstruct",
        "llmstruct.cache",
        "llmstruct.cli",
        "llmstruct.generators.json_generator",
        "llmstruct.modules.cli.utils",
        "llmstruct.self_run",
        "load_gitignore",
        "logging",
        "os",
        "parse",
        "pathlib",
        "re",
        "read_file_content",
        "time",
        "write_to_file"
      ],
      "hash": null,
      "uid": "modules.cli.handlers_legacy",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.handlers_legacy"
      ],
      "uid_type": "module",
      "artifact_id": "395fdffd-9068-de81-e7af-d65d143c375e",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:35.893656",
          "confidence": 0.7,
          "cache_key": "9ee2fd32"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 21,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "modules-cli-handlers_legacy",
        "title": "Module: modules.cli.handlers_legacy",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.handlers_legacy](#modules-cli-handlers_legacy)",
        "html_anchor": "<a id=\"modules-cli-handlers_legacy\"></a>"
      }
    },
    {
      "module_id": "modules.cli.analyze_duplicates",
      "path": "modules/cli/analyze_duplicates.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "analyze_duplicates",
          "docstring": "Analyze function duplication using struct.json deep analysis.",
          "line_range": [
            1,
            81
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.analyze_duplicates.analyze_duplicates",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.analyze_duplicates",
            "modules.cli.analyze_duplicates.analyze_duplicates"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Analyze function duplication using struct.json deep analysis.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:35.893920",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "analyze_duplicates": [
          "sorted",
          "r.get",
          "json.dump",
          "len",
          "getattr",
          "hasattr",
          "analysis.get",
          "json.dumps",
          "duplicates.items",
          "traceback.print_exc",
          "rec.get",
          "print",
          "open",
          "enumerate",
          "WorkflowOrchestrator",
          "orchestrator.analyze_codebase_for_duplicates",
          "filtered_duplicates.items",
          "duplication_data.get"
        ]
      },
      "dependencies": [
        "WorkflowOrchestrator",
        "json",
        "llmstruct.workflow_orchestrator",
        "traceback"
      ],
      "hash": null,
      "uid": "modules.cli.analyze_duplicates",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.analyze_duplicates"
      ],
      "uid_type": "module",
      "artifact_id": "d296e3f0-725f-1b1b-422c-786ce50e9d1f",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:35.893896",
          "confidence": 0.7,
          "cache_key": "f06af08f"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 4,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "modules-cli-analyze_duplicates",
        "title": "Module: modules.cli.analyze_duplicates",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.analyze_duplicates](#modules-cli-analyze_duplicates)",
        "html_anchor": "<a id=\"modules-cli-analyze_duplicates\"></a>"
      }
    },
    {
      "module_id": "modules.cli.__init__",
      "path": "modules/cli/__init__.py",
      "category": "cli",
      "module_doc": "",
      "functions": [],
      "classes": [],
      "callgraph": {},
      "dependencies": [],
      "hash": null,
      "uid": "modules.cli.__init__",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.__init__"
      ],
      "uid_type": "module",
      "artifact_id": "f8a2ed32-3d3e-d70c-bbc5-c7001837823d",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:35.894228",
          "confidence": 0.7,
          "cache_key": "34dd4642"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 0,
        "lines_of_code": 0,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 0,
        "test_coverage": 0.0,
        "maintainability_index": 100
      },
      "markdown_anchor": {
        "id": "modules-cli-__init__",
        "title": "Module: modules.cli.__init__",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.__init__](#modules-cli-__init__)",
        "html_anchor": "<a id=\"modules-cli-__init__\"></a>"
      }
    },
    {
      "module_id": "modules.cli.review",
      "path": "modules/cli/review.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "review",
          "docstring": "Review codebase with LLM.",
          "line_range": [
            3,
            5
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.review.review",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.review",
            "modules.cli.review.review"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Review codebase with LLM.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:35.894517",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "review": [
          "logging.warning"
        ]
      },
      "dependencies": [
        "logging"
      ],
      "hash": null,
      "uid": "modules.cli.review",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.review"
      ],
      "uid_type": "module",
      "artifact_id": "b592191d-da7a-55d2-3cd8-9ea2d38dbda6",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:35.894492",
          "confidence": 0.7,
          "cache_key": "01ebe2d8"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 1,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "modules-cli-review",
        "title": "Module: modules.cli.review",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.review](#modules-cli-review)",
        "html_anchor": "<a id=\"modules-cli-review\"></a>"
      }
    },
    {
      "module_id": "modules.cli.context",
      "path": "modules/cli/context.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "context",
          "docstring": "Generate context.json from input JSON.",
          "line_range": [
            3,
            5
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.context.context",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.context",
            "modules.cli.context.context"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Generate context.json from input JSON.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:35.894751",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "context": [
          "logging.warning"
        ]
      },
      "dependencies": [
        "logging"
      ],
      "hash": null,
      "uid": "modules.cli.context",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.context"
      ],
      "uid_type": "module",
      "artifact_id": "5a425ae8-9fdf-55cd-f092-f60f4c9fc31d",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:35.894727",
          "confidence": 0.7,
          "cache_key": "2ed958ea"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 1,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "modules-cli-context",
        "title": "Module: modules.cli.context",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.context](#modules-cli-context)",
        "html_anchor": "<a id=\"modules-cli-context\"></a>"
      }
    },
    {
      "module_id": "modules.cli.query",
      "path": "modules/cli/query.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "query",
          "docstring": "Query LLMs with prompt and context.",
          "line_range": [
            8,
            64
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.query.query",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.query",
            "modules.cli.query.query"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Query LLMs with prompt and context.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:35.895039",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "query": [
          "LLMClient",
          "orchestrator.get_context_for_scenario",
          "json.dump",
          "logging.warning",
          "cache.close",
          "create_context_orchestrator",
          "logging.error",
          "hasattr",
          "client.query_with_context",
          "logging.info",
          "Path",
          "JSONCache",
          "client.query"
        ]
      },
      "dependencies": [
        "JSONCache",
        "LLMClient",
        "Path",
        "create_context_orchestrator",
        "json",
        "llmstruct",
        "llmstruct.cache",
        "llmstruct.context_orchestrator",
        "logging",
        "os",
        "pathlib"
      ],
      "hash": null,
      "uid": "modules.cli.query",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.query"
      ],
      "uid_type": "module",
      "artifact_id": "bd5a581e-f512-0848-8424-b135cac79d5a",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:35.895000",
          "confidence": 0.7,
          "cache_key": "2ff04bc4"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 11,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "modules-cli-query",
        "title": "Module: modules.cli.query",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.query](#modules-cli-query)",
        "html_anchor": "<a id=\"modules-cli-query\"></a>"
      }
    },
    {
      "module_id": "modules.cli.copilot",
      "path": "modules/cli/copilot.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "copilot",
          "docstring": "Copilot integration and context management.",
          "line_range": [
            5,
            113
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.copilot.copilot",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.copilot",
            "modules.cli.copilot.copilot"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Copilot integration and context management.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:35.895464",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "management"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "copilot": [
          "manager.close",
          "manager.unload_context_layer",
          "template_path.exists",
          "manager.refresh_all_contexts",
          "logging.error",
          "smart_suggest",
          "logging.info",
          "open",
          "manager.get_context_status",
          "manager.load_context_layer",
          "initialize_copilot",
          "config_path.exists",
          "getattr",
          "shutil.copy",
          "Path",
          "enumerate",
          "f.write",
          "layers.split",
          "print",
          "hasattr",
          "manager.validate_change",
          "manager.export_context"
        ]
      },
      "dependencies": [
        "Path",
        "initialize_copilot",
        "llmstruct.copilot",
        "logging",
        "pathlib",
        "shutil",
        "smart_suggest"
      ],
      "hash": null,
      "uid": "modules.cli.copilot",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.copilot"
      ],
      "uid_type": "module",
      "artifact_id": "35f4555d-190b-7b25-34f3-7b931e443552",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:35.895422",
          "confidence": 0.7,
          "cache_key": "cdd96368"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 7,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "modules-cli-copilot",
        "title": "Module: modules.cli.copilot",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.copilot](#modules-cli-copilot)",
        "html_anchor": "<a id=\"modules-cli-copilot\"></a>"
      }
    },
    {
      "module_id": "modules.cli.parse",
      "path": "modules/cli/parse.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "parse",
          "docstring": "Parse codebase and generate struct.json.",
          "line_range": [
            9,
            93
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.parse.parse",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.parse",
            "modules.cli.parse.parse"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Parse codebase and generate struct.json.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:35.895740",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "parse": [
          "parsing_config.get",
          "json.dump",
          "cache.close",
          "logging.error",
          "logging.info",
          "cli_config.get",
          "load_config",
          "getattr",
          "func.get",
          "generate_json",
          "module.get",
          "struct_path.open",
          "Path",
          "ast_path.open",
          "mod_dir.mkdir",
          "JSONCache",
          "logging.warning",
          "config.get",
          "struct_data.get",
          "cache.cache_json"
        ]
      },
      "dependencies": [
        "JSONCache",
        "Path",
        "generate_json",
        "json",
        "llmstruct.cache",
        "llmstruct.generators.json_generator",
        "llmstruct.modules.cli.utils",
        "load_config",
        "logging",
        "os",
        "pathlib"
      ],
      "hash": null,
      "uid": "modules.cli.parse",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.parse"
      ],
      "uid_type": "module",
      "artifact_id": "2d27c7fa-4728-2688-7dd3-c5d794db429d",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:35.895715",
          "confidence": 0.7,
          "cache_key": "57495e29"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 1,
        "lines_of_code": 10,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 11,
        "test_coverage": 0.0,
        "maintainability_index": 95
      },
      "markdown_anchor": {
        "id": "modules-cli-parse",
        "title": "Module: modules.cli.parse",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.parse](#modules-cli-parse)",
        "html_anchor": "<a id=\"modules-cli-parse\"></a>"
      }
    },
    {
      "module_id": "modules.cli.epic",
      "path": "modules/cli/epic.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "load_json",
          "docstring": "",
          "line_range": [
            5,
            7
          ],
          "parameters": [
            "path"
          ],
          "decorators": [],
          "uid": "modules.cli.epic.load_json",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.epic",
            "modules.cli.epic.load_json"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Loads and parses JSON data from specified file path\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:36.454597",
              "confidence": 0.7,
              "cache_key": "ea570339"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "show_links",
          "docstring": "",
          "line_range": [
            9,
            57
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.epic.show_links",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.epic",
            "modules.cli.epic.show_links"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Displays hyperlinks from input arguments in a formatted manner\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:37.039939",
              "confidence": 0.7,
              "cache_key": "74b5bc6f"
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "add_epic_cli_subparser",
          "docstring": "",
          "line_range": [
            59,
            67
          ],
          "parameters": [
            "subparsers"
          ],
          "decorators": [],
          "uid": "modules.cli.epic.add_epic_cli_subparser",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.epic",
            "modules.cli.epic.add_epic_cli_subparser"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "\"Adds a subparser for handling Epic CLI commands\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:37.627592",
              "confidence": 0.7,
              "cache_key": "4016bd0b"
            },
            "tags": [
              "function",
              "processing"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "load_json": [
          "open",
          "json.load"
        ],
        "show_links": [
          "load_json",
          "data.get",
          "epic_path.exists",
          "link_map.items",
          "epic.get",
          "item.get",
          "json.dumps",
          "results.items",
          "status_filter.lower",
          "print",
          "t.upper",
          "Path",
          "str"
        ],
        "add_epic_cli_subparser": [
          "show_links_parser.add_argument",
          "epic_parser.add_subparsers",
          "epic_sub.add_parser",
          "show_links_parser.set_defaults",
          "subparsers.add_parser"
        ]
      },
      "dependencies": [
        "Path",
        "argparse",
        "json",
        "pathlib"
      ],
      "hash": null,
      "uid": "modules.cli.epic",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.epic"
      ],
      "uid_type": "module",
      "artifact_id": "d38c62f5-4e1e-8b3a-502d-104702c388d1",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:35.895977",
          "confidence": 0.7,
          "cache_key": "7573f23a"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 3,
        "lines_of_code": 30,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 4,
        "test_coverage": 0.0,
        "maintainability_index": 85
      },
      "markdown_anchor": {
        "id": "modules-cli-epic",
        "title": "Module: modules.cli.epic",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.epic](#modules-cli-epic)",
        "html_anchor": "<a id=\"modules-cli-epic\"></a>"
      }
    },
    {
      "module_id": "modules.cli.handlers",
      "path": "modules/cli/handlers.py",
      "category": "cli",
      "module_doc": "",
      "functions": [
        {
          "name": "interactive",
          "docstring": "Run interactive CLI with modular structure if available, fallback to legacy.",
          "line_range": [
            14,
            21
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.handlers.interactive",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.handlers",
            "modules.cli.handlers.interactive"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Run interactive CLI with modular structure if available, fallback to legacy.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:37.628318",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        },
        {
          "name": "interactive_modular",
          "docstring": "Run interactive CLI with modular structure.",
          "line_range": [
            23,
            32
          ],
          "parameters": [
            "args"
          ],
          "decorators": [],
          "uid": "modules.cli.handlers.interactive_modular",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.handlers",
            "modules.cli.handlers.interactive_modular"
          ],
          "uid_type": "function",
          "smart_summary": {
            "summary": "Run interactive CLI with modular structure.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:37.628370",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "function"
            ]
          }
        }
      ],
      "classes": [],
      "callgraph": {
        "interactive": [
          "interactive_modular",
          "logging.warning",
          "interactive_legacy"
        ],
        "interactive_modular": [
          "logging.info",
          "hasattr",
          "create_cli_core",
          "cli_core.run_interactive_mode"
        ]
      },
      "dependencies": [
        "JSONCache",
        "LLMClient",
        "Path",
        "attach_to_llm_request",
        "create_cli_core",
        "get_folder_structure",
        "interactive_legacy",
        "json",
        "llmstruct",
        "llmstruct.cache",
        "llmstruct.cli_core",
        "llmstruct.generators.json_generator",
        "llmstruct.modules.cli.handlers_legacy",
        "llmstruct.modules.cli.utils",
        "llmstruct.self_run",
        "load_gitignore",
        "logging",
        "os",
        "pathlib",
        "re",
        "read_file_content",
        "time",
        "write_to_file"
      ],
      "hash": null,
      "uid": "modules.cli.handlers",
      "uid_components": [
        "modules",
        "modules.cli",
        "modules.cli.handlers"
      ],
      "uid_type": "module",
      "artifact_id": "b3f8ea06-a189-b070-fd6c-be8a82e6e1cb",
      "smart_summary": {
        "summary": "\"Optimizes image loading and caching for improved website performance\"",
        "summary_generated": true,
        "source": {
          "source_type": "llm_generated",
          "generated_at": "2025-06-25T19:20:37.628252",
          "confidence": 0.7,
          "cache_key": "b40e8423"
        },
        "tags": [
          "module"
        ]
      },
      "metrics": {
        "cyclomatic_complexity": 2,
        "lines_of_code": 20,
        "call_depth": 0,
        "parameter_count": 0,
        "dependencies_count": 23,
        "test_coverage": 0.0,
        "maintainability_index": 90
      },
      "markdown_anchor": {
        "id": "modules-cli-handlers",
        "title": "Module: modules.cli.handlers",
        "level": 2,
        "type": "module",
        "markdown_link": "[Module: modules.cli.handlers](#modules-cli-handlers)",
        "html_anchor": "<a id=\"modules-cli-handlers\"></a>"
      }
    }
  ],
  "hierarchy": {
    "root": {
      "modules": [
        {
          "module_id": "json_selector",
          "path": "json_selector.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "filter_json",
              "docstring": "Filter JSON data by key-value pair and select fields.",
              "line_range": [
                20,
                46
              ],
              "parameters": [
                "data",
                "filter_key",
                "filter_value",
                "fields"
              ],
              "decorators": [],
              "uid": "json_selector.filter_json",
              "uid_components": [
                "json_selector",
                "json_selector.filter_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Filter JSON data by key-value pair and select fields.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:29.933986",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "select_json",
              "docstring": "Load and filter JSON file, optionally parsing partially.",
              "line_range": [
                49,
                116
              ],
              "parameters": [
                "json_path",
                "filter_key",
                "filter_value",
                "fields",
                "partial"
              ],
              "decorators": [],
              "uid": "json_selector.select_json",
              "uid_components": [
                "json_selector",
                "json_selector.select_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Load and filter JSON file, optionally parsing partially.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:29.934009",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "filter_json": [
              "isinstance",
              "item.get",
              "data.get",
              "filtered.append"
            ],
            "select_json": [
              "filter_json",
              "filtered.append",
              "f.seek",
              "Path",
              "logging.error",
              "current_item.get",
              "prefix.startswith",
              "path.append",
              "open",
              "ijson.parse",
              "json_file.exists",
              "json.load"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "List",
            "Optional",
            "Path",
            "argparse",
            "ijson",
            "json",
            "logging",
            "pathlib",
            "typing"
          ],
          "hash": null,
          "uid": "json_selector",
          "uid_components": [
            "json_selector"
          ],
          "uid_type": "module",
          "artifact_id": "dfc4d43e-5cb8-8684-2f0c-fa315e73ab5f",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:29.933938",
              "confidence": 0.7,
              "cache_key": "0f02ef07"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 2,
            "lines_of_code": 20,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 11,
            "test_coverage": 0.0,
            "maintainability_index": 90
          },
          "markdown_anchor": {
            "id": "json_selector",
            "title": "Module: json_selector",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: json_selector](#json_selector)",
            "html_anchor": "<a id=\"json_selector\"></a>"
          }
        },
        {
          "module_id": "__main__",
          "path": "__main__.py",
          "category": "cli",
          "module_doc": "",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [
            "llmstruct.cli",
            "main"
          ],
          "hash": null,
          "uid": "__main__",
          "uid_components": [
            "__main__"
          ],
          "uid_type": "module",
          "artifact_id": "543fa9ef-acae-37b4-c698-a94214cdf779",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:29.934365",
              "confidence": 0.7,
              "cache_key": "e8007703"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 2,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "__main__",
            "title": "Module: __main__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: __main__](#__main__)",
            "html_anchor": "<a id=\"__main__\"></a>"
          }
        },
        {
          "module_id": "__init__",
          "path": "__init__.py",
          "category": "cli",
          "module_doc": "",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [
            "AISelfAwarenessCLIIntegration",
            "LLMClient",
            "SystemCapabilityDiscovery",
            "ai_cli_integration",
            "ai_self_awareness",
            "llm_client"
          ],
          "hash": null,
          "uid": "__init__",
          "uid_components": [
            "__init__"
          ],
          "uid_type": "module",
          "artifact_id": "2eacefd9-a69c-9d85-8e68-ad3e94691bf9",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:29.934590",
              "confidence": 0.7,
              "cache_key": "b7179c6f"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 6,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "__init__",
            "title": "Module: __init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: __init__](#__init__)",
            "html_anchor": "<a id=\"__init__\"></a>"
          }
        },
        {
          "module_id": "cache",
          "path": "cache.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "__init__",
              "docstring": "Initialize SQLite cache for JSON files.",
              "line_range": [
                21,
                25
              ],
              "parameters": [
                "self",
                "db_path"
              ],
              "decorators": [],
              "uid": "cache.__init__",
              "uid_components": [
                "cache",
                "cache.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize SQLite cache for JSON files.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:29.934892",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "create_tables",
              "docstring": "Create tables for metadata and file paths.",
              "line_range": [
                27,
                49
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "cache.create_tables",
              "uid_components": [
                "cache",
                "cache.create_tables"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create tables for metadata and file paths.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:29.934908",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "cache_json",
              "docstring": "Cache JSON metadata and store full file path.",
              "line_range": [
                51,
                90
              ],
              "parameters": [
                "self",
                "json_path",
                "artifact_id",
                "summary",
                "tags"
              ],
              "decorators": [],
              "uid": "cache.cache_json",
              "uid_components": [
                "cache",
                "cache.cache_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Cache JSON metadata and store full file path.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:29.934923",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_metadata",
              "docstring": "Retrieve metadata by artifact_id.",
              "line_range": [
                92,
                108
              ],
              "parameters": [
                "self",
                "artifact_id"
              ],
              "decorators": [],
              "uid": "cache.get_metadata",
              "uid_components": [
                "cache",
                "cache.get_metadata"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Retrieve metadata by artifact_id.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:29.934936",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_full_json",
              "docstring": "Load full JSON by artifact_id.",
              "line_range": [
                110,
                126
              ],
              "parameters": [
                "self",
                "artifact_id"
              ],
              "decorators": [],
              "uid": "cache.get_full_json",
              "uid_components": [
                "cache",
                "cache.get_full_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Load full JSON by artifact_id.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:29.934948",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "close",
              "docstring": "Close database connection.",
              "line_range": [
                128,
                130
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "cache.close",
              "uid_components": [
                "cache",
                "cache.close"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Close database connection.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:29.934959",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "JSONCache",
              "docstring": "",
              "line_range": [
                20,
                130
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "Initialize SQLite cache for JSON files.",
                  "line_range": [
                    21,
                    25
                  ],
                  "parameters": [
                    "self",
                    "db_path"
                  ],
                  "uid": "cache.JSONCache.__init__",
                  "uid_components": [
                    "cache",
                    "cache.JSONCache",
                    "cache.JSONCache.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize SQLite cache for JSON files.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:30.629768",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "create_tables",
                  "docstring": "Create tables for metadata and file paths.",
                  "line_range": [
                    27,
                    49
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "cache.JSONCache.create_tables",
                  "uid_components": [
                    "cache",
                    "cache.JSONCache",
                    "cache.JSONCache.create_tables"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Create tables for metadata and file paths.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:30.629799",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "cache_json",
                  "docstring": "Cache JSON metadata and store full file path.",
                  "line_range": [
                    51,
                    90
                  ],
                  "parameters": [
                    "self",
                    "json_path",
                    "artifact_id",
                    "summary",
                    "tags"
                  ],
                  "uid": "cache.JSONCache.cache_json",
                  "uid_components": [
                    "cache",
                    "cache.JSONCache",
                    "cache.JSONCache.cache_json"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Cache JSON metadata and store full file path.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:30.629829",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_metadata",
                  "docstring": "Retrieve metadata by artifact_id.",
                  "line_range": [
                    92,
                    108
                  ],
                  "parameters": [
                    "self",
                    "artifact_id"
                  ],
                  "uid": "cache.JSONCache.get_metadata",
                  "uid_components": [
                    "cache",
                    "cache.JSONCache",
                    "cache.JSONCache.get_metadata"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Retrieve metadata by artifact_id.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:30.629856",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_full_json",
                  "docstring": "Load full JSON by artifact_id.",
                  "line_range": [
                    110,
                    126
                  ],
                  "parameters": [
                    "self",
                    "artifact_id"
                  ],
                  "uid": "cache.JSONCache.get_full_json",
                  "uid_components": [
                    "cache",
                    "cache.JSONCache",
                    "cache.JSONCache.get_full_json"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Load full JSON by artifact_id.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:30.629882",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "close",
                  "docstring": "Close database connection.",
                  "line_range": [
                    128,
                    130
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "cache.JSONCache.close",
                  "uid_components": [
                    "cache",
                    "cache.JSONCache",
                    "cache.JSONCache.close"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Close database connection.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:30.629907",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "cache.JSONCache",
              "uid_components": [
                "cache",
                "cache.JSONCache"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"JSONCache class stores and retrieves JSON data efficiently for improved application performance.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:30.629708",
                  "confidence": 0.7,
                  "cache_key": "1f095bd8"
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "self.create_tables",
              "sqlite3.connect"
            ],
            "create_tables": [],
            "cache_json": [
              "hashlib.sha256",
              "content.encode",
              "Path",
              "logging.error",
              "json.dumps",
              "logging.info",
              "f.read",
              "open",
              "json_file.exists",
              "str"
            ],
            "get_metadata": [
              "cursor.fetchone",
              "json.loads"
            ],
            "get_full_json": [
              "open",
              "json.load",
              "cursor.fetchone",
              "logging.error"
            ],
            "close": []
          },
          "dependencies": [
            "Any",
            "Dict",
            "List",
            "Optional",
            "Path",
            "hashlib",
            "json",
            "logging",
            "pathlib",
            "sqlite3",
            "typing"
          ],
          "hash": null,
          "uid": "cache",
          "uid_components": [
            "cache"
          ],
          "uid_type": "module",
          "artifact_id": "0fea6a13-c52b-4d47-2536-8f24b045ca84",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:29.934866",
              "confidence": 0.7,
              "cache_key": "6b104681"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 8,
            "lines_of_code": 60,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 11,
            "test_coverage": 0.0,
            "maintainability_index": 60
          },
          "markdown_anchor": {
            "id": "cache",
            "title": "Module: cache",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: cache](#cache)",
            "html_anchor": "<a id=\"cache\"></a>"
          }
        },
        {
          "module_id": "self_run",
          "path": "self_run.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "filter_struct",
              "docstring": "Filter struct.json or init.json based on prompt keywords. Supports dict or list as root.",
              "line_range": [
                22,
                73
              ],
              "parameters": [
                "struct",
                "prompt"
              ],
              "decorators": [],
              "uid": "self_run.filter_struct",
              "uid_components": [
                "self_run",
                "self_run.filter_struct"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Filter struct.json or init.json based on prompt keywords. Supports dict or list as root.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.630346",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "attach_to_llm_request",
              "docstring": "Attach filtered JSON to LLM prompt, using cache if available.",
              "line_range": [
                76,
                116
              ],
              "parameters": [
                "context_path",
                "prompt",
                "cache"
              ],
              "decorators": [],
              "uid": "self_run.attach_to_llm_request",
              "uid_components": [
                "self_run",
                "self_run.attach_to_llm_request"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Attach filtered JSON to LLM prompt, using cache if available.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.630375",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "filter_struct": [
              "filter_json",
              "isinstance",
              "prompt.lower",
              "item.get",
              "any",
              "struct.get",
              "module.get",
              "str"
            ],
            "attach_to_llm_request": [
              "filter_json",
              "context_file.exists",
              "select_json",
              "cache.get_full_json",
              "cache.get_metadata",
              "prompt.lower",
              "logging.error",
              "json.dumps",
              "logging.info",
              "filter_struct",
              "Path",
              "cache.cache_json"
            ]
          },
          "dependencies": [
            "Any",
            "JSONCache",
            "Optional",
            "Path",
            "cache",
            "filter_json",
            "json",
            "json_selector",
            "logging",
            "pathlib",
            "select_json",
            "typing"
          ],
          "hash": null,
          "uid": "self_run",
          "uid_components": [
            "self_run"
          ],
          "uid_type": "module",
          "artifact_id": "8532a889-4743-4885-6d59-680f873fbf07",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:30.630306",
              "confidence": 0.7,
              "cache_key": "5f1eef66"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 2,
            "lines_of_code": 20,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 12,
            "test_coverage": 0.0,
            "maintainability_index": 90
          },
          "markdown_anchor": {
            "id": "self_run",
            "title": "Module: self_run",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: self_run](#self_run)",
            "html_anchor": "<a id=\"self_run\"></a>"
          }
        },
        {
          "module_id": "llm_client",
          "path": "llm_client.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "__init__",
              "docstring": "Initialize LLMClient with optional Ollama host.",
              "line_range": [
                28,
                36
              ],
              "parameters": [
                "self",
                "ollama_host"
              ],
              "decorators": [],
              "uid": "llm_client.__init__",
              "uid_components": [
                "llm_client",
                "llm_client.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize LLMClient with optional Ollama host.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.630833",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "query",
              "docstring": "Query LLMs with prompt, context, and optional model.",
              "line_range": [
                38,
                86
              ],
              "parameters": [
                "self",
                "prompt",
                "context_path",
                "mode",
                "model",
                "artifact_ids"
              ],
              "decorators": [],
              "uid": "llm_client.query",
              "uid_components": [
                "llm_client",
                "llm_client.query"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Query LLMs with prompt, context, and optional model.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.630864",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_query_grok",
              "docstring": "Query Grok API.",
              "line_range": [
                88,
                115
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "uid": "llm_client._query_grok",
              "uid_components": [
                "llm_client",
                "llm_client._query_grok"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Query Grok API.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.630892",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_query_anthropic",
              "docstring": "Query Anthropic API.",
              "line_range": [
                117,
                141
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "uid": "llm_client._query_anthropic",
              "uid_components": [
                "llm_client",
                "llm_client._query_anthropic"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Query Anthropic API.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.630919",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_query_ollama",
              "docstring": "Query Ollama API with specified model.",
              "line_range": [
                143,
                156
              ],
              "parameters": [
                "self",
                "prompt",
                "model"
              ],
              "decorators": [],
              "uid": "llm_client._query_ollama",
              "uid_components": [
                "llm_client",
                "llm_client._query_ollama"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Query Ollama API with specified model.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.630952",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_query_hybrid",
              "docstring": "Query multiple LLMs and combine results.",
              "line_range": [
                158,
                172
              ],
              "parameters": [
                "self",
                "prompt",
                "model"
              ],
              "decorators": [],
              "uid": "llm_client._query_hybrid",
              "uid_components": [
                "llm_client",
                "llm_client._query_hybrid"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Query multiple LLMs and combine results.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:30.630980",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "LLMClient",
              "docstring": "",
              "line_range": [
                27,
                172
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "Initialize LLMClient with optional Ollama host.",
                  "line_range": [
                    28,
                    36
                  ],
                  "parameters": [
                    "self",
                    "ollama_host"
                  ],
                  "uid": "llm_client.LLMClient.__init__",
                  "uid_components": [
                    "llm_client",
                    "llm_client.LLMClient",
                    "llm_client.LLMClient.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize LLMClient with optional Ollama host.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:31.787895",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "query",
                  "docstring": "Query LLMs with prompt, context, and optional model.",
                  "line_range": [
                    38,
                    86
                  ],
                  "parameters": [
                    "self",
                    "prompt",
                    "context_path",
                    "mode",
                    "model",
                    "artifact_ids"
                  ],
                  "uid": "llm_client.LLMClient.query",
                  "uid_components": [
                    "llm_client",
                    "llm_client.LLMClient",
                    "llm_client.LLMClient.query"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Query LLMs with prompt, context, and optional model.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:31.787930",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_query_grok",
                  "docstring": "Query Grok API.",
                  "line_range": [
                    88,
                    115
                  ],
                  "parameters": [
                    "self",
                    "prompt"
                  ],
                  "uid": "llm_client.LLMClient._query_grok",
                  "uid_components": [
                    "llm_client",
                    "llm_client.LLMClient",
                    "llm_client.LLMClient._query_grok"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Query Grok API.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:31.787962",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_query_anthropic",
                  "docstring": "Query Anthropic API.",
                  "line_range": [
                    117,
                    141
                  ],
                  "parameters": [
                    "self",
                    "prompt"
                  ],
                  "uid": "llm_client.LLMClient._query_anthropic",
                  "uid_components": [
                    "llm_client",
                    "llm_client.LLMClient",
                    "llm_client.LLMClient._query_anthropic"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Query Anthropic API.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:31.787993",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_query_ollama",
                  "docstring": "Query Ollama API with specified model.",
                  "line_range": [
                    143,
                    156
                  ],
                  "parameters": [
                    "self",
                    "prompt",
                    "model"
                  ],
                  "uid": "llm_client.LLMClient._query_ollama",
                  "uid_components": [
                    "llm_client",
                    "llm_client.LLMClient",
                    "llm_client.LLMClient._query_ollama"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Query Ollama API with specified model.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:31.788024",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_query_hybrid",
                  "docstring": "Query multiple LLMs and combine results.",
                  "line_range": [
                    158,
                    172
                  ],
                  "parameters": [
                    "self",
                    "prompt",
                    "model"
                  ],
                  "uid": "llm_client.LLMClient._query_hybrid",
                  "uid_components": [
                    "llm_client",
                    "llm_client.LLMClient",
                    "llm_client.LLMClient._query_hybrid"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Query multiple LLMs and combine results.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:31.788056",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "llm_client.LLMClient",
              "uid_components": [
                "llm_client",
                "llm_client.LLMClient"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Provides methods for interacting with LLM API endpoints and handling client-side authentication.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:31.787835",
                  "confidence": 0.7,
                  "cache_key": "a8abf21f"
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "logging.info",
              "os.getenv",
              "int"
            ],
            "query": [
              "self._query_grok",
              "self._query_ollama",
              "self._query_hybrid",
              "logging.warning",
              "self._query_anthropic",
              "logging.error",
              "json.dumps",
              "logging.info",
              "range",
              "json.load",
              "Path",
              "asyncio.sleep"
            ],
            "_query_grok": [
              "session.post",
              "response.json",
              "result.get",
              "logging.error",
              "logging.info",
              "aiohttp.ClientSession"
            ],
            "_query_anthropic": [
              "session.post",
              "response.json",
              "result.get",
              "logging.error",
              "logging.info",
              "aiohttp.ClientSession"
            ],
            "_query_ollama": [
              "session.post",
              "response.json",
              "logging.debug",
              "result.get",
              "logging.error",
              "logging.info",
              "aiohttp.ClientSession"
            ],
            "_query_hybrid": [
              "self._query_grok",
              "self._query_ollama",
              "len",
              "isinstance",
              "self._query_anthropic",
              "asyncio.gather",
              "logging.info"
            ]
          },
          "dependencies": [
            "List",
            "Optional",
            "Path",
            "aiohttp",
            "asyncio",
            "dotenv",
            "json",
            "load_dotenv",
            "logging",
            "os",
            "pathlib",
            "typing"
          ],
          "hash": null,
          "uid": "llm_client",
          "uid_components": [
            "llm_client"
          ],
          "uid_type": "module",
          "artifact_id": "f536aad3-4d5a-915c-8a0c-104fd50d02ef",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:30.630795",
              "confidence": 0.7,
              "cache_key": "b7ea8d96"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 8,
            "lines_of_code": 60,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 12,
            "test_coverage": 0.0,
            "maintainability_index": 60
          },
          "markdown_anchor": {
            "id": "llm_client",
            "title": "Module: llm_client",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: llm_client](#llm_client)",
            "html_anchor": "<a id=\"llm_client\"></a>"
          }
        },
        {
          "module_id": "cli",
          "path": "cli.py",
          "category": "core",
          "module_doc": "LLMStruct CLI - Main entry point for the command-line interface.",
          "functions": [
            {
              "name": "main",
              "docstring": "Command-line interface for LLMstruct.",
              "line_range": [
                55,
                318
              ],
              "parameters": [],
              "decorators": [],
              "uid": "cli.main",
              "uid_components": [
                "cli",
                "cli.main"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Command-line interface for LLMstruct.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:31.788121",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "normalize_patterns",
              "docstring": "",
              "line_range": [
                281,
                292
              ],
              "parameters": [
                "arglist"
              ],
              "decorators": [],
              "uid": "cli.normalize_patterns",
              "uid_components": [
                "cli",
                "cli.normalize_patterns"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Standardizes input patterns for consistent data processing\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:32.421587",
                  "confidence": 0.7,
                  "cache_key": "489b92c0"
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "main": [
              "query_parser.add_argument",
              "review_parser.add_argument",
              "epic.add_epic_cli_subparser",
              "parse_parser.add_argument",
              "context_parser.add_argument",
              "copilot_parser.add_argument",
              "duplicates_parser.add_argument",
              "dogfood_parser.add_argument",
              "subparsers.add_parser",
              "parser.add_subparsers",
              "parser.parse_args",
              "audit_parser.add_argument",
              "argparse.ArgumentParser"
            ],
            "normalize_patterns": [
              "p.strip",
              "item.strip",
              "result.extend",
              "result.append",
              "item.split"
            ]
          },
          "dependencies": [
            "JSONCache",
            "LLMClient",
            "List",
            "Optional",
            "Path",
            "analyze_duplicates",
            "argparse",
            "asyncio",
            "attach_to_llm_request",
            "audit",
            "cli_core",
            "context",
            "copilot",
            "create_cli_core",
            "dogfood",
            "epic",
            "generate_json",
            "get_folder_structure",
            "initialize_copilot",
            "interactive",
            "interactive_legacy",
            "interactive_modular",
            "json",
            "llmstruct",
            "llmstruct.cache",
            "llmstruct.generators.json_generator",
            "llmstruct.modules.cli",
            "llmstruct.modules.cli.analyze_duplicates",
            "llmstruct.modules.cli.audit",
            "llmstruct.modules.cli.context",
            "llmstruct.modules.cli.copilot",
            "llmstruct.modules.cli.dogfood",
            "llmstruct.modules.cli.handlers",
            "llmstruct.modules.cli.parse",
            "llmstruct.modules.cli.query",
            "llmstruct.modules.cli.review",
            "llmstruct.modules.cli.utils",
            "llmstruct.modules.commands.queue",
            "llmstruct.self_run",
            "load_config",
            "load_gitignore",
            "logging",
            "os",
            "parse",
            "parse_files_from_response",
            "pathlib",
            "process_cli_queue_enhanced",
            "query",
            "re",
            "read_file_content",
            "review",
            "shutil",
            "sys",
            "time",
            "toml",
            "typing",
            "write_to_file"
          ],
          "hash": null,
          "uid": "cli",
          "uid_components": [
            "cli"
          ],
          "uid_type": "module",
          "artifact_id": "0898b227-30d5-7afc-d394-d8e4889ece4a",
          "smart_summary": {
            "summary": "LLMStruct CLI - Main entry point for the command-line interface.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:31.788089",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 2,
            "lines_of_code": 20,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 57,
            "test_coverage": 0.0,
            "maintainability_index": 90
          },
          "markdown_anchor": {
            "id": "cli",
            "title": "Module: cli",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: cli](#cli)",
            "html_anchor": "<a id=\"cli\"></a>"
          }
        }
      ]
    },
    "templates": {
      "modules": [
        {
          "module_id": "templates.__init__",
          "path": "templates/__init__.py",
          "category": "cli",
          "module_doc": "Templates for LLM prompts used in LLMStruct integration.",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [],
          "hash": null,
          "uid": "templates.__init__",
          "uid_components": [
            "templates",
            "templates.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "7e5b5e3a-3b2d-81eb-0158-3876cd7516e0",
          "smart_summary": {
            "summary": "Templates for LLM prompts used in LLMStruct integration.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421631",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 0,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "templates-__init__",
            "title": "Module: templates.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: templates.__init__](#templates-__init__)",
            "html_anchor": "<a id=\"templates-__init__\"></a>"
          }
        }
      ]
    },
    "ARCHIVE": {
      "modules": [
        {
          "module_id": "ARCHIVE.cli_argument_parser",
          "path": "ARCHIVE/cli_argument_parser.py",
          "category": "core",
          "module_doc": "CLI argument parsing for LLMStruct.",
          "functions": [
            {
              "name": "create_argument_parser",
              "docstring": "Create and configure the main argument parser.",
              "line_range": [
                14,
                113
              ],
              "parameters": [],
              "decorators": [],
              "uid": "ARCHIVE.cli_argument_parser.create_argument_parser",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_argument_parser",
                "ARCHIVE.cli_argument_parser.create_argument_parser"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create and configure the main argument parser.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421666",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation",
                  "processing"
                ]
              }
            },
            {
              "name": "add_api_bot_commands",
              "docstring": "Add API and bot management commands to the parser.",
              "line_range": [
                116,
                126
              ],
              "parameters": [
                "subparsers"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_argument_parser.add_api_bot_commands",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_argument_parser",
                "ARCHIVE.cli_argument_parser.add_api_bot_commands"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Add API and bot management commands to the parser.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421683",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "create_full_argument_parser",
              "docstring": "Create the full argument parser with all commands.",
              "line_range": [
                129,
                137
              ],
              "parameters": [],
              "decorators": [],
              "uid": "ARCHIVE.cli_argument_parser.create_full_argument_parser",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_argument_parser",
                "ARCHIVE.cli_argument_parser.create_full_argument_parser"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create the full argument parser with all commands.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421709",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation",
                  "processing"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "create_argument_parser": [
              "query_parser.add_argument",
              "review_parser.add_argument",
              "interactive_parser.add_argument",
              "parse_parser.add_argument",
              "context_parser.add_argument",
              "copilot_parser.add_argument",
              "duplicates_parser.add_argument",
              "dogfood_parser.add_argument",
              "subparsers.add_parser",
              "parser.add_subparsers",
              "audit_parser.add_argument",
              "argparse.ArgumentParser"
            ],
            "add_api_bot_commands": [
              "add_bot_commands",
              "add_api_commands"
            ],
            "create_full_argument_parser": [
              "create_argument_parser",
              "add_api_bot_commands"
            ]
          },
          "dependencies": [
            "Path",
            "add_api_commands",
            "add_bot_commands",
            "api_commands",
            "argparse",
            "bot_commands",
            "pathlib"
          ],
          "hash": null,
          "uid": "ARCHIVE.cli_argument_parser",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_argument_parser"
          ],
          "uid_type": "module",
          "artifact_id": "de2bd5b3-aaa6-7470-69aa-a818128ef9a3",
          "smart_summary": {
            "summary": "CLI argument parsing for LLMStruct.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421651",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 3,
            "lines_of_code": 30,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 7,
            "test_coverage": 0.0,
            "maintainability_index": 85
          },
          "markdown_anchor": {
            "id": "archive-cli_argument_parser",
            "title": "Module: ARCHIVE.cli_argument_parser",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: ARCHIVE.cli_argument_parser](#archive-cli_argument_parser)",
            "html_anchor": "<a id=\"archive-cli_argument_parser\"></a>"
          }
        },
        {
          "module_id": "ARCHIVE.cli_core",
          "path": "ARCHIVE/cli_core.py",
          "category": "core",
          "module_doc": "Core CLI functionality and main loop.",
          "functions": [
            {
              "name": "create_cli_core",
              "docstring": "Factory function to create CLI core instance.",
              "line_range": [
                110,
                112
              ],
              "parameters": [
                "root_dir"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_core.create_cli_core",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.create_cli_core"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Factory function to create CLI core instance.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421736",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "Initialize CLI core with root directory.",
              "line_range": [
                28,
                35
              ],
              "parameters": [
                "self",
                "root_dir"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_core.__init__",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize CLI core with root directory.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421748",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "setup_cache",
              "docstring": "Initialize cache if enabled in config.",
              "line_range": [
                37,
                53
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_core.setup_cache",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.setup_cache"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize cache if enabled in config.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421760",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "setup_copilot",
              "docstring": "Initialize Copilot integration if enabled.",
              "line_range": [
                55,
                63
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_core.setup_copilot",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.setup_copilot"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize Copilot integration if enabled.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421771",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "run_interactive_mode",
              "docstring": "Run the interactive CLI mode.",
              "line_range": [
                65,
                97
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_core.run_interactive_mode",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.run_interactive_mode"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Run the interactive CLI mode.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421783",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cleanup",
              "docstring": "Clean up resources.",
              "line_range": [
                99,
                107
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_core.cleanup",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.cleanup"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Clean up resources.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421795",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "CLICore",
              "docstring": "Core CLI class handling main loop and coordination.",
              "line_range": [
                25,
                107
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "Initialize CLI core with root directory.",
                  "line_range": [
                    28,
                    35
                  ],
                  "parameters": [
                    "self",
                    "root_dir"
                  ],
                  "uid": "ARCHIVE.cli_core.CLICore.__init__",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_core",
                    "ARCHIVE.cli_core.CLICore",
                    "ARCHIVE.cli_core.CLICore.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize CLI core with root directory.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.421820",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "setup_cache",
                  "docstring": "Initialize cache if enabled in config.",
                  "line_range": [
                    37,
                    53
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_core.CLICore.setup_cache",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_core",
                    "ARCHIVE.cli_core.CLICore",
                    "ARCHIVE.cli_core.CLICore.setup_cache"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize cache if enabled in config.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.421831",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "setup_copilot",
                  "docstring": "Initialize Copilot integration if enabled.",
                  "line_range": [
                    55,
                    63
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_core.CLICore.setup_copilot",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_core",
                    "ARCHIVE.cli_core.CLICore",
                    "ARCHIVE.cli_core.CLICore.setup_copilot"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize Copilot integration if enabled.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.421843",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "run_interactive_mode",
                  "docstring": "Run the interactive CLI mode.",
                  "line_range": [
                    65,
                    97
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_core.CLICore.run_interactive_mode",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_core",
                    "ARCHIVE.cli_core.CLICore",
                    "ARCHIVE.cli_core.CLICore.run_interactive_mode"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Run the interactive CLI mode.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.421855",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "cleanup",
                  "docstring": "Clean up resources.",
                  "line_range": [
                    99,
                    107
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_core.CLICore.cleanup",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_core",
                    "ARCHIVE.cli_core.CLICore",
                    "ARCHIVE.cli_core.CLICore.cleanup"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Clean up resources.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.421866",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "ARCHIVE.cli_core.CLICore",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_core",
                "ARCHIVE.cli_core.CLICore"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Core CLI class handling main loop and coordination.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421807",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "CLIConfig",
              "CLIUtils",
              "CommandProcessor"
            ],
            "setup_cache": [
              "cache_config.get",
              "logging.warning",
              "logging.info",
              "cache_path.mkdir",
              "Path",
              "JSONCache",
              "str"
            ],
            "setup_copilot": [
              "logging.info",
              "logging.warning",
              "initialize_copilot",
              "copilot_config.get"
            ],
            "run_interactive_mode": [
              "self.setup_copilot",
              "input",
              "user_input.lower",
              "user_input.startswith",
              "self.cleanup",
              "self.setup_cache",
              "logging.error",
              "print"
            ],
            "cleanup": [
              "logging.info"
            ],
            "create_cli_core": [
              "CLICore"
            ]
          },
          "dependencies": [
            "CLIConfig",
            "CLIUtils",
            "CommandProcessor",
            "CopilotContextManager",
            "JSONCache",
            "Optional",
            "Path",
            "cli_commands",
            "cli_config",
            "cli_utils",
            "copilot",
            "initialize_copilot",
            "llmstruct.cache",
            "logging",
            "pathlib",
            "typing"
          ],
          "hash": null,
          "uid": "ARCHIVE.cli_core",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_core"
          ],
          "uid_type": "module",
          "artifact_id": "b5309edf-9df3-07dc-a5ae-a7deb1ae3eb9",
          "smart_summary": {
            "summary": "Core CLI functionality and main loop.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421723",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 8,
            "lines_of_code": 60,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 16,
            "test_coverage": 0.0,
            "maintainability_index": 60
          },
          "markdown_anchor": {
            "id": "archive-cli_core",
            "title": "Module: ARCHIVE.cli_core",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: ARCHIVE.cli_core](#archive-cli_core)",
            "html_anchor": "<a id=\"archive-cli_core\"></a>"
          }
        },
        {
          "module_id": "ARCHIVE.cli_utils",
          "path": "ARCHIVE/cli_utils.py",
          "category": "core",
          "module_doc": "CLI utility functions.",
          "functions": [
            {
              "name": "__init__",
              "docstring": "Initialize utils with root directory.",
              "line_range": [
                24,
                26
              ],
              "parameters": [
                "self",
                "root_dir"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.__init__",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize utils with root directory.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421890",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "read_file_content",
              "docstring": "Read file content with size limit.",
              "line_range": [
                28,
                50
              ],
              "parameters": [
                "self",
                "file_path",
                "max_size"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.read_file_content",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.read_file_content"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Read file content with size limit.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421907",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "write_file_content",
              "docstring": "Write content to file.",
              "line_range": [
                52,
                70
              ],
              "parameters": [
                "self",
                "file_path",
                "content"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.write_file_content",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.write_file_content"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Write content to file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421923",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_directory_structure",
              "docstring": "Get directory structure using folder generator.",
              "line_range": [
                72,
                115
              ],
              "parameters": [
                "self",
                "path",
                "gitignore_patterns",
                "include_patterns",
                "exclude_patterns",
                "exclude_dirs"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.get_directory_structure",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.get_directory_structure"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get directory structure using folder generator.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421936",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "validate_json",
              "docstring": "Validate JSON content.",
              "line_range": [
                117,
                123
              ],
              "parameters": [
                "self",
                "content"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.validate_json",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.validate_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Validate JSON content.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421947",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "format_json",
              "docstring": "Format data as JSON string.",
              "line_range": [
                125,
                131
              ],
              "parameters": [
                "self",
                "data",
                "indent"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.format_json",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.format_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Format data as JSON string.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421959",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "generate_unique_id",
              "docstring": "Generate unique ID for commands, queues, etc.",
              "line_range": [
                133,
                137
              ],
              "parameters": [
                "self",
                "prefix"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.generate_unique_id",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.generate_unique_id"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate unique ID for commands, queues, etc.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421970",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "safe_path_join",
              "docstring": "Safely join path parts, preventing directory traversal.",
              "line_range": [
                139,
                149
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.safe_path_join",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.safe_path_join"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Safely join path parts, preventing directory traversal.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421982",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "file_exists",
              "docstring": "Check if file exists.",
              "line_range": [
                151,
                157
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.file_exists",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.file_exists"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Check if file exists.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.421993",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "dir_exists",
              "docstring": "Check if directory exists.",
              "line_range": [
                159,
                165
              ],
              "parameters": [
                "self",
                "dir_path"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.dir_exists",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.dir_exists"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Check if directory exists.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422005",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "get_file_size",
              "docstring": "Get file size in bytes.",
              "line_range": [
                167,
                173
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.get_file_size",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.get_file_size"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get file size in bytes.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422016",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "backup_file",
              "docstring": "Create backup of file with timestamp.",
              "line_range": [
                175,
                191
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.backup_file",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.backup_file"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create backup of file with timestamp.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422028",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cleanup_old_backups",
              "docstring": "Clean up old backup files, keeping only the most recent ones.",
              "line_range": [
                193,
                222
              ],
              "parameters": [
                "self",
                "file_path",
                "keep_count"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_utils.cleanup_old_backups",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.cleanup_old_backups"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Clean up old backup files, keeping only the most recent ones.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422039",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "CLIUtils",
              "docstring": "Utility functions for CLI operations.",
              "line_range": [
                21,
                222
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "Initialize utils with root directory.",
                  "line_range": [
                    24,
                    26
                  ],
                  "parameters": [
                    "self",
                    "root_dir"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.__init__",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize utils with root directory.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422062",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "read_file_content",
                  "docstring": "Read file content with size limit.",
                  "line_range": [
                    28,
                    50
                  ],
                  "parameters": [
                    "self",
                    "file_path",
                    "max_size"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.read_file_content",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.read_file_content"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Read file content with size limit.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422073",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "write_file_content",
                  "docstring": "Write content to file.",
                  "line_range": [
                    52,
                    70
                  ],
                  "parameters": [
                    "self",
                    "file_path",
                    "content"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.write_file_content",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.write_file_content"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Write content to file.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422084",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_directory_structure",
                  "docstring": "Get directory structure using folder generator.",
                  "line_range": [
                    72,
                    115
                  ],
                  "parameters": [
                    "self",
                    "path",
                    "gitignore_patterns",
                    "include_patterns",
                    "exclude_patterns",
                    "exclude_dirs"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.get_directory_structure",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.get_directory_structure"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get directory structure using folder generator.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422099",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "validate_json",
                  "docstring": "Validate JSON content.",
                  "line_range": [
                    117,
                    123
                  ],
                  "parameters": [
                    "self",
                    "content"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.validate_json",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.validate_json"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Validate JSON content.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422110",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "format_json",
                  "docstring": "Format data as JSON string.",
                  "line_range": [
                    125,
                    131
                  ],
                  "parameters": [
                    "self",
                    "data",
                    "indent"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.format_json",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.format_json"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Format data as JSON string.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422121",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "generate_unique_id",
                  "docstring": "Generate unique ID for commands, queues, etc.",
                  "line_range": [
                    133,
                    137
                  ],
                  "parameters": [
                    "self",
                    "prefix"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.generate_unique_id",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.generate_unique_id"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate unique ID for commands, queues, etc.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422133",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "safe_path_join",
                  "docstring": "Safely join path parts, preventing directory traversal.",
                  "line_range": [
                    139,
                    149
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.safe_path_join",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.safe_path_join"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Safely join path parts, preventing directory traversal.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422147",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "file_exists",
                  "docstring": "Check if file exists.",
                  "line_range": [
                    151,
                    157
                  ],
                  "parameters": [
                    "self",
                    "file_path"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.file_exists",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.file_exists"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Check if file exists.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422159",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "dir_exists",
                  "docstring": "Check if directory exists.",
                  "line_range": [
                    159,
                    165
                  ],
                  "parameters": [
                    "self",
                    "dir_path"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.dir_exists",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.dir_exists"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Check if directory exists.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422170",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "get_file_size",
                  "docstring": "Get file size in bytes.",
                  "line_range": [
                    167,
                    173
                  ],
                  "parameters": [
                    "self",
                    "file_path"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.get_file_size",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.get_file_size"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get file size in bytes.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422181",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "backup_file",
                  "docstring": "Create backup of file with timestamp.",
                  "line_range": [
                    175,
                    191
                  ],
                  "parameters": [
                    "self",
                    "file_path"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.backup_file",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.backup_file"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Create backup of file with timestamp.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422192",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "cleanup_old_backups",
                  "docstring": "Clean up old backup files, keeping only the most recent ones.",
                  "line_range": [
                    193,
                    222
                  ],
                  "parameters": [
                    "self",
                    "file_path",
                    "keep_count"
                  ],
                  "uid": "ARCHIVE.cli_utils.CLIUtils.cleanup_old_backups",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_utils",
                    "ARCHIVE.cli_utils.CLIUtils",
                    "ARCHIVE.cli_utils.CLIUtils.cleanup_old_backups"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Clean up old backup files, keeping only the most recent ones.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422212",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "ARCHIVE.cli_utils.CLIUtils",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_utils",
                "ARCHIVE.cli_utils.CLIUtils"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Utility functions for CLI operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422051",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "utility",
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [],
            "read_file_content": [
              "logging.warning",
              "os.stat",
              "logging.error",
              "f.read",
              "open"
            ],
            "write_file_content": [
              "logging.error",
              "logging.info",
              "open",
              "Path",
              "f.write"
            ],
            "get_directory_structure": [
              "get_folder_structure",
              "sorted",
              "logging.error",
              "os.listdir"
            ],
            "validate_json": [
              "str",
              "json.loads"
            ],
            "format_json": [
              "json.dumps",
              "str",
              "logging.error"
            ],
            "generate_unique_id": [
              "uuid.uuid4",
              "int",
              "time.time",
              "str"
            ],
            "safe_path_join": [
              "ValueError",
              "resolved_path.startswith"
            ],
            "file_exists": [
              "self.safe_path_join"
            ],
            "dir_exists": [
              "self.safe_path_join"
            ],
            "get_file_size": [
              "self.safe_path_join"
            ],
            "backup_file": [
              "self.safe_path_join",
              "dst.write",
              "time.time",
              "logging.error",
              "open",
              "int",
              "src.read"
            ],
            "cleanup_old_backups": [
              "self.safe_path_join",
              "logging.warning",
              "filename.split",
              "os.remove",
              "backups.append",
              "logging.error",
              "logging.info",
              "filename.startswith",
              "int",
              "backups.sort",
              "os.listdir"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "List",
            "Optional",
            "Path",
            "get_folder_structure",
            "json",
            "llmstruct.generators.json_generator",
            "logging",
            "os",
            "pathlib",
            "time",
            "typing",
            "uuid"
          ],
          "hash": null,
          "uid": "ARCHIVE.cli_utils",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_utils"
          ],
          "uid_type": "module",
          "artifact_id": "52571ae4-3b80-9e58-7c71-a1d431d45ed7",
          "smart_summary": {
            "summary": "CLI utility functions.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.421878",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 15,
            "lines_of_code": 130,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 14,
            "test_coverage": 0.0,
            "maintainability_index": 25
          },
          "markdown_anchor": {
            "id": "archive-cli_utils",
            "title": "Module: ARCHIVE.cli_utils",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: ARCHIVE.cli_utils](#archive-cli_utils)",
            "html_anchor": "<a id=\"archive-cli_utils\"></a>"
          }
        },
        {
          "module_id": "ARCHIVE.cli_main_commands",
          "path": "ARCHIVE/cli_main_commands.py",
          "category": "core",
          "module_doc": "Main CLI command handlers for LLMStruct.",
          "functions": [
            {
              "name": "parse",
              "docstring": "Parse codebase and generate struct.json.",
              "line_range": [
                33,
                68
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.parse",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.parse"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Parse codebase and generate struct.json.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422237",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            },
            {
              "name": "query",
              "docstring": "Query LLMs with prompt and context.",
              "line_range": [
                71,
                127
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.query",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.query"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Query LLMs with prompt and context.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422248",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "interactive",
              "docstring": "Run interactive CLI with modular structure if available, fallback to legacy.",
              "line_range": [
                130,
                136
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.interactive",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.interactive"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Run interactive CLI with modular structure if available, fallback to legacy.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422259",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "interactive_modular",
              "docstring": "Run interactive CLI with modular structure.",
              "line_range": [
                139,
                146
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.interactive_modular",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.interactive_modular"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Run interactive CLI with modular structure.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422271",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "interactive_legacy",
              "docstring": "Run interactive CLI with LLM, supporting file/folder viewing and writing.",
              "line_range": [
                149,
                175
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.interactive_legacy",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.interactive_legacy"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Run interactive CLI with LLM, supporting file/folder viewing and writing.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422288",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "basic_interactive_processing",
              "docstring": "Basic interactive processing without enhanced features.",
              "line_range": [
                178,
                230
              ],
              "parameters": [
                "args",
                "cache",
                "client"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.basic_interactive_processing",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.basic_interactive_processing"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Basic interactive processing without enhanced features.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422300",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            },
            {
              "name": "context",
              "docstring": "Generate context.json from input JSON.",
              "line_range": [
                233,
                235
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.context",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.context"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate context.json from input JSON.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422311",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "dogfood",
              "docstring": "Run dogfooding analysis.",
              "line_range": [
                238,
                240
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.dogfood",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.dogfood"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Run dogfooding analysis.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422323",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "review",
              "docstring": "Review codebase with LLM.",
              "line_range": [
                243,
                245
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.review",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.review"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Review codebase with LLM.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422334",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "copilot",
              "docstring": "Copilot integration and context management.",
              "line_range": [
                248,
                366
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.copilot",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.copilot"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Copilot integration and context management.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422345",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "audit",
              "docstring": "Audit project structure and generate reports.",
              "line_range": [
                369,
                387
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.audit",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.audit"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Audit project structure and generate reports.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422356",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "analyze_duplicates",
              "docstring": "Analyze function duplication using struct.json deep analysis.",
              "line_range": [
                390,
                495
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_main_commands.analyze_duplicates",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_main_commands",
                "ARCHIVE.cli_main_commands.analyze_duplicates"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Analyze function duplication using struct.json deep analysis.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422367",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "parse": [
              "attach_to_llm_request",
              "cache.close",
              "logging.error",
              "load_gitignore",
              "logging.info",
              "generate_json",
              "JSONCache"
            ],
            "query": [
              "LLMClient",
              "orchestrator.get_context_for_scenario",
              "json.dump",
              "logging.warning",
              "cache.close",
              "create_context_orchestrator",
              "logging.error",
              "hasattr",
              "client.query_with_context",
              "logging.info",
              "Path",
              "JSONCache",
              "client.query"
            ],
            "interactive": [
              "interactive_modular",
              "logging.warning",
              "interactive_legacy"
            ],
            "interactive_modular": [
              "interactive_legacy",
              "logging.error",
              "create_cli_core",
              "cli_core.run_interactive_mode"
            ],
            "interactive_legacy": [
              "LLMClient",
              "process_cli_queue_enhanced",
              "cache.close",
              "logging.error",
              "basic_interactive_processing",
              "print",
              "Path",
              "JSONCache"
            ],
            "basic_interactive_processing": [
              "user_input.startswith",
              "input",
              "user_input.lower",
              "f.read",
              "print",
              "open",
              "client.query"
            ],
            "context": [
              "logging.warning"
            ],
            "dogfood": [
              "logging.warning"
            ],
            "review": [
              "logging.warning"
            ],
            "copilot": [
              "manager.close",
              "manager.unload_context_layer",
              "template_path.exists",
              "manager.refresh_all_contexts",
              "logging.error",
              "smart_suggest",
              "logging.info",
              "open",
              "manager.get_context_status",
              "manager.load_context_layer",
              "initialize_copilot",
              "config_path.exists",
              "getattr",
              "shutil.copy",
              "Path",
              "enumerate",
              "f.write",
              "layers.split",
              "print",
              "hasattr",
              "manager.validate_change",
              "manager.export_context"
            ],
            "audit": [
              "analyze_duplicates",
              "hasattr",
              "file_path.exists",
              "print",
              "Path"
            ],
            "analyze_duplicates": [
              "json.dump",
              "len",
              "getattr",
              "f.get",
              "logging.error",
              "analysis.get",
              "json.dumps",
              "func.get",
              "print",
              "open",
              "WorkflowOrchestrator",
              "orchestrator.analyze_codebase_for_duplicates"
            ]
          },
          "dependencies": [
            "JSONCache",
            "LLMClient",
            "Optional",
            "Path",
            "WorkflowOrchestrator",
            "argparse",
            "asyncio",
            "attach_to_llm_request",
            "cli",
            "cli_core",
            "context_orchestrator",
            "copilot",
            "create_cli_core",
            "create_context_orchestrator",
            "generate_json",
            "initialize_copilot",
            "json",
            "llmstruct",
            "llmstruct.cache",
            "llmstruct.generators.json_generator",
            "llmstruct.self_run",
            "load_gitignore",
            "logging",
            "os",
            "pathlib",
            "process_cli_queue_enhanced",
            "shutil",
            "smart_suggest",
            "typing",
            "workflow_orchestrator"
          ],
          "hash": null,
          "uid": "ARCHIVE.cli_main_commands",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_main_commands"
          ],
          "uid_type": "module",
          "artifact_id": "9c81e687-23e2-f149-3842-cc912c2cf619",
          "smart_summary": {
            "summary": "Main CLI command handlers for LLMStruct.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422224",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module",
              "management"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 12,
            "lines_of_code": 120,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 30,
            "test_coverage": 0.0,
            "maintainability_index": 40
          },
          "markdown_anchor": {
            "id": "archive-cli_main_commands",
            "title": "Module: ARCHIVE.cli_main_commands",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: ARCHIVE.cli_main_commands](#archive-cli_main_commands)",
            "html_anchor": "<a id=\"archive-cli_main_commands\"></a>"
          }
        },
        {
          "module_id": "ARCHIVE.cli_config",
          "path": "ARCHIVE/cli_config.py",
          "category": "core",
          "module_doc": "CLI configuration management.",
          "functions": [
            {
              "name": "__init__",
              "docstring": "Initialize configuration manager.",
              "line_range": [
                20,
                24
              ],
              "parameters": [
                "self",
                "root_dir"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.__init__",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize configuration manager.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422391",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "_load_config",
              "docstring": "Load configuration from llmstruct.toml.",
              "line_range": [
                26,
                34
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config._load_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config._load_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Load configuration from llmstruct.toml.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422402",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_cache_config",
              "docstring": "Get cache configuration section.",
              "line_range": [
                36,
                38
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_cache_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_cache_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get cache configuration section.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422417",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_copilot_config",
              "docstring": "Get Copilot configuration section.",
              "line_range": [
                40,
                42
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_copilot_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_copilot_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get Copilot configuration section.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422428",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_queue_config",
              "docstring": "Get queue configuration section.",
              "line_range": [
                44,
                46
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_queue_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_queue_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get queue configuration section.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422443",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_context_config",
              "docstring": "Get context configuration section.",
              "line_range": [
                48,
                50
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_context_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_context_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get context configuration section.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422454",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_gitignore_patterns",
              "docstring": "Load and normalize patterns from .gitignore.",
              "line_range": [
                52,
                66
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_gitignore_patterns",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_gitignore_patterns"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Load and normalize patterns from .gitignore.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422471",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_exclude_dirs",
              "docstring": "Get directories to exclude from scanning.",
              "line_range": [
                68,
                82
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_exclude_dirs",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_exclude_dirs"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get directories to exclude from scanning.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422483",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_include_patterns",
              "docstring": "Get file patterns to include.",
              "line_range": [
                84,
                89
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_include_patterns",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_include_patterns"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get file patterns to include.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422494",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_exclude_patterns",
              "docstring": "Get file patterns to exclude.",
              "line_range": [
                91,
                96
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_exclude_patterns",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_exclude_patterns"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get file patterns to exclude.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422506",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_max_file_size",
              "docstring": "Get maximum file size for processing (in bytes).",
              "line_range": [
                98,
                100
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_max_file_size",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_max_file_size"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get maximum file size for processing (in bytes).",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422519",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_auto_update_config",
              "docstring": "Get auto-update configuration.",
              "line_range": [
                102,
                104
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_auto_update_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_auto_update_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get auto-update configuration.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422543",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "is_auto_update_enabled",
              "docstring": "Check if auto-update is enabled.",
              "line_range": [
                106,
                108
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.is_auto_update_enabled",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.is_auto_update_enabled"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Check if auto-update is enabled.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422562",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "get_struct_file_path",
              "docstring": "Get path to struct.json file.",
              "line_range": [
                110,
                112
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_struct_file_path",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_struct_file_path"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get path to struct.json file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422574",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_context_file_path",
              "docstring": "Get path to context file.",
              "line_range": [
                114,
                116
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.get_context_file_path",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.get_context_file_path"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get path to context file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422585",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "save_config",
              "docstring": "Save current configuration to file.",
              "line_range": [
                118,
                124
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.save_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.save_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Save current configuration to file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422596",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "update_config",
              "docstring": "Update configuration value.",
              "line_range": [
                126,
                131
              ],
              "parameters": [
                "self",
                "section",
                "key",
                "value"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.update_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.update_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Update configuration value.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422607",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "reload_config",
              "docstring": "Reload configuration from file.",
              "line_range": [
                133,
                135
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_config.reload_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.reload_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Reload configuration from file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422619",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "CLIConfig",
              "docstring": "Manages CLI configuration from llmstruct.toml and other sources.",
              "line_range": [
                17,
                135
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "Initialize configuration manager.",
                  "line_range": [
                    20,
                    24
                  ],
                  "parameters": [
                    "self",
                    "root_dir"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.__init__",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize configuration manager.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422643",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "_load_config",
                  "docstring": "Load configuration from llmstruct.toml.",
                  "line_range": [
                    26,
                    34
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig._load_config",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig._load_config"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Load configuration from llmstruct.toml.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422655",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "configuration"
                    ]
                  }
                },
                {
                  "name": "get_cache_config",
                  "docstring": "Get cache configuration section.",
                  "line_range": [
                    36,
                    38
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_cache_config",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_cache_config"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get cache configuration section.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422670",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "configuration"
                    ]
                  }
                },
                {
                  "name": "get_copilot_config",
                  "docstring": "Get Copilot configuration section.",
                  "line_range": [
                    40,
                    42
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_copilot_config",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_copilot_config"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get Copilot configuration section.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422687",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "configuration"
                    ]
                  }
                },
                {
                  "name": "get_queue_config",
                  "docstring": "Get queue configuration section.",
                  "line_range": [
                    44,
                    46
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_queue_config",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_queue_config"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get queue configuration section.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422699",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "configuration"
                    ]
                  }
                },
                {
                  "name": "get_context_config",
                  "docstring": "Get context configuration section.",
                  "line_range": [
                    48,
                    50
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_context_config",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_context_config"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get context configuration section.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422710",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "configuration"
                    ]
                  }
                },
                {
                  "name": "get_gitignore_patterns",
                  "docstring": "Load and normalize patterns from .gitignore.",
                  "line_range": [
                    52,
                    66
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_gitignore_patterns",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_gitignore_patterns"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Load and normalize patterns from .gitignore.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422721",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_exclude_dirs",
                  "docstring": "Get directories to exclude from scanning.",
                  "line_range": [
                    68,
                    82
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_exclude_dirs",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_exclude_dirs"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get directories to exclude from scanning.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422743",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_include_patterns",
                  "docstring": "Get file patterns to include.",
                  "line_range": [
                    84,
                    89
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_include_patterns",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_include_patterns"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get file patterns to include.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422769",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_exclude_patterns",
                  "docstring": "Get file patterns to exclude.",
                  "line_range": [
                    91,
                    96
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_exclude_patterns",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_exclude_patterns"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get file patterns to exclude.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422783",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_max_file_size",
                  "docstring": "Get maximum file size for processing (in bytes).",
                  "line_range": [
                    98,
                    100
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_max_file_size",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_max_file_size"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get maximum file size for processing (in bytes).",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422795",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_auto_update_config",
                  "docstring": "Get auto-update configuration.",
                  "line_range": [
                    102,
                    104
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_auto_update_config",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_auto_update_config"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get auto-update configuration.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422806",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "configuration"
                    ]
                  }
                },
                {
                  "name": "is_auto_update_enabled",
                  "docstring": "Check if auto-update is enabled.",
                  "line_range": [
                    106,
                    108
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.is_auto_update_enabled",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.is_auto_update_enabled"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Check if auto-update is enabled.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422817",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "get_struct_file_path",
                  "docstring": "Get path to struct.json file.",
                  "line_range": [
                    110,
                    112
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_struct_file_path",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_struct_file_path"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get path to struct.json file.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422828",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_context_file_path",
                  "docstring": "Get path to context file.",
                  "line_range": [
                    114,
                    116
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.get_context_file_path",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.get_context_file_path"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get path to context file.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422839",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "save_config",
                  "docstring": "Save current configuration to file.",
                  "line_range": [
                    118,
                    124
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.save_config",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.save_config"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Save current configuration to file.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422850",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "configuration"
                    ]
                  }
                },
                {
                  "name": "update_config",
                  "docstring": "Update configuration value.",
                  "line_range": [
                    126,
                    131
                  ],
                  "parameters": [
                    "self",
                    "section",
                    "key",
                    "value"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.update_config",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.update_config"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Update configuration value.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422861",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "configuration"
                    ]
                  }
                },
                {
                  "name": "reload_config",
                  "docstring": "Reload configuration from file.",
                  "line_range": [
                    133,
                    135
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "ARCHIVE.cli_config.CLIConfig.reload_config",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_config",
                    "ARCHIVE.cli_config.CLIConfig",
                    "ARCHIVE.cli_config.CLIConfig.reload_config"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Reload configuration from file.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.422872",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "configuration"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "ARCHIVE.cli_config.CLIConfig",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_config",
                "ARCHIVE.cli_config.CLIConfig"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Manages CLI configuration from llmstruct.toml and other sources.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422631",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "self._load_config",
              "Path"
            ],
            "_load_config": [
              "logging.error",
              "toml.load"
            ],
            "get_cache_config": [],
            "get_copilot_config": [],
            "get_queue_config": [],
            "get_context_config": [],
            "get_gitignore_patterns": [
              "gitignore_path.exists",
              "line.strip",
              "logging.error",
              "gitignore_path.open",
              "Path",
              "line.startswith"
            ],
            "get_exclude_dirs": [
              "list",
              "cli_config.get",
              "set",
              "parsing_config.get"
            ],
            "get_include_patterns": [
              "cli_config.get",
              "parsing_config.get"
            ],
            "get_exclude_patterns": [
              "cli_config.get",
              "parsing_config.get"
            ],
            "get_max_file_size": [],
            "get_auto_update_config": [],
            "is_auto_update_enabled": [
              "self.get_auto_update_config"
            ],
            "get_struct_file_path": [],
            "get_context_file_path": [],
            "save_config": [
              "toml.dump",
              "logging.error"
            ],
            "update_config": [
              "self.save_config"
            ],
            "reload_config": [
              "self._load_config"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "List",
            "Path",
            "logging",
            "pathlib",
            "toml",
            "typing"
          ],
          "hash": null,
          "uid": "ARCHIVE.cli_config",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_config"
          ],
          "uid_type": "module",
          "artifact_id": "86f94751-8517-551a-a92b-e67fc6d08ac2",
          "smart_summary": {
            "summary": "CLI configuration management.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422379",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module",
              "management"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 20,
            "lines_of_code": 180,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 8,
            "test_coverage": 0.0,
            "maintainability_index": 0
          },
          "markdown_anchor": {
            "id": "archive-cli_config",
            "title": "Module: ARCHIVE.cli_config",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: ARCHIVE.cli_config](#archive-cli_config)",
            "html_anchor": "<a id=\"archive-cli_config\"></a>"
          }
        },
        {
          "module_id": "ARCHIVE.cli_commands",
          "path": "ARCHIVE/cli_commands.py",
          "category": "core",
          "module_doc": "CLI command processing and handlers.",
          "functions": [
            {
              "name": "__init__",
              "docstring": "Initialize command processor.",
              "line_range": [
                33,
                72
              ],
              "parameters": [
                "self",
                "root_dir",
                "config",
                "utils"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.__init__",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize command processor.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422903",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "set_cache",
              "docstring": "Set cache instance.",
              "line_range": [
                74,
                76
              ],
              "parameters": [
                "self",
                "cache"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.set_cache",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.set_cache"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Set cache instance.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422915",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "set_copilot",
              "docstring": "Set Copilot manager instance.",
              "line_range": [
                78,
                80
              ],
              "parameters": [
                "self",
                "copilot_manager"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.set_copilot",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.set_copilot"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Set Copilot manager instance.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422926",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "process_command",
              "docstring": "Process a command starting with /.",
              "line_range": [
                82,
                98
              ],
              "parameters": [
                "self",
                "command_line"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.process_command",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.process_command"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Process a command starting with /.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422937",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            },
            {
              "name": "process_prompt",
              "docstring": "Process a regular user prompt (not a command).",
              "line_range": [
                100,
                152
              ],
              "parameters": [
                "self",
                "prompt"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.process_prompt",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.process_prompt"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Process a regular user prompt (not a command).",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422952",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            },
            {
              "name": "cmd_help",
              "docstring": "Show help information.",
              "line_range": [
                154,
                217
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_help",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_help"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Show help information.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422964",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cmd_workspace",
              "docstring": "Handle workspace state and permissions management.",
              "line_range": [
                219,
                334
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_workspace",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_workspace"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle workspace state and permissions management.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422975",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_mode",
              "docstring": "Handle context mode operations with workspace integration.",
              "line_range": [
                336,
                437
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_mode",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_mode"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle context mode operations with workspace integration.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422986",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_view",
              "docstring": "View file or directory contents.",
              "line_range": [
                439,
                478
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_view",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_view"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "View file or directory contents.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.422997",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cmd_write",
              "docstring": "Write content to a file.",
              "line_range": [
                480,
                505
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_write",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_write"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Write content to a file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423008",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cmd_queue",
              "docstring": "Handle queue operations.",
              "line_range": [
                507,
                549
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_queue",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_queue"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle queue operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423019",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_cache",
              "docstring": "Handle cache operations.",
              "line_range": [
                551,
                590
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_cache",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_cache"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle cache operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423030",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_copilot",
              "docstring": "Handle Copilot operations.",
              "line_range": [
                592,
                626
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_copilot",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_copilot"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle Copilot operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423041",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_config",
              "docstring": "Handle configuration operations.",
              "line_range": [
                628,
                660
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_config",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle configuration operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423051",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "cmd_status",
              "docstring": "Show system status.",
              "line_range": [
                662,
                676
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_status",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_status"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Show system status.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423063",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cmd_backup",
              "docstring": "Create backup of a file.",
              "line_range": [
                678,
                693
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_backup",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_backup"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create backup of a file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423076",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cmd_parse",
              "docstring": "Parse project structure.",
              "line_range": [
                695,
                715
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_parse",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_parse"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Parse project structure.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423089",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            },
            {
              "name": "cmd_audit",
              "docstring": "Handle audit operations.",
              "line_range": [
                717,
                743
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_audit",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_audit"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle audit operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423103",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "handle_auto_update",
              "docstring": "Handle auto-update operations.",
              "line_range": [
                745,
                765
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.handle_auto_update",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.handle_auto_update"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle auto-update operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423114",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "handle_struct_status",
              "docstring": "Handle struct status operations.",
              "line_range": [
                767,
                791
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.handle_struct_status",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.handle_struct_status"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle struct status operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423125",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_context",
              "docstring": "Handle context operations.",
              "line_range": [
                793,
                849
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_context",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_context"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle context operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423136",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "cmd_session",
              "docstring": "Handle session operations.",
              "line_range": [
                851,
                902
              ],
              "parameters": [
                "self",
                "args"
              ],
              "decorators": [],
              "uid": "ARCHIVE.cli_commands.cmd_session",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.cmd_session"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Handle session operations.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423147",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "CommandProcessor",
              "docstring": "Processes CLI commands and user prompts.",
              "line_range": [
                30,
                902
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "Initialize command processor.",
                  "line_range": [
                    33,
                    72
                  ],
                  "parameters": [
                    "self",
                    "root_dir",
                    "config",
                    "utils"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.__init__",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize command processor.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423172",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "set_cache",
                  "docstring": "Set cache instance.",
                  "line_range": [
                    74,
                    76
                  ],
                  "parameters": [
                    "self",
                    "cache"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.set_cache",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.set_cache"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Set cache instance.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423184",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "set_copilot",
                  "docstring": "Set Copilot manager instance.",
                  "line_range": [
                    78,
                    80
                  ],
                  "parameters": [
                    "self",
                    "copilot_manager"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.set_copilot",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.set_copilot"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Set Copilot manager instance.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423200",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "process_command",
                  "docstring": "Process a command starting with /.",
                  "line_range": [
                    82,
                    98
                  ],
                  "parameters": [
                    "self",
                    "command_line"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.process_command",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.process_command"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Process a command starting with /.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423212",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "processing"
                    ]
                  }
                },
                {
                  "name": "process_prompt",
                  "docstring": "Process a regular user prompt (not a command).",
                  "line_range": [
                    100,
                    152
                  ],
                  "parameters": [
                    "self",
                    "prompt"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.process_prompt",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.process_prompt"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Process a regular user prompt (not a command).",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423223",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "processing"
                    ]
                  }
                },
                {
                  "name": "cmd_help",
                  "docstring": "Show help information.",
                  "line_range": [
                    154,
                    217
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_help",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_help"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Show help information.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423234",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "cmd_workspace",
                  "docstring": "Handle workspace state and permissions management.",
                  "line_range": [
                    219,
                    334
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_workspace",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_workspace"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle workspace state and permissions management.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423245",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "cmd_mode",
                  "docstring": "Handle context mode operations with workspace integration.",
                  "line_range": [
                    336,
                    437
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_mode",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_mode"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle context mode operations with workspace integration.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423255",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "cmd_view",
                  "docstring": "View file or directory contents.",
                  "line_range": [
                    439,
                    478
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_view",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_view"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "View file or directory contents.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423266",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "cmd_write",
                  "docstring": "Write content to a file.",
                  "line_range": [
                    480,
                    505
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_write",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_write"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Write content to a file.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423283",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "cmd_queue",
                  "docstring": "Handle queue operations.",
                  "line_range": [
                    507,
                    549
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_queue",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_queue"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle queue operations.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423294",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "cmd_cache",
                  "docstring": "Handle cache operations.",
                  "line_range": [
                    551,
                    590
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_cache",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_cache"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle cache operations.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423305",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "cmd_copilot",
                  "docstring": "Handle Copilot operations.",
                  "line_range": [
                    592,
                    626
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_copilot",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_copilot"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle Copilot operations.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423315",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "cmd_config",
                  "docstring": "Handle configuration operations.",
                  "line_range": [
                    628,
                    660
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_config",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_config"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle configuration operations.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423326",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management",
                      "configuration"
                    ]
                  }
                },
                {
                  "name": "cmd_status",
                  "docstring": "Show system status.",
                  "line_range": [
                    662,
                    676
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_status",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_status"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Show system status.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423337",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "cmd_backup",
                  "docstring": "Create backup of a file.",
                  "line_range": [
                    678,
                    693
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_backup",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_backup"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Create backup of a file.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423348",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "cmd_parse",
                  "docstring": "Parse project structure.",
                  "line_range": [
                    695,
                    715
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_parse",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_parse"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Parse project structure.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423358",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "processing"
                    ]
                  }
                },
                {
                  "name": "cmd_audit",
                  "docstring": "Handle audit operations.",
                  "line_range": [
                    717,
                    743
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_audit",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_audit"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle audit operations.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423369",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "handle_auto_update",
                  "docstring": "Handle auto-update operations.",
                  "line_range": [
                    745,
                    765
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.handle_auto_update",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.handle_auto_update"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle auto-update operations.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423379",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "handle_struct_status",
                  "docstring": "Handle struct status operations.",
                  "line_range": [
                    767,
                    791
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.handle_struct_status",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.handle_struct_status"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle struct status operations.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423390",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "cmd_context",
                  "docstring": "Handle context operations.",
                  "line_range": [
                    793,
                    849
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_context",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_context"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle context operations.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423404",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "cmd_session",
                  "docstring": "Handle session operations.",
                  "line_range": [
                    851,
                    902
                  ],
                  "parameters": [
                    "self",
                    "args"
                  ],
                  "uid": "ARCHIVE.cli_commands.CommandProcessor.cmd_session",
                  "uid_components": [
                    "ARCHIVE",
                    "ARCHIVE.cli_commands",
                    "ARCHIVE.cli_commands.CommandProcessor",
                    "ARCHIVE.cli_commands.CommandProcessor.cmd_session"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Handle session operations.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423415",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "ARCHIVE.cli_commands.CommandProcessor",
              "uid_components": [
                "ARCHIVE",
                "ARCHIVE.cli_commands",
                "ARCHIVE.cli_commands.CommandProcessor"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Processes CLI commands and user prompts.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423158",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class",
                  "processing"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "print",
              "WorkspaceStateManager"
            ],
            "set_cache": [],
            "set_copilot": [],
            "process_command": [
              "len",
              "logging.error",
              "command_line.strip",
              "print",
              "command_line.split"
            ],
            "process_prompt": [
              "logging.warning",
              "get_optimized_context",
              "len",
              "context_info.get",
              "prompt.strip",
              "logging.error",
              "CopilotEvent",
              "context_data.get",
              "logging.info",
              "print"
            ],
            "cmd_help": [
              "print"
            ],
            "cmd_workspace": [
              "len",
              "entry.get",
              "override.get",
              "state.get",
              "args.strip",
              "result.get",
              "logging.error",
              "action_args.split",
              "boundaries.get",
              "print",
              "int",
              "permissions.get"
            ],
            "cmd_mode": [
              "args.upper",
              "len",
              "get_optimized_context",
              "args.strip",
              "args.lower",
              "result.get",
              "metrics.get",
              "context_data.get",
              "print",
              "re.findall",
              "permissions.get"
            ],
            "cmd_view": [
              "print",
              "sorted",
              "args.strip",
              "os.listdir"
            ],
            "cmd_write": [
              "len",
              "content.startswith",
              "content.endswith",
              "print",
              "args.split"
            ],
            "cmd_queue": [
              "len",
              "os.remove",
              "args.strip",
              "queue_data.get",
              "print",
              "open",
              "json.load",
              "cmd.get",
              "enumerate"
            ],
            "cmd_cache": [
              "len",
              "args.strip",
              "stats.get",
              "print",
              "os.listdir"
            ],
            "cmd_copilot": [
              "args.strip",
              "json.dumps",
              "print",
              "open",
              "json.load"
            ],
            "cmd_config": [
              "print",
              "args.strip",
              "json.dumps"
            ],
            "cmd_status": [
              "print"
            ],
            "cmd_backup": [
              "print",
              "args.strip"
            ],
            "cmd_parse": [
              "print",
              "generate_json"
            ],
            "cmd_audit": [
              "print",
              "args.strip"
            ],
            "handle_auto_update": [
              "print",
              "generate_json"
            ],
            "handle_struct_status": [
              "len",
              "os.stat",
              "struct_data.get",
              "print",
              "open",
              "json.load",
              "datetime.fromtimestamp"
            ],
            "cmd_context": [
              "get_optimized_context",
              "len",
              "args.strip",
              "metrics.get",
              "context_data.get",
              "print"
            ],
            "cmd_session": [
              "datetime.now",
              "len",
              "state.get",
              "args.strip",
              "print"
            ]
          },
          "dependencies": [
            "Any",
            "CLIConfig",
            "CLIUtils",
            "CopilotContextManager",
            "CopilotEvent",
            "Dict",
            "JSONCache",
            "List",
            "Optional",
            "Path",
            "WorkspaceStateManager",
            "cli_config",
            "cli_utils",
            "copilot",
            "create_context_orchestrator",
            "datetime",
            "generate_json",
            "get_optimized_context",
            "get_optimized_context_for_scenario",
            "initialize_copilot",
            "json",
            "llmstruct.cache",
            "llmstruct.context_orchestrator",
            "llmstruct.copilot",
            "llmstruct.generators.json_generator",
            "logging",
            "os",
            "pathlib",
            "re",
            "subprocess",
            "sys",
            "trigger_copilot_event",
            "typing",
            "workspace"
          ],
          "hash": null,
          "uid": "ARCHIVE.cli_commands",
          "uid_components": [
            "ARCHIVE",
            "ARCHIVE.cli_commands"
          ],
          "uid_type": "module",
          "artifact_id": "6788421c-55c7-c89b-3bd3-4f66df8fc494",
          "smart_summary": {
            "summary": "CLI command processing and handlers.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.422884",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module",
              "management"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 24,
            "lines_of_code": 220,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 34,
            "test_coverage": 0.0,
            "maintainability_index": 0
          },
          "markdown_anchor": {
            "id": "archive-cli_commands",
            "title": "Module: ARCHIVE.cli_commands",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: ARCHIVE.cli_commands](#archive-cli_commands)",
            "html_anchor": "<a id=\"archive-cli_commands\"></a>"
          }
        }
      ]
    },
    "api": {
      "modules": [
        {
          "module_id": "api.__init__",
          "path": "api/__init__.py",
          "category": "cli",
          "module_doc": "LLMStruct FastAPI Module\n\nProvides HTTP REST API access to LLMStruct CLI functionality.",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [],
          "hash": null,
          "uid": "api.__init__",
          "uid_components": [
            "api",
            "api.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "2141f9ab-29bd-1320-531c-39b8ee35e3f3",
          "smart_summary": {
            "summary": "LLMStruct FastAPI Module",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423427",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 0,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "api-__init__",
            "title": "Module: api.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.__init__](#api-__init__)",
            "html_anchor": "<a id=\"api-__init__\"></a>"
          }
        },
        {
          "module_id": "api.config",
          "path": "api/config.py",
          "category": "core",
          "module_doc": "Configuration management for LLMStruct FastAPI",
          "functions": [],
          "classes": [
            {
              "name": "Settings",
              "docstring": "Application settings with environment variable support",
              "line_range": [
                12,
                43
              ],
              "methods": [],
              "bases": [
                "BaseSettings"
              ],
              "uid": "api.config.Settings",
              "uid_components": [
                "api",
                "api.config",
                "api.config.Settings"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Application settings with environment variable support",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423450",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class",
                  "configuration"
                ]
              }
            }
          ],
          "callgraph": {},
          "dependencies": [
            "BaseSettings",
            "List",
            "pydantic",
            "pydantic_settings",
            "typing"
          ],
          "hash": null,
          "uid": "api.config",
          "uid_components": [
            "api",
            "api.config"
          ],
          "uid_type": "module",
          "artifact_id": "9f366aa4-017b-fddf-a2d2-1212f4b53671",
          "smart_summary": {
            "summary": "Configuration management for LLMStruct FastAPI",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423439",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module",
              "management"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 2,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 5,
            "test_coverage": 0.0,
            "maintainability_index": 90
          },
          "markdown_anchor": {
            "id": "api-config",
            "title": "Module: api.config",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.config](#api-config)",
            "html_anchor": "<a id=\"api-config\"></a>"
          }
        },
        {
          "module_id": "api.app",
          "path": "api/app.py",
          "category": "core",
          "module_doc": "Main FastAPI application for LLMStruct",
          "functions": [
            {
              "name": "root",
              "docstring": "Root endpoint with API information",
              "line_range": [
                78,
                86
              ],
              "parameters": [],
              "decorators": [
                "app.get('/', tags=['root'])"
              ],
              "uid": "api.app.root",
              "uid_components": [
                "api",
                "api.app",
                "api.app.root"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Root endpoint with API information",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423483",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "root": [
              "app.get"
            ]
          },
          "dependencies": [
            "CORSMiddleware",
            "Depends",
            "FastAPI",
            "GZipMiddleware",
            "api_key_middleware",
            "chat",
            "config",
            "continue_adapter",
            "fastapi",
            "fastapi.middleware.cors",
            "fastapi.middleware.gzip",
            "logging",
            "middleware.auth",
            "middleware.logging",
            "request_logging_middleware",
            "routes",
            "settings",
            "system",
            "uvicorn"
          ],
          "hash": null,
          "uid": "api.app",
          "uid_components": [
            "api",
            "api.app"
          ],
          "uid_type": "module",
          "artifact_id": "43425a1e-e61c-eb5b-1299-5defb87285f8",
          "smart_summary": {
            "summary": "Main FastAPI application for LLMStruct",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423472",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 19,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "api-app",
            "title": "Module: api.app",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.app](#api-app)",
            "html_anchor": "<a id=\"api-app\"></a>"
          }
        }
      ],
      "routes": [
        {
          "module_id": "api.routes.system",
          "path": "api/routes/system.py",
          "category": "core",
          "module_doc": "System routes for LLMStruct FastAPI\n\nHealth checks, metrics, and system information endpoints.",
          "functions": [
            {
              "name": "get_cli_bridge",
              "docstring": "Dependency to get CLI bridge instance",
              "line_range": [
                17,
                19
              ],
              "parameters": [],
              "decorators": [],
              "uid": "api.routes.system.get_cli_bridge",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.system",
                "api.routes.system.get_cli_bridge"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Dependency to get CLI bridge instance",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:52.111348",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "health_check",
              "docstring": "Health check endpoint\n\nReturns the health status of the API and its dependencies.\nThis endpoint does not require authentication.",
              "line_range": [
                23,
                61
              ],
              "parameters": [
                "cli"
              ],
              "decorators": [
                "router.get('/health', response_model=HealthResponse)"
              ],
              "uid": "api.routes.system.health_check",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.system",
                "api.routes.system.health_check"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Health check endpoint",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:52.111364",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "get_system_status",
              "docstring": "Get detailed system status\n\nReturns detailed system information including:\n- API version and configuration\n- CLI status and version\n- Resource usage (if available)",
              "line_range": [
                65,
                97
              ],
              "parameters": [],
              "decorators": [
                "router.get('/status')"
              ],
              "uid": "api.routes.system.get_system_status",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.system",
                "api.routes.system.get_system_status"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get detailed system status",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:52.111381",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_version",
              "docstring": "Get API version information\n\nReturns version information for the API and underlying components.",
              "line_range": [
                101,
                123
              ],
              "parameters": [],
              "decorators": [
                "router.get('/version')"
              ],
              "uid": "api.routes.system.get_version",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.system",
                "api.routes.system.get_version"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get API version information",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:52.111395",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "ping",
              "docstring": "Simple ping endpoint for basic connectivity testing",
              "line_range": [
                127,
                134
              ],
              "parameters": [],
              "decorators": [
                "router.get('/ping')"
              ],
              "uid": "api.routes.system.ping",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.system",
                "api.routes.system.ping"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Simple ping endpoint for basic connectivity testing",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:52.111409",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "get_cli_bridge": [
              "CLIBridge"
            ],
            "health_check": [
              "Depends",
              "HealthResponse",
              "datetime.utcnow",
              "str",
              "cli.health_check",
              "router.get",
              "cli_health.get"
            ],
            "get_system_status": [
              "HTTPException",
              "datetime.utcnow",
              "str",
              "cli.health_check",
              "router.get",
              "CLIBridge",
              "cli_health.get"
            ],
            "get_version": [
              "HTTPException",
              "datetime.utcnow",
              "str",
              "cli.health_check",
              "router.get",
              "CLIBridge",
              "cli_health.get"
            ],
            "ping": [
              "datetime.utcnow",
              "router.get"
            ]
          },
          "dependencies": [
            "APIRouter",
            "CLIBridge",
            "Depends",
            "HTTPException",
            "HealthResponse",
            "HealthStatus",
            "asyncio",
            "datetime",
            "fastapi",
            "models.responses",
            "services.cli_bridge"
          ],
          "hash": null,
          "uid": "api.routes.system",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.system"
          ],
          "uid_type": "module",
          "artifact_id": "12ba74fb-ce49-2371-2ae7-2165e66984ff",
          "smart_summary": {
            "summary": "System routes for LLMStruct FastAPI",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111329",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 5,
            "lines_of_code": 50,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 11,
            "test_coverage": 0.0,
            "maintainability_index": 75
          },
          "markdown_anchor": {
            "id": "api-routes-system",
            "title": "Module: api.routes.system",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.routes.system](#api-routes-system)",
            "html_anchor": "<a id=\"api-routes-system\"></a>"
          }
        },
        {
          "module_id": "api.routes.__init__",
          "path": "api/routes/__init__.py",
          "category": "cli",
          "module_doc": "Routes package for LLMStruct FastAPI\n\nContains all API endpoint routers.",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [],
          "hash": null,
          "uid": "api.routes.__init__",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "d0736668-b963-f05d-a46f-04d8c521ca8f",
          "smart_summary": {
            "summary": "Routes package for LLMStruct FastAPI",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111424",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 0,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "api-routes-__init__",
            "title": "Module: api.routes.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.routes.__init__](#api-routes-__init__)",
            "html_anchor": "<a id=\"api-routes-__init__\"></a>"
          }
        },
        {
          "module_id": "api.routes.chat",
          "path": "api/routes/chat.py",
          "category": "core",
          "module_doc": "Chat Routes\n\nWebSocket-based real-time chat with LLM integration",
          "functions": [
            {
              "name": "websocket_chat",
              "docstring": "WebSocket endpoint for real-time chat",
              "line_range": [
                52,
                131
              ],
              "parameters": [
                "websocket",
                "session_id",
                "api_key"
              ],
              "decorators": [
                "router.websocket('/chat/ws')"
              ],
              "uid": "api.routes.chat.websocket_chat",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.websocket_chat"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "WebSocket endpoint for real-time chat",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:52.111452",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "list_sessions",
              "docstring": "List active chat sessions",
              "line_range": [
                134,
                137
              ],
              "parameters": [],
              "decorators": [
                "router.get('/chat/sessions', dependencies=[Depends(get_api_key)])"
              ],
              "uid": "api.routes.chat.list_sessions",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.list_sessions"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "List active chat sessions",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:52.111465",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_session",
              "docstring": "Get session details and history",
              "line_range": [
                140,
                145
              ],
              "parameters": [
                "session_id"
              ],
              "decorators": [
                "router.get('/chat/sessions/{session_id}', dependencies=[Depends(get_api_key)])"
              ],
              "uid": "api.routes.chat.get_session",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.get_session"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get session details and history",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:52.111479",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "delete_session",
              "docstring": "Delete a chat session",
              "line_range": [
                148,
                153
              ],
              "parameters": [
                "session_id"
              ],
              "decorators": [
                "router.delete('/chat/sessions/{session_id}', dependencies=[Depends(get_api_key)])"
              ],
              "uid": "api.routes.chat.delete_session",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.delete_session"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Delete a chat session",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:52.111491",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "send_message",
              "docstring": "Send a message via HTTP (alternative to WebSocket)",
              "line_range": [
                156,
                179
              ],
              "parameters": [
                "message"
              ],
              "decorators": [
                "router.post('/chat/message', dependencies=[Depends(get_api_key)])"
              ],
              "uid": "api.routes.chat.send_message",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.send_message"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Send a message via HTTP (alternative to WebSocket)",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:52.111505",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                32,
                33
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "api.routes.chat.__init__",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes a new instance of the class with default values and settings\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:53.459336",
                  "confidence": 0.7,
                  "cache_key": "750e6f51"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "connect",
              "docstring": "",
              "line_range": [
                35,
                38
              ],
              "parameters": [
                "self",
                "websocket",
                "session_id"
              ],
              "decorators": [],
              "uid": "api.routes.chat.connect",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.connect"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Establishes a connection between a client and server using a WebSocket and session ID.",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:54.133491",
                  "confidence": 0.7,
                  "cache_key": "80fbc59a"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "disconnect",
              "docstring": "",
              "line_range": [
                40,
                43
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "decorators": [],
              "uid": "api.routes.chat.disconnect",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.disconnect"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Closes a specific session connection identified by session_id\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:54.751070",
                  "confidence": 0.7,
                  "cache_key": "8d1307c7"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "send_message",
              "docstring": "",
              "line_range": [
                45,
                47
              ],
              "parameters": [
                "self",
                "session_id",
                "message"
              ],
              "decorators": [],
              "uid": "api.routes.chat.send_message",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.send_message"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Transmits message to specified session ID using provided data\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:55.273834",
                  "confidence": 0.7,
                  "cache_key": "4ae244ce"
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "ConnectionManager",
              "docstring": "Manages WebSocket connections",
              "line_range": [
                29,
                47
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    32,
                    33
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "api.routes.chat.ConnectionManager.__init__",
                  "uid_components": [
                    "api",
                    "api.routes",
                    "api.routes.chat",
                    "api.routes.chat.ConnectionManager",
                    "api.routes.chat.ConnectionManager.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes an instance of a class with default attributes and settings\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:55.894529",
                      "confidence": 0.7,
                      "cache_key": "ff95f951"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "connect",
                  "docstring": "",
                  "line_range": [
                    35,
                    38
                  ],
                  "parameters": [
                    "self",
                    "websocket",
                    "session_id"
                  ],
                  "uid": "api.routes.chat.ConnectionManager.connect",
                  "uid_components": [
                    "api",
                    "api.routes",
                    "api.routes.chat",
                    "api.routes.chat.ConnectionManager",
                    "api.routes.chat.ConnectionManager.connect"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Establishes a connection between the client and server using a WebSocket and session ID.",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:58.033933",
                      "confidence": 0.7,
                      "cache_key": "10c299c4"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "disconnect",
                  "docstring": "",
                  "line_range": [
                    40,
                    43
                  ],
                  "parameters": [
                    "self",
                    "session_id"
                  ],
                  "uid": "api.routes.chat.ConnectionManager.disconnect",
                  "uid_components": [
                    "api",
                    "api.routes",
                    "api.routes.chat",
                    "api.routes.chat.ConnectionManager",
                    "api.routes.chat.ConnectionManager.disconnect"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Terminates a user's session by removing session ID from active sessions list\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:58.646481",
                      "confidence": 0.7,
                      "cache_key": "3a2185c6"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "send_message",
                  "docstring": "",
                  "line_range": [
                    45,
                    47
                  ],
                  "parameters": [
                    "self",
                    "session_id",
                    "message"
                  ],
                  "uid": "api.routes.chat.ConnectionManager.send_message",
                  "uid_components": [
                    "api",
                    "api.routes",
                    "api.routes.chat",
                    "api.routes.chat.ConnectionManager",
                    "api.routes.chat.ConnectionManager.send_message"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Sends a message to a specified session ID with the provided message content.\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:59.155135",
                      "confidence": 0.7,
                      "cache_key": "0a182e75"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "api.routes.chat.ConnectionManager",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.chat",
                "api.routes.chat.ConnectionManager"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Manages WebSocket connections",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:55.274018",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class",
                  "management"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [],
            "connect": [
              "logger.info",
              "websocket.accept"
            ],
            "disconnect": [
              "logger.info"
            ],
            "send_message": [
              "logger.error",
              "session_manager.add_message",
              "ChatResponse",
              "Depends",
              "HTTPException",
              "llm_service.process_message",
              "router.post",
              "str"
            ],
            "websocket_chat": [
              "datetime.now",
              "logger.error",
              "session_manager.add_message",
              "manager.send_message",
              "manager.connect",
              "logger.info",
              "router.websocket",
              "uuid.uuid4",
              "json.loads",
              "manager.disconnect",
              "websocket.receive_text",
              "websocket.close",
              "llm_service.process_message",
              "message_data.get",
              "str",
              "session_manager.get_or_create_session"
            ],
            "list_sessions": [
              "Depends",
              "session_manager.list_sessions",
              "router.get"
            ],
            "get_session": [
              "Depends",
              "router.get",
              "HTTPException",
              "session_manager.get_session"
            ],
            "delete_session": [
              "Depends",
              "session_manager.delete_session",
              "router.delete",
              "HTTPException"
            ]
          },
          "dependencies": [
            "APIRouter",
            "Any",
            "ChatMessage",
            "ChatResponse",
            "ChatSessionManager",
            "Depends",
            "Dict",
            "HTTPBearer",
            "HTTPException",
            "LLMService",
            "Optional",
            "WebSocket",
            "WebSocketDisconnect",
            "asyncio",
            "datetime",
            "fastapi",
            "fastapi.security",
            "get_api_key",
            "json",
            "logging",
            "middleware.auth",
            "models.requests",
            "models.responses",
            "services.chat_session",
            "services.llm_service",
            "typing",
            "uuid"
          ],
          "hash": null,
          "uid": "api.routes.chat",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.chat"
          ],
          "uid_type": "module",
          "artifact_id": "860becb9-11cf-57e8-1684-a1748a699775",
          "smart_summary": {
            "summary": "Chat Routes",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:52.111438",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 11,
            "lines_of_code": 90,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 27,
            "test_coverage": 0.0,
            "maintainability_index": 45
          },
          "markdown_anchor": {
            "id": "api-routes-chat",
            "title": "Module: api.routes.chat",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.routes.chat](#api-routes-chat)",
            "html_anchor": "<a id=\"api-routes-chat\"></a>"
          }
        },
        {
          "module_id": "api.routes.continue_adapter",
          "path": "api/routes/continue_adapter.py",
          "category": "core",
          "module_doc": "Continue API Adapter\n\nTranslates Continue extension requests to LLMStruct chat API format",
          "functions": [
            {
              "name": "continue_chat_completion",
              "docstring": "Continue-compatible chat completion endpoint\nTranslates Continue requests to our LLMStruct format",
              "line_range": [
                59,
                129
              ],
              "parameters": [
                "request",
                "api_key"
              ],
              "decorators": [
                "router.post('/v1/chat/completions')"
              ],
              "uid": "api.routes.continue_adapter.continue_chat_completion",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.continue_adapter",
                "api.routes.continue_adapter.continue_chat_completion"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Continue-compatible chat completion endpoint",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:59.155200",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "continue_models",
              "docstring": "List available models for Continue",
              "line_range": [
                132,
                158
              ],
              "parameters": [
                "api_key"
              ],
              "decorators": [
                "router.get('/v1/models')"
              ],
              "uid": "api.routes.continue_adapter.continue_models",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.continue_adapter",
                "api.routes.continue_adapter.continue_models"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "List available models for Continue",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:59.155216",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "continue_embeddings",
              "docstring": "Embeddings endpoint for Continue (placeholder)",
              "line_range": [
                161,
                193
              ],
              "parameters": [
                "request",
                "api_key"
              ],
              "decorators": [
                "router.post('/v1/embeddings')"
              ],
              "uid": "api.routes.continue_adapter.continue_embeddings",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.continue_adapter",
                "api.routes.continue_adapter.continue_embeddings"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Embeddings endpoint for Continue (placeholder)",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:59.155229",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                25,
                35
              ],
              "parameters": [
                "self",
                "messages",
                "model",
                "temperature",
                "max_tokens",
                "stream"
              ],
              "decorators": [],
              "uid": "api.routes.continue_adapter.__init__",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.continue_adapter",
                "api.routes.continue_adapter.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes a model for generating text based on input messages and specified parameters.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:59.857548",
                  "confidence": 0.7,
                  "cache_key": "831c971c"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                39,
                56
              ],
              "parameters": [
                "self",
                "content",
                "model"
              ],
              "decorators": [],
              "uid": "api.routes.continue_adapter.__init__",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.continue_adapter",
                "api.routes.continue_adapter.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes a new instance of a class with specified content and model parameters.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:00.963120",
                  "confidence": 0.7,
                  "cache_key": "084ba4ea"
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "ContinueRequest",
              "docstring": "Continue API request format",
              "line_range": [
                23,
                35
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    25,
                    35
                  ],
                  "parameters": [
                    "self",
                    "messages",
                    "model",
                    "temperature",
                    "max_tokens",
                    "stream"
                  ],
                  "uid": "api.routes.continue_adapter.ContinueRequest.__init__",
                  "uid_components": [
                    "api",
                    "api.routes",
                    "api.routes.continue_adapter",
                    "api.routes.continue_adapter.ContinueRequest",
                    "api.routes.continue_adapter.ContinueRequest.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes a model for generating text based on input messages and specified parameters.\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:20:01.470942",
                      "confidence": 0.7,
                      "cache_key": "7c2a5a93"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "api.routes.continue_adapter.ContinueRequest",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.continue_adapter",
                "api.routes.continue_adapter.ContinueRequest"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Continue API request format",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:00.963181",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ContinueResponse",
              "docstring": "Continue API response format (OpenAI-compatible)",
              "line_range": [
                37,
                56
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    39,
                    56
                  ],
                  "parameters": [
                    "self",
                    "content",
                    "model"
                  ],
                  "uid": "api.routes.continue_adapter.ContinueResponse.__init__",
                  "uid_components": [
                    "api",
                    "api.routes",
                    "api.routes.continue_adapter",
                    "api.routes.continue_adapter.ContinueResponse",
                    "api.routes.continue_adapter.ContinueResponse.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes a new instance of the class with specified content and model parameters.\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:20:02.055285",
                      "confidence": 0.7,
                      "cache_key": "c3ae6e6b"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "api.routes.continue_adapter.ContinueResponse",
              "uid_components": [
                "api",
                "api.routes",
                "api.routes.continue_adapter",
                "api.routes.continue_adapter.ContinueResponse"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Continue API response format (OpenAI-compatible)",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:01.470997",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "datetime.now",
              "int",
              "content.split",
              "len"
            ],
            "continue_chat_completion": [
              "logger.error",
              "request_data.get",
              "len",
              "Depends",
              "logger.info",
              "ContinueResponse",
              "HTTPException",
              "reversed",
              "datetime.now",
              "llm_service.process_message",
              "router.post",
              "msg.get",
              "str",
              "request.json"
            ],
            "continue_models": [
              "Depends",
              "int",
              "router.get",
              "datetime.now"
            ],
            "continue_embeddings": [
              "logger.error",
              "request_data.get",
              "len",
              "input_text.split",
              "Depends",
              "HTTPException",
              "router.post",
              "str",
              "request.json"
            ]
          },
          "dependencies": [
            "APIRouter",
            "Any",
            "ChatMessage",
            "ChatResponse",
            "Depends",
            "Dict",
            "HTTPException",
            "LLMService",
            "List",
            "Optional",
            "Request",
            "datetime",
            "fastapi",
            "get_api_key",
            "logging",
            "middleware.auth",
            "models.requests",
            "models.responses",
            "services.llm_service",
            "typing"
          ],
          "hash": null,
          "uid": "api.routes.continue_adapter",
          "uid_components": [
            "api",
            "api.routes",
            "api.routes.continue_adapter"
          ],
          "uid_type": "module",
          "artifact_id": "9f9ae652-58ea-a28f-e252-eb60670cb8c0",
          "smart_summary": {
            "summary": "Continue API Adapter",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:59.155176",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 9,
            "lines_of_code": 50,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 20,
            "test_coverage": 0.0,
            "maintainability_index": 55
          },
          "markdown_anchor": {
            "id": "api-routes-continue_adapter",
            "title": "Module: api.routes.continue_adapter",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.routes.continue_adapter](#api-routes-continue_adapter)",
            "html_anchor": "<a id=\"api-routes-continue_adapter\"></a>"
          }
        }
      ],
      "middleware": [
        {
          "module_id": "api.middleware.__init__",
          "path": "api/middleware/__init__.py",
          "category": "cli",
          "module_doc": "Middleware package for LLMStruct FastAPI\n\nContains authentication, logging, and other middleware.",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [],
          "hash": null,
          "uid": "api.middleware.__init__",
          "uid_components": [
            "api",
            "api.middleware",
            "api.middleware.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "7731b3fd-507c-2cac-f6ae-59a0a1a17dae",
          "smart_summary": {
            "summary": "Middleware package for LLMStruct FastAPI",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:02.055337",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 0,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "api-middleware-__init__",
            "title": "Module: api.middleware.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.middleware.__init__](#api-middleware-__init__)",
            "html_anchor": "<a id=\"api-middleware-__init__\"></a>"
          }
        },
        {
          "module_id": "api.middleware.logging",
          "path": "api/middleware/logging.py",
          "category": "core",
          "module_doc": "Logging middleware for LLMStruct FastAPI",
          "functions": [
            {
              "name": "request_logging_middleware",
              "docstring": "Request and response logging middleware",
              "line_range": [
                14,
                72
              ],
              "parameters": [
                "request",
                "call_next"
              ],
              "decorators": [],
              "uid": "api.middleware.logging.request_logging_middleware",
              "uid_components": [
                "api",
                "api.middleware",
                "api.middleware.logging",
                "api.middleware.logging.request_logging_middleware"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Request and response logging middleware",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:02.055393",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "request_logging_middleware": [
              "call_next",
              "logger.error",
              "getattr",
              "logger.info",
              "time.time",
              "uuid.uuid4",
              "str"
            ]
          },
          "dependencies": [
            "Callable",
            "Request",
            "fastapi",
            "logging",
            "time",
            "typing",
            "uuid"
          ],
          "hash": null,
          "uid": "api.middleware.logging",
          "uid_components": [
            "api",
            "api.middleware",
            "api.middleware.logging"
          ],
          "uid_type": "module",
          "artifact_id": "32aa4c95-9c32-ac22-1c0e-cc12db39cb58",
          "smart_summary": {
            "summary": "Logging middleware for LLMStruct FastAPI",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:02.055367",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 7,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "api-middleware-logging",
            "title": "Module: api.middleware.logging",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.middleware.logging](#api-middleware-logging)",
            "html_anchor": "<a id=\"api-middleware-logging\"></a>"
          }
        }
      ],
      "services": [
        {
          "module_id": "api.services.llm_service",
          "path": "api/services/llm_service.py",
          "category": "core",
          "module_doc": "LLM Service\n\nIntegrates with existing LLM models and context orchestration",
          "functions": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                24,
                28
              ],
              "parameters": [
                "self",
                "content",
                "context_info",
                "token_usage"
              ],
              "decorators": [],
              "uid": "api.services.llm_service.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes object with content, context information, and token usage parameters.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:02.683943",
                  "confidence": 0.7,
                  "cache_key": "4f43f72c"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                33,
                36
              ],
              "parameters": [
                "self",
                "api_key"
              ],
              "decorators": [],
              "uid": "api.services.llm_service.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes class instance with provided API key for further operations\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:03.171989",
                  "confidence": 0.7,
                  "cache_key": "22a73030"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "chat_completion",
              "docstring": "Send chat completion request to Anthropic",
              "line_range": [
                38,
                77
              ],
              "parameters": [
                "self",
                "messages",
                "temperature"
              ],
              "decorators": [],
              "uid": "api.services.llm_service.chat_completion",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.chat_completion"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Send chat completion request to Anthropic",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:03.172037",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                82,
                85
              ],
              "parameters": [
                "self",
                "api_key"
              ],
              "decorators": [],
              "uid": "api.services.llm_service.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes object with API key for authentication and access control.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:08.809553",
                  "confidence": 0.7,
                  "cache_key": "6dec3c86"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "chat_completion",
              "docstring": "Send chat completion request to Grok",
              "line_range": [
                87,
                113
              ],
              "parameters": [
                "self",
                "messages",
                "temperature"
              ],
              "decorators": [],
              "uid": "api.services.llm_service.chat_completion",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.chat_completion"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Send chat completion request to Grok",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:08.809593",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                118,
                124
              ],
              "parameters": [
                "self",
                "base_path"
              ],
              "decorators": [],
              "uid": "api.services.llm_service.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes an object with a specified base path for file operations\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:09.343796",
                  "confidence": 0.7,
                  "cache_key": "b1aa622c"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_initialize_components",
              "docstring": "Initialize context orchestrator and copilot manager",
              "line_range": [
                126,
                140
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "api.services.llm_service._initialize_components",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service._initialize_components"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize context orchestrator and copilot manager",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343838",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            },
            {
              "name": "process_message",
              "docstring": "Process a user message and return AI response",
              "line_range": [
                143,
                168
              ],
              "parameters": [
                "self",
                "message",
                "session_id",
                "context_mode"
              ],
              "decorators": [],
              "uid": "api.services.llm_service.process_message",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.process_message"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Process a user message and return AI response",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343855",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            },
            {
              "name": "_try_llm_providers",
              "docstring": "Try LLM providers in order and return response",
              "line_range": [
                170,
                195
              ],
              "parameters": [
                "self",
                "message",
                "context_info"
              ],
              "decorators": [],
              "uid": "api.services.llm_service._try_llm_providers",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service._try_llm_providers"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Try LLM providers in order and return response",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343869",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_get_context",
              "docstring": "Get relevant context for the message",
              "line_range": [
                197,
                229
              ],
              "parameters": [
                "self",
                "message",
                "context_mode"
              ],
              "decorators": [],
              "uid": "api.services.llm_service._get_context",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service._get_context"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get relevant context for the message",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343881",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_get_full_context",
              "docstring": "Get full project context",
              "line_range": [
                231,
                243
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "api.services.llm_service._get_full_context",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service._get_full_context"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get full project context",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343892",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_get_focused_context",
              "docstring": "Get focused context based on message content",
              "line_range": [
                245,
                260
              ],
              "parameters": [
                "self",
                "message"
              ],
              "decorators": [],
              "uid": "api.services.llm_service._get_focused_context",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service._get_focused_context"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get focused context based on message content",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343904",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_get_minimal_context",
              "docstring": "Get minimal context - basic project info",
              "line_range": [
                262,
                267
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "api.services.llm_service._get_minimal_context",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service._get_minimal_context"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get minimal context - basic project info",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343915",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_generate_grok_response",
              "docstring": "Generate response using Grok API",
              "line_range": [
                269,
                287
              ],
              "parameters": [
                "self",
                "message",
                "context_info"
              ],
              "decorators": [],
              "uid": "api.services.llm_service._generate_grok_response",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service._generate_grok_response"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate response using Grok API",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343927",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "_generate_anthropic_response",
              "docstring": "Generate response using Anthropic API",
              "line_range": [
                289,
                307
              ],
              "parameters": [
                "self",
                "message",
                "context_info"
              ],
              "decorators": [],
              "uid": "api.services.llm_service._generate_anthropic_response",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service._generate_anthropic_response"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate response using Anthropic API",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343938",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "_build_system_prompt",
              "docstring": "Build system prompt with project context",
              "line_range": [
                309,
                344
              ],
              "parameters": [
                "self",
                "context_info"
              ],
              "decorators": [],
              "uid": "api.services.llm_service._build_system_prompt",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service._build_system_prompt"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Build system prompt with project context",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343950",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_generate_mock_response",
              "docstring": "Generate a mock AI response (placeholder for real LLM)",
              "line_range": [
                346,
                380
              ],
              "parameters": [
                "self",
                "message",
                "context_info"
              ],
              "decorators": [],
              "uid": "api.services.llm_service._generate_mock_response",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service._generate_mock_response"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate a mock AI response (placeholder for real LLM)",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343962",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "LLMResponse",
              "docstring": "Response from LLM processing",
              "line_range": [
                21,
                28
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    24,
                    28
                  ],
                  "parameters": [
                    "self",
                    "content",
                    "context_info",
                    "token_usage"
                  ],
                  "uid": "api.services.llm_service.LLMResponse.__init__",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMResponse",
                    "api.services.llm_service.LLMResponse.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes an object with specified content, context information, and token usage\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:20:09.845803",
                      "confidence": 0.7,
                      "cache_key": "39c6afba"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "api.services.llm_service.LLMResponse",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMResponse"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Response from LLM processing",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.343974",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "AnthropicClient",
              "docstring": "Client for Anthropic Claude API",
              "line_range": [
                30,
                77
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    33,
                    36
                  ],
                  "parameters": [
                    "self",
                    "api_key"
                  ],
                  "uid": "api.services.llm_service.AnthropicClient.__init__",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.AnthropicClient",
                    "api.services.llm_service.AnthropicClient.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes an object with the provided API key for authentication\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:20:10.650276",
                      "confidence": 0.7,
                      "cache_key": "7aa32c66"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "chat_completion",
                  "docstring": "Send chat completion request to Anthropic",
                  "line_range": [
                    38,
                    77
                  ],
                  "parameters": [
                    "self",
                    "messages",
                    "temperature"
                  ],
                  "uid": "api.services.llm_service.AnthropicClient.chat_completion",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.AnthropicClient",
                    "api.services.llm_service.AnthropicClient.chat_completion"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Send chat completion request to Anthropic",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:10.650325",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "api.services.llm_service.AnthropicClient",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.AnthropicClient"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Client for Anthropic Claude API",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:09.845843",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "GrokClient",
              "docstring": "Client for Grok API integration",
              "line_range": [
                79,
                113
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    82,
                    85
                  ],
                  "parameters": [
                    "self",
                    "api_key"
                  ],
                  "uid": "api.services.llm_service.GrokClient.__init__",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.GrokClient",
                    "api.services.llm_service.GrokClient.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes an object with an API key for authentication and access control.\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:20:11.223094",
                      "confidence": 0.7,
                      "cache_key": "e3af9569"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "chat_completion",
                  "docstring": "Send chat completion request to Grok",
                  "line_range": [
                    87,
                    113
                  ],
                  "parameters": [
                    "self",
                    "messages",
                    "temperature"
                  ],
                  "uid": "api.services.llm_service.GrokClient.chat_completion",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.GrokClient",
                    "api.services.llm_service.GrokClient.chat_completion"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Send chat completion request to Grok",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:11.223260",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "api.services.llm_service.GrokClient",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.GrokClient"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Client for Grok API integration",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:10.650347",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "LLMService",
              "docstring": "Service for LLM processing with context integration",
              "line_range": [
                115,
                380
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    118,
                    124
                  ],
                  "parameters": [
                    "self",
                    "base_path"
                  ],
                  "uid": "api.services.llm_service.LLMService.__init__",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes an object with a specified base path for file operations\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:20:12.151776",
                      "confidence": 0.7,
                      "cache_key": "2fc33b94"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_initialize_components",
                  "docstring": "Initialize context orchestrator and copilot manager",
                  "line_range": [
                    126,
                    140
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "api.services.llm_service.LLMService._initialize_components",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService._initialize_components"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize context orchestrator and copilot manager",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.151965",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "management"
                    ]
                  }
                },
                {
                  "name": "process_message",
                  "docstring": "Process a user message and return AI response",
                  "line_range": [
                    143,
                    168
                  ],
                  "parameters": [
                    "self",
                    "message",
                    "session_id",
                    "context_mode"
                  ],
                  "uid": "api.services.llm_service.LLMService.process_message",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService.process_message"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Process a user message and return AI response",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.152057",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "processing"
                    ]
                  }
                },
                {
                  "name": "_try_llm_providers",
                  "docstring": "Try LLM providers in order and return response",
                  "line_range": [
                    170,
                    195
                  ],
                  "parameters": [
                    "self",
                    "message",
                    "context_info"
                  ],
                  "uid": "api.services.llm_service.LLMService._try_llm_providers",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService._try_llm_providers"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Try LLM providers in order and return response",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.152164",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_get_context",
                  "docstring": "Get relevant context for the message",
                  "line_range": [
                    197,
                    229
                  ],
                  "parameters": [
                    "self",
                    "message",
                    "context_mode"
                  ],
                  "uid": "api.services.llm_service.LLMService._get_context",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService._get_context"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get relevant context for the message",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.152309",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_get_full_context",
                  "docstring": "Get full project context",
                  "line_range": [
                    231,
                    243
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "api.services.llm_service.LLMService._get_full_context",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService._get_full_context"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get full project context",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.152443",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_get_focused_context",
                  "docstring": "Get focused context based on message content",
                  "line_range": [
                    245,
                    260
                  ],
                  "parameters": [
                    "self",
                    "message"
                  ],
                  "uid": "api.services.llm_service.LLMService._get_focused_context",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService._get_focused_context"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get focused context based on message content",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.152604",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_get_minimal_context",
                  "docstring": "Get minimal context - basic project info",
                  "line_range": [
                    262,
                    267
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "api.services.llm_service.LLMService._get_minimal_context",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService._get_minimal_context"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get minimal context - basic project info",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.152677",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_generate_grok_response",
                  "docstring": "Generate response using Grok API",
                  "line_range": [
                    269,
                    287
                  ],
                  "parameters": [
                    "self",
                    "message",
                    "context_info"
                  ],
                  "uid": "api.services.llm_service.LLMService._generate_grok_response",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService._generate_grok_response"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate response using Grok API",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.152734",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "_generate_anthropic_response",
                  "docstring": "Generate response using Anthropic API",
                  "line_range": [
                    289,
                    307
                  ],
                  "parameters": [
                    "self",
                    "message",
                    "context_info"
                  ],
                  "uid": "api.services.llm_service.LLMService._generate_anthropic_response",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService._generate_anthropic_response"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate response using Anthropic API",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.152791",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "_build_system_prompt",
                  "docstring": "Build system prompt with project context",
                  "line_range": [
                    309,
                    344
                  ],
                  "parameters": [
                    "self",
                    "context_info"
                  ],
                  "uid": "api.services.llm_service.LLMService._build_system_prompt",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService._build_system_prompt"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Build system prompt with project context",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.152843",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_generate_mock_response",
                  "docstring": "Generate a mock AI response (placeholder for real LLM)",
                  "line_range": [
                    346,
                    380
                  ],
                  "parameters": [
                    "self",
                    "message",
                    "context_info"
                  ],
                  "uid": "api.services.llm_service.LLMService._generate_mock_response",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.llm_service",
                    "api.services.llm_service.LLMService",
                    "api.services.llm_service.LLMService._generate_mock_response"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate a mock AI response (placeholder for real LLM)",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:12.152895",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "api.services.llm_service.LLMService",
              "uid_components": [
                "api",
                "api.services",
                "api.services.llm_service",
                "api.services.llm_service.LLMService"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Service for LLM processing with context integration",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:11.223358",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "GrokClient",
              "Path.cwd",
              "AnthropicClient",
              "self._initialize_components"
            ],
            "chat_completion": [
              "response.json",
              "ValueError",
              "client.post",
              "httpx.AsyncClient",
              "response.raise_for_status"
            ],
            "_initialize_components": [
              "logger.error",
              "logger.info",
              "CopilotContextManager",
              "SmartContextOrchestrator",
              "str"
            ],
            "process_message": [
              "logger.error",
              "self._try_llm_providers",
              "self._get_context",
              "LLMResponse",
              "str"
            ],
            "_try_llm_providers": [
              "logger.warning",
              "len",
              "logger.info",
              "self._generate_grok_response",
              "self._generate_mock_response",
              "self._generate_anthropic_response"
            ],
            "_get_context": [
              "logger.error",
              "context_info.update",
              "self._get_focused_context",
              "self._get_minimal_context",
              "self._get_full_context",
              "str"
            ],
            "_get_full_context": [
              "list",
              "len",
              "struct_data.get",
              "struct_file.exists",
              "open",
              "json.load"
            ],
            "_get_focused_context": [
              "any",
              "message.lower"
            ],
            "_get_minimal_context": [
              "datetime.now",
              "str"
            ],
            "_generate_grok_response": [
              "ValueError",
              "len",
              "self._build_system_prompt"
            ],
            "_generate_anthropic_response": [
              "ValueError",
              "len",
              "self._build_system_prompt"
            ],
            "_build_system_prompt": [
              "context_info.get"
            ],
            "_generate_mock_response": [
              "len",
              "context_info.get",
              "message.lower"
            ]
          },
          "dependencies": [
            "Any",
            "CopilotContextManager",
            "Dict",
            "List",
            "Optional",
            "Path",
            "SmartContextOrchestrator",
            "asyncio",
            "context_orchestrator",
            "copilot",
            "datetime",
            "httpx",
            "json",
            "logging",
            "os",
            "pathlib",
            "typing"
          ],
          "hash": null,
          "uid": "api.services.llm_service",
          "uid_components": [
            "api",
            "api.services",
            "api.services.llm_service"
          ],
          "uid_type": "module",
          "artifact_id": "28585c00-d499-1e0e-4fc3-c527545a3bbc",
          "smart_summary": {
            "summary": "LLM Service",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:02.055419",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 25,
            "lines_of_code": 170,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 17,
            "test_coverage": 0.0,
            "maintainability_index": 0
          },
          "markdown_anchor": {
            "id": "api-services-llm_service",
            "title": "Module: api.services.llm_service",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.services.llm_service](#api-services-llm_service)",
            "html_anchor": "<a id=\"api-services-llm_service\"></a>"
          }
        },
        {
          "module_id": "api.services.__init__",
          "path": "api/services/__init__.py",
          "category": "cli",
          "module_doc": "Services package for LLMStruct FastAPI\n\nContains business logic and integration services.",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [],
          "hash": null,
          "uid": "api.services.__init__",
          "uid_components": [
            "api",
            "api.services",
            "api.services.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "2098fa1a-1880-cdd9-84be-8b4c4b77b089",
          "smart_summary": {
            "summary": "Services package for LLMStruct FastAPI",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:12.152955",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 0,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "api-services-__init__",
            "title": "Module: api.services.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.services.__init__](#api-services-__init__)",
            "html_anchor": "<a id=\"api-services-__init__\"></a>"
          }
        },
        {
          "module_id": "api.services.cli_bridge",
          "path": "api/services/cli_bridge.py",
          "category": "core",
          "module_doc": "CLI Bridge Service\n\nProvides async integration between FastAPI and existing LLMStruct CLI functionality.",
          "functions": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                29,
                33
              ],
              "parameters": [
                "self",
                "base_path"
              ],
              "decorators": [],
              "uid": "api.services.cli_bridge.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes object with specified base path for file operations\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:13.435929",
                  "confidence": 0.7,
                  "cache_key": "c98cad96"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_get_python_command",
              "docstring": "Determine the best Python command to use",
              "line_range": [
                35,
                40
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "api.services.cli_bridge._get_python_command",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge._get_python_command"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Determine the best Python command to use",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:13.435970",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "scan_project",
              "docstring": "Execute project scan via CLI",
              "line_range": [
                42,
                87
              ],
              "parameters": [
                "self",
                "options"
              ],
              "decorators": [],
              "uid": "api.services.cli_bridge.scan_project",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.scan_project"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Execute project scan via CLI",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:13.435987",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_context",
              "docstring": "Get project context in specified mode",
              "line_range": [
                89,
                98
              ],
              "parameters": [
                "self",
                "mode",
                "include_files"
              ],
              "decorators": [],
              "uid": "api.services.cli_bridge.get_context",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.get_context"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get project context in specified mode",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:13.436001",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_project_info",
              "docstring": "Get basic project information",
              "line_range": [
                100,
                104
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "api.services.cli_bridge.get_project_info",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.get_project_info"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get basic project information",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:13.436013",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "validate_json",
              "docstring": "Validate JSON structure",
              "line_range": [
                106,
                110
              ],
              "parameters": [
                "self",
                "json_path"
              ],
              "decorators": [],
              "uid": "api.services.cli_bridge.validate_json",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.validate_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Validate JSON structure",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:13.436025",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "health_check",
              "docstring": "Check CLI health and availability",
              "line_range": [
                112,
                128
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "api.services.cli_bridge.health_check",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.health_check"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Check CLI health and availability",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:13.436038",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "_run_command",
              "docstring": "Run CLI command asynchronously",
              "line_range": [
                130,
                161
              ],
              "parameters": [
                "self",
                "cmd",
                "timeout"
              ],
              "decorators": [],
              "uid": "api.services.cli_bridge._run_command",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge._run_command"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Run CLI command asynchronously",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:13.436049",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_parse_cli_output",
              "docstring": "Parse CLI JSON output",
              "line_range": [
                163,
                176
              ],
              "parameters": [
                "self",
                "output"
              ],
              "decorators": [],
              "uid": "api.services.cli_bridge._parse_cli_output",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge._parse_cli_output"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Parse CLI JSON output",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:13.436061",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "CLIBridgeError",
              "docstring": "CLI Bridge specific errors",
              "line_range": [
                21,
                23
              ],
              "methods": [],
              "bases": [
                "Exception"
              ],
              "uid": "api.services.cli_bridge.CLIBridgeError",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridgeError"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "CLI Bridge specific errors",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:13.436074",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "CLIBridge",
              "docstring": "Bridge between FastAPI and existing CLI functionality",
              "line_range": [
                26,
                176
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    29,
                    33
                  ],
                  "parameters": [
                    "self",
                    "base_path"
                  ],
                  "uid": "api.services.cli_bridge.CLIBridge.__init__",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.cli_bridge",
                    "api.services.cli_bridge.CLIBridge",
                    "api.services.cli_bridge.CLIBridge.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes class instance with specified base path for file operations.\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:20:14.028536",
                      "confidence": 0.7,
                      "cache_key": "1868a5b4"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_get_python_command",
                  "docstring": "Determine the best Python command to use",
                  "line_range": [
                    35,
                    40
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "api.services.cli_bridge.CLIBridge._get_python_command",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.cli_bridge",
                    "api.services.cli_bridge.CLIBridge",
                    "api.services.cli_bridge.CLIBridge._get_python_command"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Determine the best Python command to use",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:14.028578",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "scan_project",
                  "docstring": "Execute project scan via CLI",
                  "line_range": [
                    42,
                    87
                  ],
                  "parameters": [
                    "self",
                    "options"
                  ],
                  "uid": "api.services.cli_bridge.CLIBridge.scan_project",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.cli_bridge",
                    "api.services.cli_bridge.CLIBridge",
                    "api.services.cli_bridge.CLIBridge.scan_project"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Execute project scan via CLI",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:14.028595",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_context",
                  "docstring": "Get project context in specified mode",
                  "line_range": [
                    89,
                    98
                  ],
                  "parameters": [
                    "self",
                    "mode",
                    "include_files"
                  ],
                  "uid": "api.services.cli_bridge.CLIBridge.get_context",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.cli_bridge",
                    "api.services.cli_bridge.CLIBridge",
                    "api.services.cli_bridge.CLIBridge.get_context"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get project context in specified mode",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:14.028609",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_project_info",
                  "docstring": "Get basic project information",
                  "line_range": [
                    100,
                    104
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "api.services.cli_bridge.CLIBridge.get_project_info",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.cli_bridge",
                    "api.services.cli_bridge.CLIBridge",
                    "api.services.cli_bridge.CLIBridge.get_project_info"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get basic project information",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:14.028622",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "validate_json",
                  "docstring": "Validate JSON structure",
                  "line_range": [
                    106,
                    110
                  ],
                  "parameters": [
                    "self",
                    "json_path"
                  ],
                  "uid": "api.services.cli_bridge.CLIBridge.validate_json",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.cli_bridge",
                    "api.services.cli_bridge.CLIBridge",
                    "api.services.cli_bridge.CLIBridge.validate_json"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Validate JSON structure",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:14.028634",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "health_check",
                  "docstring": "Check CLI health and availability",
                  "line_range": [
                    112,
                    128
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "api.services.cli_bridge.CLIBridge.health_check",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.cli_bridge",
                    "api.services.cli_bridge.CLIBridge",
                    "api.services.cli_bridge.CLIBridge.health_check"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Check CLI health and availability",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:14.028646",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "_run_command",
                  "docstring": "Run CLI command asynchronously",
                  "line_range": [
                    130,
                    161
                  ],
                  "parameters": [
                    "self",
                    "cmd",
                    "timeout"
                  ],
                  "uid": "api.services.cli_bridge.CLIBridge._run_command",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.cli_bridge",
                    "api.services.cli_bridge.CLIBridge",
                    "api.services.cli_bridge.CLIBridge._run_command"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Run CLI command asynchronously",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:14.028658",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_parse_cli_output",
                  "docstring": "Parse CLI JSON output",
                  "line_range": [
                    163,
                    176
                  ],
                  "parameters": [
                    "self",
                    "output"
                  ],
                  "uid": "api.services.cli_bridge.CLIBridge._parse_cli_output",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.cli_bridge",
                    "api.services.cli_bridge.CLIBridge",
                    "api.services.cli_bridge.CLIBridge._parse_cli_output"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Parse CLI JSON output",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:14.028670",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "processing"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "api.services.cli_bridge.CLIBridge",
              "uid_components": [
                "api",
                "api.services",
                "api.services.cli_bridge",
                "api.services.cli_bridge.CLIBridge"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Bridge between FastAPI and existing CLI functionality",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:13.436085",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "self._get_python_command",
              "Path.cwd"
            ],
            "_get_python_command": [
              "venv_python.exists",
              "str"
            ],
            "scan_project": [
              "logger.error",
              "options.get",
              "self._parse_cli_output",
              "open",
              "self._run_command",
              "cmd.extend",
              "os.close",
              "os.unlink",
              "cmd.append",
              "json.load",
              "tempfile.mkstemp"
            ],
            "get_context": [
              "self._parse_cli_output",
              "cmd.extend",
              "self._run_command"
            ],
            "get_project_info": [
              "self._parse_cli_output",
              "self._run_command"
            ],
            "validate_json": [
              "self._parse_cli_output",
              "self._run_command"
            ],
            "health_check": [
              "str",
              "self._run_command"
            ],
            "_run_command": [
              "logger.error",
              "asyncio.create_subprocess_exec",
              "CLIBridgeError",
              "process.communicate",
              "logger.info",
              "stdout.decode",
              "asyncio.wait_for",
              "str",
              "stderr.decode"
            ],
            "_parse_cli_output": [
              "output.strip",
              "json.loads"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "List",
            "Optional",
            "Path",
            "asyncio",
            "config",
            "json",
            "logging",
            "os",
            "pathlib",
            "settings",
            "subprocess",
            "tempfile",
            "typing"
          ],
          "hash": null,
          "uid": "api.services.cli_bridge",
          "uid_components": [
            "api",
            "api.services",
            "api.services.cli_bridge"
          ],
          "uid_type": "module",
          "artifact_id": "abfd4670-5ee5-a7b2-a042-ef3e6ae58d8f",
          "smart_summary": {
            "summary": "CLI Bridge Service",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:12.153014",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 13,
            "lines_of_code": 90,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 15,
            "test_coverage": 0.0,
            "maintainability_index": 35
          },
          "markdown_anchor": {
            "id": "api-services-cli_bridge",
            "title": "Module: api.services.cli_bridge",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.services.cli_bridge](#api-services-cli_bridge)",
            "html_anchor": "<a id=\"api-services-cli_bridge\"></a>"
          }
        },
        {
          "module_id": "api.services.chat_session",
          "path": "api/services/chat_session.py",
          "category": "core",
          "module_doc": "Chat Session Manager\n\nManages persistent chat sessions and conversation history",
          "functions": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                19,
                24
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes a new session with the specified session ID\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:14.508593",
                  "confidence": 0.7,
                  "cache_key": "bc83c6fe"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "add_message",
              "docstring": "Add a message to the session",
              "line_range": [
                26,
                36
              ],
              "parameters": [
                "self",
                "role",
                "content",
                "metadata"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.add_message",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.add_message"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Add a message to the session",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.508632",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_messages",
              "docstring": "Get messages from session, optionally limited",
              "line_range": [
                38,
                42
              ],
              "parameters": [
                "self",
                "limit"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.get_messages",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.get_messages"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get messages from session, optionally limited",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.508649",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_context_string",
              "docstring": "Get recent messages as context string",
              "line_range": [
                44,
                54
              ],
              "parameters": [
                "self",
                "limit"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.get_context_string",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.get_context_string"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get recent messages as context string",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.508663",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "to_dict",
              "docstring": "Convert session to dictionary",
              "line_range": [
                56,
                65
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.to_dict",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.to_dict"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Convert session to dictionary",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.508676",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                70,
                73
              ],
              "parameters": [
                "self",
                "storage_path"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.__init__",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes object with specified storage path for data manipulation\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:14.994351",
                  "confidence": 0.7,
                  "cache_key": "ab25779c"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_or_create_session",
              "docstring": "Get existing session or create new one",
              "line_range": [
                75,
                87
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.get_or_create_session",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.get_or_create_session"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get existing session or create new one",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.994390",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "get_session",
              "docstring": "Get session by ID",
              "line_range": [
                89,
                101
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.get_session",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.get_session"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get session by ID",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.994408",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "add_message",
              "docstring": "Add message to session",
              "line_range": [
                103,
                109
              ],
              "parameters": [
                "self",
                "session_id",
                "role",
                "content",
                "metadata"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.add_message",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.add_message"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Add message to session",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.994421",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "list_sessions",
              "docstring": "List all sessions with summary info",
              "line_range": [
                111,
                138
              ],
              "parameters": [
                "self",
                "limit"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.list_sessions",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.list_sessions"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "List all sessions with summary info",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.994433",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "delete_session",
              "docstring": "Delete a session",
              "line_range": [
                140,
                152
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.delete_session",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.delete_session"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Delete a session",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.994444",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_load_session",
              "docstring": "Load session from storage",
              "line_range": [
                154,
                167
              ],
              "parameters": [
                "self",
                "session_id"
              ],
              "decorators": [],
              "uid": "api.services.chat_session._load_session",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session._load_session"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Load session from storage",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.994456",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_save_session",
              "docstring": "Save session to storage",
              "line_range": [
                169,
                178
              ],
              "parameters": [
                "self",
                "session"
              ],
              "decorators": [],
              "uid": "api.services.chat_session._save_session",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session._save_session"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Save session to storage",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.994467",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cleanup_old_sessions",
              "docstring": "Clean up sessions older than specified days",
              "line_range": [
                180,
                183
              ],
              "parameters": [
                "self",
                "days"
              ],
              "decorators": [],
              "uid": "api.services.chat_session.cleanup_old_sessions",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.cleanup_old_sessions"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Clean up sessions older than specified days",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.994484",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "ChatSession",
              "docstring": "Represents a chat session with history",
              "line_range": [
                16,
                65
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    19,
                    24
                  ],
                  "parameters": [
                    "self",
                    "session_id"
                  ],
                  "uid": "api.services.chat_session.ChatSession.__init__",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSession",
                    "api.services.chat_session.ChatSession.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes a new session with the specified session ID for further processing\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:20:15.517420",
                      "confidence": 0.7,
                      "cache_key": "4ad7d206"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "add_message",
                  "docstring": "Add a message to the session",
                  "line_range": [
                    26,
                    36
                  ],
                  "parameters": [
                    "self",
                    "role",
                    "content",
                    "metadata"
                  ],
                  "uid": "api.services.chat_session.ChatSession.add_message",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSession",
                    "api.services.chat_session.ChatSession.add_message"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Add a message to the session",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:15.517473",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_messages",
                  "docstring": "Get messages from session, optionally limited",
                  "line_range": [
                    38,
                    42
                  ],
                  "parameters": [
                    "self",
                    "limit"
                  ],
                  "uid": "api.services.chat_session.ChatSession.get_messages",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSession",
                    "api.services.chat_session.ChatSession.get_messages"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get messages from session, optionally limited",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:15.517499",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_context_string",
                  "docstring": "Get recent messages as context string",
                  "line_range": [
                    44,
                    54
                  ],
                  "parameters": [
                    "self",
                    "limit"
                  ],
                  "uid": "api.services.chat_session.ChatSession.get_context_string",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSession",
                    "api.services.chat_session.ChatSession.get_context_string"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get recent messages as context string",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:15.517520",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "to_dict",
                  "docstring": "Convert session to dictionary",
                  "line_range": [
                    56,
                    65
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "api.services.chat_session.ChatSession.to_dict",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSession",
                    "api.services.chat_session.ChatSession.to_dict"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Convert session to dictionary",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:15.517538",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "api.services.chat_session.ChatSession",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSession"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Represents a chat session with history",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:14.994498",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ChatSessionManager",
              "docstring": "Manages multiple chat sessions",
              "line_range": [
                67,
                183
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    70,
                    73
                  ],
                  "parameters": [
                    "self",
                    "storage_path"
                  ],
                  "uid": "api.services.chat_session.ChatSessionManager.__init__",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSessionManager",
                    "api.services.chat_session.ChatSessionManager.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes a new instance of the class with a specified storage path\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:20:16.021909",
                      "confidence": 0.7,
                      "cache_key": "bb16dee7"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_or_create_session",
                  "docstring": "Get existing session or create new one",
                  "line_range": [
                    75,
                    87
                  ],
                  "parameters": [
                    "self",
                    "session_id"
                  ],
                  "uid": "api.services.chat_session.ChatSessionManager.get_or_create_session",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSessionManager",
                    "api.services.chat_session.ChatSessionManager.get_or_create_session"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get existing session or create new one",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:16.022049",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "get_session",
                  "docstring": "Get session by ID",
                  "line_range": [
                    89,
                    101
                  ],
                  "parameters": [
                    "self",
                    "session_id"
                  ],
                  "uid": "api.services.chat_session.ChatSessionManager.get_session",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSessionManager",
                    "api.services.chat_session.ChatSessionManager.get_session"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get session by ID",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:16.022127",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "add_message",
                  "docstring": "Add message to session",
                  "line_range": [
                    103,
                    109
                  ],
                  "parameters": [
                    "self",
                    "session_id",
                    "role",
                    "content",
                    "metadata"
                  ],
                  "uid": "api.services.chat_session.ChatSessionManager.add_message",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSessionManager",
                    "api.services.chat_session.ChatSessionManager.add_message"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Add message to session",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:16.022187",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "list_sessions",
                  "docstring": "List all sessions with summary info",
                  "line_range": [
                    111,
                    138
                  ],
                  "parameters": [
                    "self",
                    "limit"
                  ],
                  "uid": "api.services.chat_session.ChatSessionManager.list_sessions",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSessionManager",
                    "api.services.chat_session.ChatSessionManager.list_sessions"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "List all sessions with summary info",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:16.022310",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "delete_session",
                  "docstring": "Delete a session",
                  "line_range": [
                    140,
                    152
                  ],
                  "parameters": [
                    "self",
                    "session_id"
                  ],
                  "uid": "api.services.chat_session.ChatSessionManager.delete_session",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSessionManager",
                    "api.services.chat_session.ChatSessionManager.delete_session"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Delete a session",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:16.022364",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_load_session",
                  "docstring": "Load session from storage",
                  "line_range": [
                    154,
                    167
                  ],
                  "parameters": [
                    "self",
                    "session_id"
                  ],
                  "uid": "api.services.chat_session.ChatSessionManager._load_session",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSessionManager",
                    "api.services.chat_session.ChatSessionManager._load_session"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Load session from storage",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:16.022416",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_save_session",
                  "docstring": "Save session to storage",
                  "line_range": [
                    169,
                    178
                  ],
                  "parameters": [
                    "self",
                    "session"
                  ],
                  "uid": "api.services.chat_session.ChatSessionManager._save_session",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSessionManager",
                    "api.services.chat_session.ChatSessionManager._save_session"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Save session to storage",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:16.022463",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "cleanup_old_sessions",
                  "docstring": "Clean up sessions older than specified days",
                  "line_range": [
                    180,
                    183
                  ],
                  "parameters": [
                    "self",
                    "days"
                  ],
                  "uid": "api.services.chat_session.ChatSessionManager.cleanup_old_sessions",
                  "uid_components": [
                    "api",
                    "api.services",
                    "api.services.chat_session",
                    "api.services.chat_session.ChatSessionManager",
                    "api.services.chat_session.ChatSessionManager.cleanup_old_sessions"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Clean up sessions older than specified days",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:20:16.022530",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "api.services.chat_session.ChatSessionManager",
              "uid_components": [
                "api",
                "api.services",
                "api.services.chat_session",
                "api.services.chat_session.ChatSessionManager"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Manages multiple chat sessions",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:15.517557",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class",
                  "management"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "Path.cwd"
            ],
            "add_message": [
              "session.add_message",
              "self._save_session",
              "self.get_or_create_session"
            ],
            "get_messages": [],
            "get_context_string": [
              "context_parts.append",
              "self.get_messages"
            ],
            "to_dict": [
              "len"
            ],
            "get_or_create_session": [
              "ChatSession",
              "session_file.exists",
              "self._load_session"
            ],
            "get_session": [
              "session_file.exists",
              "self._load_session"
            ],
            "list_sessions": [
              "logger.error",
              "sessions.sort",
              "len",
              "sessions.append",
              "self._load_session"
            ],
            "delete_session": [
              "session_file.unlink",
              "session_file.exists"
            ],
            "_load_session": [
              "open",
              "json.load",
              "ChatSession",
              "data.get"
            ],
            "_save_session": [
              "logger.error",
              "open",
              "json.dump",
              "session.to_dict"
            ],
            "cleanup_old_sessions": []
          },
          "dependencies": [
            "Any",
            "Dict",
            "List",
            "Optional",
            "Path",
            "asyncio",
            "datetime",
            "json",
            "logging",
            "pathlib",
            "typing"
          ],
          "hash": null,
          "uid": "api.services.chat_session",
          "uid_components": [
            "api",
            "api.services",
            "api.services.chat_session"
          ],
          "uid_type": "module",
          "artifact_id": "3c529125-d303-1ce9-d43e-d75e68b73f1b",
          "smart_summary": {
            "summary": "Chat Session Manager",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:14.028685",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module",
              "management"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 18,
            "lines_of_code": 140,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 11,
            "test_coverage": 0.0,
            "maintainability_index": 10
          },
          "markdown_anchor": {
            "id": "api-services-chat_session",
            "title": "Module: api.services.chat_session",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.services.chat_session](#api-services-chat_session)",
            "html_anchor": "<a id=\"api-services-chat_session\"></a>"
          }
        }
      ],
      "models": [
        {
          "module_id": "api.models.requests",
          "path": "api/models/requests.py",
          "category": "core",
          "module_doc": "Request models for LLMStruct FastAPI",
          "functions": [],
          "classes": [
            {
              "name": "ContextMode",
              "docstring": "",
              "line_range": [
                10,
                14
              ],
              "methods": [],
              "bases": [
                "str",
                "Enum"
              ],
              "uid": "api.models.requests.ContextMode",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.ContextMode"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Analyzes contextual information to determine appropriate mode of operation.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:16.661843",
                  "confidence": 0.7,
                  "cache_key": "58a49a73"
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "Priority",
              "docstring": "",
              "line_range": [
                17,
                21
              ],
              "methods": [],
              "bases": [
                "str",
                "Enum"
              ],
              "uid": "api.models.requests.Priority",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.Priority"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Organizes tasks based on urgency and importance, optimizing workflow efficiency.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:17.407694",
                  "confidence": 0.7,
                  "cache_key": "875e89ab"
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ScanRequest",
              "docstring": "Request model for project scanning",
              "line_range": [
                24,
                38
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.requests.ScanRequest",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.ScanRequest"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Request model for project scanning",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:17.407765",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ContextRequest",
              "docstring": "Request model for context generation",
              "line_range": [
                41,
                54
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.requests.ContextRequest",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.ContextRequest"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Request model for context generation",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:17.407796",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "TaskCreateRequest",
              "docstring": "Request model for creating tasks",
              "line_range": [
                57,
                74
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.requests.TaskCreateRequest",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.TaskCreateRequest"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Request model for creating tasks",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:17.407817",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class",
                  "generation"
                ]
              }
            },
            {
              "name": "TaskUpdateRequest",
              "docstring": "Request model for updating tasks",
              "line_range": [
                77,
                92
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.requests.TaskUpdateRequest",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.TaskUpdateRequest"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Request model for updating tasks",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:17.407837",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "QueryRequest",
              "docstring": "Request model for LLM queries",
              "line_range": [
                95,
                110
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.requests.QueryRequest",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.QueryRequest"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Request model for LLM queries",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:17.407853",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ValidationRequest",
              "docstring": "Request model for JSON validation",
              "line_range": [
                113,
                124
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.requests.ValidationRequest",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.ValidationRequest"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Request model for JSON validation",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:17.407870",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ChatMessage",
              "docstring": "Chat message request",
              "line_range": [
                127,
                132
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.requests.ChatMessage",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.ChatMessage"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Chat message request",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:17.407886",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                31,
                38
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.requests.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages configuration settings for the application.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:18.026808",
                  "confidence": 0.7,
                  "cache_key": "bbb40665"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                47,
                54
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.requests.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages configuration settings for application components.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:18.498665",
                  "confidence": 0.7,
                  "cache_key": "b82f3643"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                65,
                74
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.requests.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages configuration settings for application runtime.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:19.141374",
                  "confidence": 0.7,
                  "cache_key": "30f3feeb"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                86,
                92
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.requests.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages application configuration settings efficiently.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:20.070607",
                  "confidence": 0.7,
                  "cache_key": "5cbc8ef8"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                102,
                110
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.requests.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages application configuration settings efficiently.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:20.624502",
                  "confidence": 0.7,
                  "cache_key": "266c815b"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                118,
                124
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.requests.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.requests",
                "api.models.requests.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages configuration settings for application runtime.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:21.071559",
                  "confidence": 0.7,
                  "cache_key": "f4bb3b40"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            }
          ],
          "callgraph": {},
          "dependencies": [
            "Any",
            "BaseModel",
            "Dict",
            "Enum",
            "Field",
            "List",
            "Optional",
            "enum",
            "pydantic",
            "typing"
          ],
          "hash": null,
          "uid": "api.models.requests",
          "uid_components": [
            "api",
            "api.models",
            "api.models.requests"
          ],
          "uid_type": "module",
          "artifact_id": "48dd6594-c1e9-e156-5951-65bfb98ae87a",
          "smart_summary": {
            "summary": "Request models for LLMStruct FastAPI",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:16.022591",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 30,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 10,
            "test_coverage": 0.0,
            "maintainability_index": 0
          },
          "markdown_anchor": {
            "id": "api-models-requests",
            "title": "Module: api.models.requests",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.models.requests](#api-models-requests)",
            "html_anchor": "<a id=\"api-models-requests\"></a>"
          }
        },
        {
          "module_id": "api.models.responses",
          "path": "api/models/responses.py",
          "category": "core",
          "module_doc": "Response models for LLMStruct FastAPI",
          "functions": [],
          "classes": [
            {
              "name": "TaskStatus",
              "docstring": "",
              "line_range": [
                11,
                15
              ],
              "methods": [],
              "bases": [
                "str",
                "Enum"
              ],
              "uid": "api.models.responses.TaskStatus",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.TaskStatus"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Tracks and updates the status of tasks within a system\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:21.523497",
                  "confidence": 0.7,
                  "cache_key": "b4a6c366"
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "HealthStatus",
              "docstring": "",
              "line_range": [
                18,
                21
              ],
              "methods": [],
              "bases": [
                "str",
                "Enum"
              ],
              "uid": "api.models.responses.HealthStatus",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.HealthStatus"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"HealthStatus class retrieves and analyzes real-time health data for accurate monitoring and assessment.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:22.184698",
                  "confidence": 0.7,
                  "cache_key": "c373693f"
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ProjectInfo",
              "docstring": "Response model for project information",
              "line_range": [
                24,
                49
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.responses.ProjectInfo",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.ProjectInfo"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Response model for project information",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:22.184749",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ScanResponse",
              "docstring": "Response model for project scan results",
              "line_range": [
                52,
                77
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.responses.ScanResponse",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.ScanResponse"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Response model for project scan results",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:22.184774",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ContextResponse",
              "docstring": "Response model for context generation",
              "line_range": [
                80,
                100
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.responses.ContextResponse",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.ContextResponse"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Response model for context generation",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:22.184792",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "TaskResponse",
              "docstring": "Response model for task operations",
              "line_range": [
                103,
                128
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.responses.TaskResponse",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.TaskResponse"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Response model for task operations",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:22.184809",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "QueryResponse",
              "docstring": "Response model for LLM queries",
              "line_range": [
                131,
                155
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.responses.QueryResponse",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.QueryResponse"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Response model for LLM queries",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:22.184825",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ValidationResponse",
              "docstring": "Response model for JSON validation",
              "line_range": [
                158,
                175
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.responses.ValidationResponse",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.ValidationResponse"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Response model for JSON validation",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:22.184841",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "HealthResponse",
              "docstring": "Response model for health checks",
              "line_range": [
                178,
                199
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.responses.HealthResponse",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.HealthResponse"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Response model for health checks",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:22.184856",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class",
                  "validation"
                ]
              }
            },
            {
              "name": "ErrorResponse",
              "docstring": "Response model for API errors",
              "line_range": [
                202,
                217
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.responses.ErrorResponse",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.ErrorResponse"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Response model for API errors",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:22.184874",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ChatResponse",
              "docstring": "Chat response",
              "line_range": [
                220,
                226
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "api.models.responses.ChatResponse",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.ChatResponse"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Chat response",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:22.184889",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                36,
                49
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.responses.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages application configuration settings efficiently.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:22.697543",
                  "confidence": 0.7,
                  "cache_key": "38437003"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                62,
                77
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.responses.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages application configuration settings.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:23.241000",
                  "confidence": 0.7,
                  "cache_key": "4b98cf94"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                88,
                100
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.responses.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages application configuration settings efficiently.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:23.695087",
                  "confidence": 0.7,
                  "cache_key": "f7460d50"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                115,
                128
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.responses.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages configuration settings for application runtime.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:24.724795",
                  "confidence": 0.7,
                  "cache_key": "7a2f2706"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                139,
                155
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.responses.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and retrieves configuration settings for application runtime.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:25.478093",
                  "confidence": 0.7,
                  "cache_key": "8c068d55"
                },
                "tags": [
                  "class",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                166,
                175
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.responses.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages application configuration settings efficiently.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:26.014705",
                  "confidence": 0.7,
                  "cache_key": "425a95fa"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                186,
                199
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.responses.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages application configuration settings.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:26.442554",
                  "confidence": 0.7,
                  "cache_key": "dffd0d86"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            },
            {
              "name": "Config",
              "docstring": "",
              "line_range": [
                209,
                217
              ],
              "methods": [],
              "bases": [],
              "uid": "api.models.responses.Config",
              "uid_components": [
                "api",
                "api.models",
                "api.models.responses",
                "api.models.responses.Config"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Config class stores and manages configuration settings for the application.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:27.131977",
                  "confidence": 0.7,
                  "cache_key": "c49f5328"
                },
                "tags": [
                  "class",
                  "management",
                  "configuration"
                ]
              }
            }
          ],
          "callgraph": {},
          "dependencies": [
            "Any",
            "BaseModel",
            "Dict",
            "Enum",
            "Field",
            "List",
            "Optional",
            "datetime",
            "enum",
            "pydantic",
            "typing"
          ],
          "hash": null,
          "uid": "api.models.responses",
          "uid_components": [
            "api",
            "api.models",
            "api.models.responses"
          ],
          "uid_type": "module",
          "artifact_id": "1b8a21c4-14c8-0dfb-eeef-b95011f7f031",
          "smart_summary": {
            "summary": "Response models for LLMStruct FastAPI",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:21.071600",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 38,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 11,
            "test_coverage": 0.0,
            "maintainability_index": 0
          },
          "markdown_anchor": {
            "id": "api-models-responses",
            "title": "Module: api.models.responses",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.models.responses](#api-models-responses)",
            "html_anchor": "<a id=\"api-models-responses\"></a>"
          }
        },
        {
          "module_id": "api.models.__init__",
          "path": "api/models/__init__.py",
          "category": "cli",
          "module_doc": "Pydantic models for LLMStruct FastAPI\n\nDefines request and response models for API endpoints.",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [],
          "hash": null,
          "uid": "api.models.__init__",
          "uid_components": [
            "api",
            "api.models",
            "api.models.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "8e61fcfd-4302-dc53-b6c7-45376a339466",
          "smart_summary": {
            "summary": "Pydantic models for LLMStruct FastAPI",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:20:27.132172",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 0,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "api-models-__init__",
            "title": "Module: api.models.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: api.models.__init__](#api-models-__init__)",
            "html_anchor": "<a id=\"api-models-__init__\"></a>"
          }
        }
      ]
    },
    "core": {
      "modules": [
        {
          "module_id": "core.summary_system",
          "path": "core/summary_system.py",
          "category": "core",
          "module_doc": "Smart Summary System for LLMStruct v2.1\n\nProvides intelligent summary generation with fallback hierarchy:\n1. Docstring extraction\n2. LLM-generated summaries with caching\n3. Default fallbacks\n\nUses professional tools:\n- radon: Code complexity metrics\n- pydantic: Data validation and models\n- openai/anthropic: LLM integration",
          "functions": [
            {
              "name": "create_summary_system",
              "docstring": "Create Smart Summary System with optional LLM configuration.\n\nArgs:\n    llm_config: Optional LLM provider configuration\n    \nReturns:\n    Configured SmartSummarySystem instance",
              "line_range": [
                452,
                462
              ],
              "parameters": [
                "llm_config"
              ],
              "decorators": [],
              "uid": "core.summary_system.create_summary_system",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.create_summary_system"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create Smart Summary System with optional LLM configuration.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423507",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "enhance_entity_with_smart_summary",
              "docstring": "Enhance entity with smart summary and radon metrics.\n\nArgs:\n    entity: Code entity to enhance\n    summary_system: SmartSummarySystem instance\n    \nReturns:\n    Enhanced entity with smart summary and professional metrics",
              "line_range": [
                465,
                490
              ],
              "parameters": [
                "entity",
                "summary_system"
              ],
              "decorators": [],
              "uid": "core.summary_system.enhance_entity_with_smart_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.enhance_entity_with_smart_summary"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Enhance entity with smart summary and radon metrics.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423520",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "Initialize Smart Summary System.\n\nArgs:\n    llm_config: LLM provider configuration\n    cache_dir: Directory for caching LLM responses",
              "line_range": [
                84,
                104
              ],
              "parameters": [
                "self",
                "llm_config",
                "cache_dir"
              ],
              "decorators": [],
              "uid": "core.summary_system.__init__",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize Smart Summary System.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423532",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_setup_llm_client",
              "docstring": "Setup LLM client based on provider.",
              "line_range": [
                106,
                120
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "core.summary_system._setup_llm_client",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system._setup_llm_client"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Setup LLM client based on provider.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423543",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "calculate_radon_metrics",
              "docstring": "Calculate code metrics using Radon.\n\nArgs:\n    code: Source code content\n    file_path: File path for caching\n    \nReturns:\n    RadonMetrics with professional complexity analysis",
              "line_range": [
                122,
                175
              ],
              "parameters": [
                "self",
                "code",
                "file_path"
              ],
              "decorators": [],
              "uid": "core.summary_system.calculate_radon_metrics",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.calculate_radon_metrics"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Calculate code metrics using Radon.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423555",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "computation"
                ]
              }
            },
            {
              "name": "extract_docstring_summary",
              "docstring": "Extract summary from docstring.\n\nArgs:\n    entity: Code entity (function, class, module)\n    \nReturns:\n    Extracted summary or None",
              "line_range": [
                177,
                199
              ],
              "parameters": [
                "self",
                "entity"
              ],
              "decorators": [],
              "uid": "core.summary_system.extract_docstring_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.extract_docstring_summary"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Extract summary from docstring.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423566",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "generate_llm_summary",
              "docstring": "Generate summary using LLM.\n\nArgs:\n    entity: Code entity to summarize\n    context: Additional context (module, project info)\n    \nReturns:\n    LLM-generated summary or None",
              "line_range": [
                201,
                261
              ],
              "parameters": [
                "self",
                "entity",
                "context"
              ],
              "decorators": [],
              "uid": "core.summary_system.generate_llm_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.generate_llm_summary"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate summary using LLM.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423578",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "_create_summary_prompt",
              "docstring": "Create prompt for LLM summary generation.",
              "line_range": [
                263,
                289
              ],
              "parameters": [
                "self",
                "entity",
                "context"
              ],
              "decorators": [],
              "uid": "core.summary_system._create_summary_prompt",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system._create_summary_prompt"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create prompt for LLM summary generation.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423589",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "_load_cached_summary",
              "docstring": "Load cached LLM summary.",
              "line_range": [
                291,
                311
              ],
              "parameters": [
                "self",
                "cache_key"
              ],
              "decorators": [],
              "uid": "core.summary_system._load_cached_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system._load_cached_summary"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Load cached LLM summary.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423600",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_save_cached_summary",
              "docstring": "Save LLM summary to cache.",
              "line_range": [
                313,
                324
              ],
              "parameters": [
                "self",
                "cache_key",
                "summary"
              ],
              "decorators": [],
              "uid": "core.summary_system._save_cached_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system._save_cached_summary"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Save LLM summary to cache.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423610",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "generate_smart_summary",
              "docstring": "Generate smart summary with fallback hierarchy.\n\nArgs:\n    entity: Code entity to summarize\n    context: Additional context\n    \nReturns:\n    CodeSummary with intelligent summary and metadata",
              "line_range": [
                326,
                386
              ],
              "parameters": [
                "self",
                "entity",
                "context"
              ],
              "decorators": [],
              "uid": "core.summary_system.generate_smart_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.generate_smart_summary"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate smart summary with fallback hierarchy.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423621",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "_generate_fallback_summary",
              "docstring": "Generate fallback summary using heuristics.",
              "line_range": [
                388,
                415
              ],
              "parameters": [
                "self",
                "entity"
              ],
              "decorators": [],
              "uid": "core.summary_system._generate_fallback_summary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system._generate_fallback_summary"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate fallback summary using heuristics.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423636",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "_generate_tags",
              "docstring": "Generate categorization tags.",
              "line_range": [
                417,
                448
              ],
              "parameters": [
                "self",
                "entity",
                "summary"
              ],
              "decorators": [],
              "uid": "core.summary_system._generate_tags",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system._generate_tags"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate categorization tags.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423647",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "SummarySource",
              "docstring": "Pydantic model for summary source tracking.",
              "line_range": [
                35,
                44
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "core.summary_system.SummarySource",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SummarySource"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Pydantic model for summary source tracking.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423663",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "CodeSummary",
              "docstring": "Pydantic model for code entity summary.",
              "line_range": [
                47,
                54
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "core.summary_system.CodeSummary",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.CodeSummary"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Pydantic model for code entity summary.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423675",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "RadonMetrics",
              "docstring": "Pydantic model for Radon-based code metrics.",
              "line_range": [
                57,
                67
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "core.summary_system.RadonMetrics",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.RadonMetrics"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Pydantic model for Radon-based code metrics.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423689",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "LLMProvider",
              "docstring": "Pydantic model for LLM provider configuration.",
              "line_range": [
                70,
                78
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "core.summary_system.LLMProvider",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.LLMProvider"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Pydantic model for LLM provider configuration.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423700",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "SmartSummarySystem",
              "docstring": "Smart Summary System with professional tools integration.",
              "line_range": [
                81,
                448
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "Initialize Smart Summary System.\n\nArgs:\n    llm_config: LLM provider configuration\n    cache_dir: Directory for caching LLM responses",
                  "line_range": [
                    84,
                    104
                  ],
                  "parameters": [
                    "self",
                    "llm_config",
                    "cache_dir"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem.__init__",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize Smart Summary System.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423723",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_setup_llm_client",
                  "docstring": "Setup LLM client based on provider.",
                  "line_range": [
                    106,
                    120
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem._setup_llm_client",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem._setup_llm_client"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Setup LLM client based on provider.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423734",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "calculate_radon_metrics",
                  "docstring": "Calculate code metrics using Radon.\n\nArgs:\n    code: Source code content\n    file_path: File path for caching\n    \nReturns:\n    RadonMetrics with professional complexity analysis",
                  "line_range": [
                    122,
                    175
                  ],
                  "parameters": [
                    "self",
                    "code",
                    "file_path"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem.calculate_radon_metrics",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem.calculate_radon_metrics"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Calculate code metrics using Radon.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423884",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "computation"
                    ]
                  }
                },
                {
                  "name": "extract_docstring_summary",
                  "docstring": "Extract summary from docstring.\n\nArgs:\n    entity: Code entity (function, class, module)\n    \nReturns:\n    Extracted summary or None",
                  "line_range": [
                    177,
                    199
                  ],
                  "parameters": [
                    "self",
                    "entity"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem.extract_docstring_summary",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem.extract_docstring_summary"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Extract summary from docstring.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423900",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "generate_llm_summary",
                  "docstring": "Generate summary using LLM.\n\nArgs:\n    entity: Code entity to summarize\n    context: Additional context (module, project info)\n    \nReturns:\n    LLM-generated summary or None",
                  "line_range": [
                    201,
                    261
                  ],
                  "parameters": [
                    "self",
                    "entity",
                    "context"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem.generate_llm_summary",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem.generate_llm_summary"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate summary using LLM.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423913",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "_create_summary_prompt",
                  "docstring": "Create prompt for LLM summary generation.",
                  "line_range": [
                    263,
                    289
                  ],
                  "parameters": [
                    "self",
                    "entity",
                    "context"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem._create_summary_prompt",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem._create_summary_prompt"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Create prompt for LLM summary generation.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423925",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "_load_cached_summary",
                  "docstring": "Load cached LLM summary.",
                  "line_range": [
                    291,
                    311
                  ],
                  "parameters": [
                    "self",
                    "cache_key"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem._load_cached_summary",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem._load_cached_summary"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Load cached LLM summary.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423937",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_save_cached_summary",
                  "docstring": "Save LLM summary to cache.",
                  "line_range": [
                    313,
                    324
                  ],
                  "parameters": [
                    "self",
                    "cache_key",
                    "summary"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem._save_cached_summary",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem._save_cached_summary"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Save LLM summary to cache.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423948",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "generate_smart_summary",
                  "docstring": "Generate smart summary with fallback hierarchy.\n\nArgs:\n    entity: Code entity to summarize\n    context: Additional context\n    \nReturns:\n    CodeSummary with intelligent summary and metadata",
                  "line_range": [
                    326,
                    386
                  ],
                  "parameters": [
                    "self",
                    "entity",
                    "context"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem.generate_smart_summary",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem.generate_smart_summary"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate smart summary with fallback hierarchy.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423960",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "_generate_fallback_summary",
                  "docstring": "Generate fallback summary using heuristics.",
                  "line_range": [
                    388,
                    415
                  ],
                  "parameters": [
                    "self",
                    "entity"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem._generate_fallback_summary",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem._generate_fallback_summary"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate fallback summary using heuristics.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423971",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "_generate_tags",
                  "docstring": "Generate categorization tags.",
                  "line_range": [
                    417,
                    448
                  ],
                  "parameters": [
                    "self",
                    "entity",
                    "summary"
                  ],
                  "uid": "core.summary_system.SmartSummarySystem._generate_tags",
                  "uid_components": [
                    "core",
                    "core.summary_system",
                    "core.summary_system.SmartSummarySystem",
                    "core.summary_system.SmartSummarySystem._generate_tags"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate categorization tags.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.423982",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "core.summary_system.SmartSummarySystem",
              "uid_components": [
                "core",
                "core.summary_system",
                "core.summary_system.SmartSummarySystem"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Smart Summary System with professional tools integration.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.423711",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "self._setup_llm_client",
              "LLMProvider",
              "Path"
            ],
            "_setup_llm_client": [
              "os.getenv",
              "openai.OpenAI",
              "anthropic.Anthropic"
            ],
            "calculate_radon_metrics": [
              "cc_visit",
              "mi_visit",
              "len",
              "hashlib.md5",
              "line.strip",
              "min",
              "sum",
              "code.split",
              "h_visit",
              "max",
              "RadonMetrics",
              "hasattr"
            ],
            "extract_docstring_summary": [
              "entity.get",
              "cleaned.startswith",
              "docstring.strip",
              "line.strip"
            ],
            "generate_llm_summary": [
              "self._save_cached_summary",
              "hashlib.md5",
              "entity.get",
              "self._load_cached_summary",
              "json.dumps",
              "print",
              "self._create_summary_prompt"
            ],
            "_create_summary_prompt": [
              "entity.get"
            ],
            "_load_cached_summary": [
              "cache_file.exists",
              "cache_file.unlink",
              "datetime.fromisoformat",
              "timedelta",
              "datetime.utcnow",
              "open",
              "json.load"
            ],
            "_save_cached_summary": [
              "datetime.utcnow",
              "open",
              "json.dump"
            ],
            "generate_smart_summary": [
              "self._generate_fallback_summary",
              "SummarySource",
              "self.extract_docstring_summary",
              "loop.run_until_complete",
              "hashlib.md5",
              "CodeSummary",
              "self.generate_llm_summary",
              "asyncio.new_event_loop",
              "asyncio.set_event_loop",
              "json.dumps",
              "self._generate_tags",
              "loop.close"
            ],
            "_generate_fallback_summary": [
              "entity_type.title",
              "entity.get",
              "entity_name.replace",
              "entity_name.split",
              "entity_name.startswith"
            ],
            "_generate_tags": [
              "list",
              "entity.get",
              "summary.lower",
              "tags.append",
              "set",
              "any"
            ],
            "create_summary_system": [
              "SmartSummarySystem"
            ],
            "enhance_entity_with_smart_summary": [
              "radon_metrics.model_dump",
              "entity.get",
              "smart_summary.model_dump",
              "summary_system.generate_smart_summary",
              "summary_system.calculate_radon_metrics",
              "entity.copy"
            ]
          },
          "dependencies": [
            "Any",
            "BaseModel",
            "ConfigDict",
            "Dict",
            "Field",
            "List",
            "Optional",
            "Path",
            "UIDType",
            "Union",
            "anthropic",
            "asdict",
            "asyncio",
            "cc_visit",
            "dataclass",
            "dataclasses",
            "datetime",
            "generate_uid",
            "h_visit",
            "hashlib",
            "json",
            "mi_visit",
            "openai",
            "os",
            "pathlib",
            "pydantic",
            "radon.complexity",
            "radon.metrics",
            "timedelta",
            "typing",
            "uid_generator"
          ],
          "hash": null,
          "uid": "core.summary_system",
          "uid_components": [
            "core",
            "core.summary_system"
          ],
          "uid_type": "module",
          "artifact_id": "3e7fc7e2-796e-e3c1-797f-9c8d08707ca1",
          "smart_summary": {
            "summary": "Smart Summary System for LLMStruct v2.1",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.423496",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 23,
            "lines_of_code": 130,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 31,
            "test_coverage": 0.0,
            "maintainability_index": 0
          },
          "markdown_anchor": {
            "id": "core-summary_system",
            "title": "Module: core.summary_system",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: core.summary_system](#core-summary_system)",
            "html_anchor": "<a id=\"core-summary_system\"></a>"
          }
        },
        {
          "module_id": "core.uid_generator",
          "path": "core/uid_generator.py",
          "category": "core",
          "module_doc": "UID Generator for LLMStruct v2.1 - Advanced UID System\n\nProvides stable, FQNAME-based UIDs for modules, classes, functions, and methods.\nReplaces artifact_id with consistent, human-readable identifiers.\n\nExamples:\n    - Module: llmstruct.generators.json_generator\n    - Class: llmstruct.generators.json_generator.JsonGenerator\n    - Function: llmstruct.generators.json_generator.generate_json\n    - Method: llmstruct.generators.json_generator.JsonGenerator.build_toc",
          "functions": [
            {
              "name": "normalize_path_to_module_id",
              "docstring": "Convert file path to module ID format.\n\nArgs:\n    file_path: Path to the file (e.g., \"src/llmstruct/generators/json_generator.py\")\n    root_dir: Root directory path\n    \nReturns:\n    Module ID (e.g., \"llmstruct.generators.json_generator\")",
              "line_range": [
                31,
                60
              ],
              "parameters": [
                "file_path",
                "root_dir"
              ],
              "decorators": [],
              "uid": "core.uid_generator.normalize_path_to_module_id",
              "uid_components": [
                "core",
                "core.uid_generator",
                "core.uid_generator.normalize_path_to_module_id"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Convert file path to module ID format.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424014",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "generate_uid",
              "docstring": "Generate stable UID based on FQNAME pattern.\n\nArgs:\n    uid_type: Type of the UID (module, class, function, method)\n    module_id: Module identifier (e.g., \"llmstruct.generators.json_generator\")\n    name: Name of the entity (function, class, method name)\n    class_name: Class name for methods/properties\n    parent_uid: Parent UID for nested structures\n    \nReturns:\n    Stable UID string\n    \nExamples:\n    generate_uid(UIDType.MODULE, \"llmstruct.generators.json_generator\", \"\")\n    # -> \"llmstruct.generators.json_generator\"\n    \n    generate_uid(UIDType.FUNCTION, \"llmstruct.generators.json_generator\", \"generate_json\")\n    # -> \"llmstruct.generators.json_generator.generate_json\"\n    \n    generate_uid(UIDType.METHOD, \"llmstruct.generators.json_generator\", \"build_toc\", \"JsonGenerator\")\n    # -> \"llmstruct.generators.json_generator.JsonGenerator.build_toc\"",
              "line_range": [
                63,
                112
              ],
              "parameters": [
                "uid_type",
                "module_id",
                "name",
                "class_name",
                "parent_uid"
              ],
              "decorators": [],
              "uid": "core.uid_generator.generate_uid",
              "uid_components": [
                "core",
                "core.uid_generator",
                "core.uid_generator.generate_uid"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate stable UID based on FQNAME pattern.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424028",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "generate_uid_components",
              "docstring": "Generate UID components for UI navigation.\n\nArgs:\n    uid: Full UID string\n    \nReturns:\n    List of UID components for hierarchical navigation\n    \nExample:\n    generate_uid_components(\"llmstruct.generators.json_generator.JsonGenerator.build_toc\")\n    # -> [\n    #     \"llmstruct\",\n    #     \"llmstruct.generators\", \n    #     \"llmstruct.generators.json_generator\",\n    #     \"llmstruct.generators.json_generator.JsonGenerator\",\n    #     \"llmstruct.generators.json_generator.JsonGenerator.build_toc\"\n    # ]",
              "line_range": [
                115,
                142
              ],
              "parameters": [
                "uid"
              ],
              "decorators": [],
              "uid": "core.uid_generator.generate_uid_components",
              "uid_components": [
                "core",
                "core.uid_generator",
                "core.uid_generator.generate_uid_components"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate UID components for UI navigation.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424041",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "create_stable_uid",
              "docstring": "Create stable UID with components and metadata.\n\nArgs:\n    entity_type: Type of entity (module, class, function, method)\n    module_path: Path to module file  \n    root_dir: Root directory\n    entity_name: Name of the entity\n    class_name: Class name for methods\n    **kwargs: Additional metadata\n    \nReturns:\n    Dictionary with uid, uid_components, and metadata",
              "line_range": [
                145,
                198
              ],
              "parameters": [
                "entity_type",
                "module_path",
                "root_dir",
                "entity_name",
                "class_name"
              ],
              "decorators": [],
              "uid": "core.uid_generator.create_stable_uid",
              "uid_components": [
                "core",
                "core.uid_generator",
                "core.uid_generator.create_stable_uid"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create stable UID with components and metadata.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424053",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "create_legacy_artifact_id",
              "docstring": "Create legacy artifact_id from UID for backward compatibility.\n\nArgs:\n    uid: The UID string\n    \nReturns:\n    UUID-style string based on UID hash",
              "line_range": [
                201,
                215
              ],
              "parameters": [
                "uid"
              ],
              "decorators": [],
              "uid": "core.uid_generator.create_legacy_artifact_id",
              "uid_components": [
                "core",
                "core.uid_generator",
                "core.uid_generator.create_legacy_artifact_id"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create legacy artifact_id from UID for backward compatibility.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424066",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "migrate_artifact_id_to_uid",
              "docstring": "Migrate existing artifact_id fields to UID system.\n\nArgs:\n    data: Existing JSON data with artifact_id fields\n    root_dir: Root directory for path normalization\n    \nReturns:\n    Updated data with UID fields",
              "line_range": [
                219,
                285
              ],
              "parameters": [
                "data",
                "root_dir"
              ],
              "decorators": [],
              "uid": "core.uid_generator.migrate_artifact_id_to_uid",
              "uid_components": [
                "core",
                "core.uid_generator",
                "core.uid_generator.migrate_artifact_id_to_uid"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Migrate existing artifact_id fields to UID system.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424078",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "UIDType",
              "docstring": "Types of UIDs that can be generated.",
              "line_range": [
                20,
                28
              ],
              "methods": [],
              "bases": [
                "Enum"
              ],
              "uid": "core.uid_generator.UIDType",
              "uid_components": [
                "core",
                "core.uid_generator",
                "core.uid_generator.UIDType"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Types of UIDs that can be generated.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424090",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "normalize_path_to_module_id": [
              "path.endswith",
              "module_id.endswith",
              "module_id.startswith",
              "file_path.replace",
              "path.replace"
            ],
            "generate_uid": [],
            "generate_uid_components": [
              "uid.split",
              "range",
              "len",
              "components.append"
            ],
            "create_stable_uid": [
              "uid_type_map.get",
              "normalize_path_to_module_id",
              "generate_uid",
              "generate_uid_components"
            ],
            "create_legacy_artifact_id": [
              "uid.encode",
              "hashlib.md5"
            ],
            "migrate_artifact_id_to_uid": [
              "data.get",
              "isinstance",
              "generate_uid_components",
              "generate_uid",
              "migrate_artifact_id_to_uid",
              "data.items",
              "create_legacy_artifact_id"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "Enum",
            "List",
            "Optional",
            "Union",
            "enum",
            "hashlib",
            "re",
            "typing"
          ],
          "hash": null,
          "uid": "core.uid_generator",
          "uid_components": [
            "core",
            "core.uid_generator"
          ],
          "uid_type": "module",
          "artifact_id": "eb3a07b8-b2e7-0445-0322-58c58e7b2ece",
          "smart_summary": {
            "summary": "UID Generator for LLMStruct v2.1 - Advanced UID System",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424001",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 8,
            "lines_of_code": 60,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 10,
            "test_coverage": 0.0,
            "maintainability_index": 60
          },
          "markdown_anchor": {
            "id": "core-uid_generator",
            "title": "Module: core.uid_generator",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: core.uid_generator](#core-uid_generator)",
            "html_anchor": "<a id=\"core-uid_generator\"></a>"
          }
        },
        {
          "module_id": "core.__init__",
          "path": "core/__init__.py",
          "category": "cli",
          "module_doc": "Core LLMStruct v2.1 components for advanced processing.",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [
            "CodeMetrics",
            "CodeSummary",
            "HierarchicalJSON",
            "LLMProvider",
            "MarkdownAnchor",
            "RadonMetrics",
            "SchemaValidationSystem",
            "SmartSummarySystem",
            "SummarySource",
            "UIDType",
            "ValidationLevel",
            "ValidationResult",
            "create_schema_validator",
            "create_stable_uid",
            "create_summary_system",
            "enhance_entity_with_smart_summary",
            "enhance_json_structure",
            "generate_uid",
            "generate_uid_components",
            "json_structure",
            "schema_validation",
            "summary_system",
            "uid_generator",
            "validate_llmstruct_file",
            "validate_llmstruct_json"
          ],
          "hash": null,
          "uid": "core.__init__",
          "uid_components": [
            "core",
            "core.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "1a8516bf-0d1f-25b1-6fa3-b2be12288f6b",
          "smart_summary": {
            "summary": "Core LLMStruct v2.1 components for advanced processing.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424102",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 25,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "core-__init__",
            "title": "Module: core.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: core.__init__](#core-__init__)",
            "html_anchor": "<a id=\"core-__init__\"></a>"
          }
        },
        {
          "module_id": "core.schema_validation",
          "path": "core/schema_validation.py",
          "category": "core",
          "module_doc": "Schema Validation System for LLMStruct v2.1\n\nComprehensive validation system using professional tools:\n- jsonschema: JSON Schema validation (industry standard)\n- cerberus: Flexible validation rules\n- marshmallow: Serialization/deserialization with validation\n- pydantic: Type-safe models with validation\n\nProvides multi-layer validation:\n1. Structure validation (JSON Schema)\n2. Content validation (Cerberus rules)\n3. Type validation (Pydantic models)\n4. Custom business logic validation",
          "functions": [
            {
              "name": "create_schema_validator",
              "docstring": "Create Schema Validation System.\n\nArgs:\n    schema_dir: Directory for validation schemas\n    \nReturns:\n    Configured SchemaValidationSystem instance",
              "line_range": [
                932,
                942
              ],
              "parameters": [
                "schema_dir"
              ],
              "decorators": [],
              "uid": "core.schema_validation.create_schema_validator",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.create_schema_validator"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create Schema Validation System.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424130",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "validate_llmstruct_json",
              "docstring": "Quick validation of LLMStruct JSON data.\n\nArgs:\n    data: JSON data to validate\n    level: Validation level\n    \nReturns:\n    ValidationResult",
              "line_range": [
                945,
                957
              ],
              "parameters": [
                "data",
                "level"
              ],
              "decorators": [],
              "uid": "core.schema_validation.validate_llmstruct_json",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.validate_llmstruct_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Quick validation of LLMStruct JSON data.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424142",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "validate_llmstruct_file",
              "docstring": "Quick validation of LLMStruct JSON file.\n\nArgs:\n    file_path: Path to JSON file\n    level: Validation level\n    \nReturns:\n    ValidationResult",
              "line_range": [
                960,
                972
              ],
              "parameters": [
                "file_path",
                "level"
              ],
              "decorators": [],
              "uid": "core.schema_validation.validate_llmstruct_file",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.validate_llmstruct_file"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Quick validation of LLMStruct JSON file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424154",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "Initialize Schema Validation System.\n\nArgs:\n    schema_dir: Directory containing validation schemas",
              "line_range": [
                73,
                92
              ],
              "parameters": [
                "self",
                "schema_dir"
              ],
              "decorators": [],
              "uid": "core.schema_validation.__init__",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Initialize Schema Validation System.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424165",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_load_json_schemas",
              "docstring": "Load JSON Schema definitions.",
              "line_range": [
                94,
                269
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "core.schema_validation._load_json_schemas",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation._load_json_schemas"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Load JSON Schema definitions.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424177",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_load_cerberus_schemas",
              "docstring": "Load Cerberus validation rules.",
              "line_range": [
                271,
                344
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "core.schema_validation._load_cerberus_schemas",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation._load_cerberus_schemas"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Load Cerberus validation rules.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424191",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_create_marshmallow_schema",
              "docstring": "Create Marshmallow schema for serialization validation.",
              "line_range": [
                346,
                378
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "core.schema_validation._create_marshmallow_schema",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation._create_marshmallow_schema"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Create Marshmallow schema for serialization validation.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424219",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "_define_validation_levels",
              "docstring": "Define validation levels with increasing strictness.",
              "line_range": [
                380,
                415
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "core.schema_validation._define_validation_levels",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation._define_validation_levels"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Define validation levels with increasing strictness.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424231",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "validate_json_schema",
              "docstring": "Validate data against JSON Schema.\n\nArgs:\n    data: Data to validate\n    schema_name: Schema to use for validation\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                417,
                459
              ],
              "parameters": [
                "self",
                "data",
                "schema_name"
              ],
              "decorators": [],
              "uid": "core.schema_validation.validate_json_schema",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.validate_json_schema"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Validate data against JSON Schema.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424243",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_content_rules",
              "docstring": "Validate data using simple content rules (Cerberus alternative).\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                461,
                547
              ],
              "parameters": [
                "self",
                "data"
              ],
              "decorators": [],
              "uid": "core.schema_validation.validate_content_rules",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.validate_content_rules"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Validate data using simple content rules (Cerberus alternative).",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424254",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_marshmallow_schema",
              "docstring": "Validate data using Marshmallow schema.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                549,
                580
              ],
              "parameters": [
                "self",
                "data"
              ],
              "decorators": [],
              "uid": "core.schema_validation.validate_marshmallow_schema",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.validate_marshmallow_schema"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Validate data using Marshmallow schema.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424266",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_uid_consistency",
              "docstring": "Validate UID consistency across the structure.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                582,
                679
              ],
              "parameters": [
                "self",
                "data"
              ],
              "decorators": [],
              "uid": "core.schema_validation.validate_uid_consistency",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.validate_uid_consistency"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Validate UID consistency across the structure.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424278",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_naming_conventions",
              "docstring": "Validate naming conventions.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                681,
                726
              ],
              "parameters": [
                "self",
                "data"
              ],
              "decorators": [],
              "uid": "core.schema_validation.validate_naming_conventions",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.validate_naming_conventions"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Validate naming conventions.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424290",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_quality_checks",
              "docstring": "Perform quality checks on the data.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
              "line_range": [
                728,
                777
              ],
              "parameters": [
                "self",
                "data"
              ],
              "decorators": [],
              "uid": "core.schema_validation.validate_quality_checks",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.validate_quality_checks"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Perform quality checks on the data.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424302",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "calculate_validation_score",
              "docstring": "Calculate validation score based on errors and warnings.\n\nArgs:\n    errors: List of validation errors\n    warnings: List of validation warnings\n    total_entities: Total number of entities validated\n    \nReturns:\n    Validation score (0-100)",
              "line_range": [
                779,
                804
              ],
              "parameters": [
                "self",
                "errors",
                "warnings",
                "total_entities"
              ],
              "decorators": [],
              "uid": "core.schema_validation.calculate_validation_score",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.calculate_validation_score"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Calculate validation score based on errors and warnings.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424313",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "computation"
                ]
              }
            },
            {
              "name": "validate",
              "docstring": "Comprehensive validation of LLMStruct data.\n\nArgs:\n    data: Data to validate\n    level: Validation level (basic, standard, strict, enterprise)\n    \nReturns:\n    ValidationResult with comprehensive validation information",
              "line_range": [
                806,
                888
              ],
              "parameters": [
                "self",
                "data",
                "level"
              ],
              "decorators": [],
              "uid": "core.schema_validation.validate",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.validate"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Comprehensive validation of LLMStruct data.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424325",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "validate_file",
              "docstring": "Validate JSON file.\n\nArgs:\n    file_path: Path to JSON file\n    level: Validation level\n    \nReturns:\n    ValidationResult",
              "line_range": [
                890,
                928
              ],
              "parameters": [
                "self",
                "file_path",
                "level"
              ],
              "decorators": [],
              "uid": "core.schema_validation.validate_file",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.validate_file"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Validate JSON file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424337",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "ValidationResult",
              "docstring": "Pydantic model for validation results.",
              "line_range": [
                37,
                48
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "core.schema_validation.ValidationResult",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.ValidationResult"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Pydantic model for validation results.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424352",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ValidationLevel",
              "docstring": "Pydantic model for validation level configuration.",
              "line_range": [
                51,
                59
              ],
              "methods": [],
              "bases": [
                "BaseModel"
              ],
              "uid": "core.schema_validation.ValidationLevel",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.ValidationLevel"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Pydantic model for validation level configuration.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424365",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "SchemaValidationSystem",
              "docstring": "Comprehensive Schema Validation System using professional tools.\n\nValidation Layers:\n1. JSON Schema - Structure validation\n2. Cerberus - Content validation  \n3. Pydantic - Type validation\n4. Custom - Business logic validation",
              "line_range": [
                62,
                928
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "Initialize Schema Validation System.\n\nArgs:\n    schema_dir: Directory containing validation schemas",
                  "line_range": [
                    73,
                    92
                  ],
                  "parameters": [
                    "self",
                    "schema_dir"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem.__init__",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initialize Schema Validation System.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424392",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_load_json_schemas",
                  "docstring": "Load JSON Schema definitions.",
                  "line_range": [
                    94,
                    269
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem._load_json_schemas",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem._load_json_schemas"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Load JSON Schema definitions.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424408",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_load_cerberus_schemas",
                  "docstring": "Load Cerberus validation rules.",
                  "line_range": [
                    271,
                    344
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem._load_cerberus_schemas",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem._load_cerberus_schemas"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Load Cerberus validation rules.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424422",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_create_marshmallow_schema",
                  "docstring": "Create Marshmallow schema for serialization validation.",
                  "line_range": [
                    346,
                    378
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem._create_marshmallow_schema",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem._create_marshmallow_schema"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Create Marshmallow schema for serialization validation.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424434",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "_define_validation_levels",
                  "docstring": "Define validation levels with increasing strictness.",
                  "line_range": [
                    380,
                    415
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem._define_validation_levels",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem._define_validation_levels"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Define validation levels with increasing strictness.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424446",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "validate_json_schema",
                  "docstring": "Validate data against JSON Schema.\n\nArgs:\n    data: Data to validate\n    schema_name: Schema to use for validation\n    \nReturns:\n    Tuple of (is_valid, errors)",
                  "line_range": [
                    417,
                    459
                  ],
                  "parameters": [
                    "self",
                    "data",
                    "schema_name"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem.validate_json_schema",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem.validate_json_schema"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Validate data against JSON Schema.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424457",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "validate_content_rules",
                  "docstring": "Validate data using simple content rules (Cerberus alternative).\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
                  "line_range": [
                    461,
                    547
                  ],
                  "parameters": [
                    "self",
                    "data"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem.validate_content_rules",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem.validate_content_rules"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Validate data using simple content rules (Cerberus alternative).",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424469",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "validate_marshmallow_schema",
                  "docstring": "Validate data using Marshmallow schema.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
                  "line_range": [
                    549,
                    580
                  ],
                  "parameters": [
                    "self",
                    "data"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem.validate_marshmallow_schema",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem.validate_marshmallow_schema"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Validate data using Marshmallow schema.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424480",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "validate_uid_consistency",
                  "docstring": "Validate UID consistency across the structure.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
                  "line_range": [
                    582,
                    679
                  ],
                  "parameters": [
                    "self",
                    "data"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem.validate_uid_consistency",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem.validate_uid_consistency"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Validate UID consistency across the structure.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424492",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "validate_naming_conventions",
                  "docstring": "Validate naming conventions.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
                  "line_range": [
                    681,
                    726
                  ],
                  "parameters": [
                    "self",
                    "data"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem.validate_naming_conventions",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem.validate_naming_conventions"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Validate naming conventions.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424503",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "validate_quality_checks",
                  "docstring": "Perform quality checks on the data.\n\nArgs:\n    data: Data to validate\n    \nReturns:\n    Tuple of (is_valid, errors)",
                  "line_range": [
                    728,
                    777
                  ],
                  "parameters": [
                    "self",
                    "data"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem.validate_quality_checks",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem.validate_quality_checks"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Perform quality checks on the data.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424515",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                },
                {
                  "name": "calculate_validation_score",
                  "docstring": "Calculate validation score based on errors and warnings.\n\nArgs:\n    errors: List of validation errors\n    warnings: List of validation warnings\n    total_entities: Total number of entities validated\n    \nReturns:\n    Validation score (0-100)",
                  "line_range": [
                    779,
                    804
                  ],
                  "parameters": [
                    "self",
                    "errors",
                    "warnings",
                    "total_entities"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem.calculate_validation_score",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem.calculate_validation_score"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Calculate validation score based on errors and warnings.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424527",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "computation"
                    ]
                  }
                },
                {
                  "name": "validate",
                  "docstring": "Comprehensive validation of LLMStruct data.\n\nArgs:\n    data: Data to validate\n    level: Validation level (basic, standard, strict, enterprise)\n    \nReturns:\n    ValidationResult with comprehensive validation information",
                  "line_range": [
                    806,
                    888
                  ],
                  "parameters": [
                    "self",
                    "data",
                    "level"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem.validate",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem.validate"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Comprehensive validation of LLMStruct data.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424539",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "validate_file",
                  "docstring": "Validate JSON file.\n\nArgs:\n    file_path: Path to JSON file\n    level: Validation level\n    \nReturns:\n    ValidationResult",
                  "line_range": [
                    890,
                    928
                  ],
                  "parameters": [
                    "self",
                    "file_path",
                    "level"
                  ],
                  "uid": "core.schema_validation.SchemaValidationSystem.validate_file",
                  "uid_components": [
                    "core",
                    "core.schema_validation",
                    "core.schema_validation.SchemaValidationSystem",
                    "core.schema_validation.SchemaValidationSystem.validate_file"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Validate JSON file.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:32.424550",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "validation"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "core.schema_validation.SchemaValidationSystem",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.SchemaValidationSystem"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Comprehensive Schema Validation System using professional tools.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:32.424377",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "MetadataSchema",
              "docstring": "",
              "line_range": [
                349,
                357
              ],
              "methods": [],
              "bases": [
                "Schema"
              ],
              "uid": "core.schema_validation.MetadataSchema",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.MetadataSchema"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Defines the structure and properties of metadata for organizing and managing data in a standardized format.",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:33.626627",
                  "confidence": 0.7,
                  "cache_key": "73f7d1f6"
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ModuleSchema",
              "docstring": "",
              "line_range": [
                359,
                368
              ],
              "methods": [],
              "bases": [
                "Schema"
              ],
              "uid": "core.schema_validation.ModuleSchema",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.ModuleSchema"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Defines data structure for modular components in a software system\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:34.207958",
                  "confidence": 0.7,
                  "cache_key": "529be634"
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "LLMStructSchema",
              "docstring": "",
              "line_range": [
                370,
                376
              ],
              "methods": [],
              "bases": [
                "Schema"
              ],
              "uid": "core.schema_validation.LLMStructSchema",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.LLMStructSchema"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Defines data structures for representing complex hierarchical schemas\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:34.728421",
                  "confidence": 0.7,
                  "cache_key": "179c1fb9"
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "Meta",
              "docstring": "",
              "line_range": [
                350,
                351
              ],
              "methods": [],
              "bases": [],
              "uid": "core.schema_validation.Meta",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.Meta"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Meta class provides a framework for dynamic metadata manipulation and retrieval.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:35.279640",
                  "confidence": 0.7,
                  "cache_key": "2a0d484c"
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "Meta",
              "docstring": "",
              "line_range": [
                360,
                361
              ],
              "methods": [],
              "bases": [],
              "uid": "core.schema_validation.Meta",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.Meta"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Analyzes and manipulates metadata for efficient data organization and retrieval.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:36.144032",
                  "confidence": 0.7,
                  "cache_key": "ee3d09d0"
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "Meta",
              "docstring": "",
              "line_range": [
                371,
                372
              ],
              "methods": [],
              "bases": [],
              "uid": "core.schema_validation.Meta",
              "uid_components": [
                "core",
                "core.schema_validation",
                "core.schema_validation.Meta"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Meta class provides a flexible framework for creating and manipulating metadata in a structured manner.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:36.843317",
                  "confidence": 0.7,
                  "cache_key": "a6c5d260"
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "self._define_validation_levels",
              "self._create_marshmallow_schema",
              "self._load_cerberus_schemas",
              "Validator",
              "self._load_json_schemas",
              "Path"
            ],
            "_load_json_schemas": [],
            "_load_cerberus_schemas": [],
            "_create_marshmallow_schema": [
              "fields.List",
              "fields.Str",
              "fields.Nested",
              "LLMStructSchema",
              "fields.Dict"
            ],
            "_define_validation_levels": [
              "ValidationLevel"
            ],
            "validate_json_schema": [
              "list",
              "errors.append",
              "str",
              "validate"
            ],
            "validate_content_rules": [
              "path.endswith",
              "module_id.replace",
              "len",
              "errors.append",
              "func.get",
              "module.get",
              "enumerate",
              "str",
              "metadata.get"
            ],
            "validate_marshmallow_schema": [
              "errors.append",
              "str"
            ],
            "validate_uid_consistency": [
              "toc_item.get",
              "data.get",
              "len",
              "errors.append",
              "all_uids.add",
              "set",
              "cls.get",
              "func.get",
              "module.get",
              "method.get",
              "enumerate"
            ],
            "validate_naming_conventions": [
              "re.compile",
              "data.get",
              "cls.get",
              "snake_case_pattern.match",
              "pascal_case_pattern.match",
              "func.get",
              "module.get",
              "warnings.append",
              "enumerate"
            ],
            "validate_quality_checks": [
              "len",
              "data.get",
              "radon_metrics.get",
              "func.get",
              "warnings.append",
              "module.get",
              "enumerate"
            ],
            "calculate_validation_score": [
              "max",
              "len",
              "min"
            ],
            "validate": [
              "self.validate_marshmallow_schema",
              "len",
              "data.get",
              "all_errors.extend",
              "all_warnings.append",
              "cls.get",
              "self.calculate_validation_score",
              "self.validate_uid_consistency",
              "ValidationResult",
              "ValueError",
              "self.validate_quality_checks",
              "module.get",
              "all_warnings.extend",
              "self.validate_json_schema",
              "self.validate_content_rules",
              "self.validate_naming_conventions"
            ],
            "validate_file": [
              "self.validate",
              "ValidationResult",
              "open",
              "json.load",
              "str"
            ],
            "create_schema_validator": [
              "SchemaValidationSystem"
            ],
            "validate_llmstruct_json": [
              "validator.validate",
              "create_schema_validator"
            ],
            "validate_llmstruct_file": [
              "validator.validate_file",
              "create_schema_validator"
            ]
          },
          "dependencies": [
            "Any",
            "BaseModel",
            "ConfigDict",
            "Dict",
            "Draft7Validator",
            "Field",
            "List",
            "Optional",
            "Path",
            "Schema",
            "Tuple",
            "UIDType",
            "Union",
            "ValidationError",
            "Validator",
            "cerberus",
            "dataclass",
            "dataclasses",
            "datetime",
            "fields",
            "json",
            "jsonschema",
            "marshmallow",
            "os",
            "pathlib",
            "pydantic",
            "re",
            "typing",
            "uid_generator",
            "validate"
          ],
          "hash": null,
          "uid": "core.schema_validation",
          "uid_components": [
            "core",
            "core.schema_validation"
          ],
          "uid_type": "module",
          "artifact_id": "d6e53b97-045a-8c06-bfc5-40dac11c6227",
          "smart_summary": {
            "summary": "Schema Validation System for LLMStruct v2.1",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:32.424118",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 35,
            "lines_of_code": 170,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 30,
            "test_coverage": 0.0,
            "maintainability_index": 0
          },
          "markdown_anchor": {
            "id": "core-schema_validation",
            "title": "Module: core.schema_validation",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: core.schema_validation](#core-schema_validation)",
            "html_anchor": "<a id=\"core-schema_validation\"></a>"
          }
        },
        {
          "module_id": "core.json_structure",
          "path": "core/json_structure.py",
          "category": "core",
          "module_doc": "Enhanced JSON Structure for LLMStruct v2.1\n\nProvides hierarchical JSON organization, built-in metrics, and markdown anchors.\nOptimizes JSON structure for LLM consumption and human readability.",
          "functions": [
            {
              "name": "enhance_json_structure",
              "docstring": "Convenience function to enhance JSON structure.\n\nArgs:\n    json_data: Original JSON from generators\n    \nReturns:\n    Enhanced JSON with v2.1 features",
              "line_range": [
                207,
                218
              ],
              "parameters": [
                "json_data"
              ],
              "decorators": [],
              "uid": "core.json_structure.enhance_json_structure",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.enhance_json_structure"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Convenience function to enhance JSON structure.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:36.843401",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "to_dict",
              "docstring": "Convert to dictionary for JSON serialization.",
              "line_range": [
                26,
                28
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "core.json_structure.to_dict",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.to_dict"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Convert to dictionary for JSON serialization.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:36.843424",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "to_markdown_link",
              "docstring": "Generate markdown link.",
              "line_range": [
                39,
                41
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "core.json_structure.to_markdown_link",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.to_markdown_link"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate markdown link.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:36.843445",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "to_anchor_tag",
              "docstring": "Generate HTML anchor tag.",
              "line_range": [
                43,
                45
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "core.json_structure.to_anchor_tag",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.to_anchor_tag"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate HTML anchor tag.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:36.843465",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                51,
                54
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "core.json_structure.__init__",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes an object instance with default values and sets up necessary attributes\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:37.629513",
                  "confidence": 0.7,
                  "cache_key": "52308daf"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "generate_enhanced_json",
              "docstring": "Generate enhanced JSON with hierarchical structure and metrics.\n\nArgs:\n    base_json: Original JSON structure from generators\n    \nReturns:\n    Enhanced JSON with hierarchy, metrics, and anchors",
              "line_range": [
                56,
                104
              ],
              "parameters": [
                "self",
                "base_json"
              ],
              "decorators": [],
              "uid": "core.json_structure.generate_enhanced_json",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.generate_enhanced_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate enhanced JSON with hierarchical structure and metrics.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629564",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "organize_modules_hierarchically",
              "docstring": "Organize modules in hierarchical structure for better navigation.",
              "line_range": [
                106,
                124
              ],
              "parameters": [
                "self",
                "modules"
              ],
              "decorators": [],
              "uid": "core.json_structure.organize_modules_hierarchically",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.organize_modules_hierarchically"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Organize modules in hierarchical structure for better navigation.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629594",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_enhance_module",
              "docstring": "Enhance module with metrics and anchors.",
              "line_range": [
                126,
                138
              ],
              "parameters": [
                "self",
                "module"
              ],
              "decorators": [],
              "uid": "core.json_structure._enhance_module",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure._enhance_module"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Enhance module with metrics and anchors.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629610",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_calculate_module_metrics",
              "docstring": "Calculate built-in metrics for module.",
              "line_range": [
                140,
                154
              ],
              "parameters": [
                "self",
                "module"
              ],
              "decorators": [],
              "uid": "core.json_structure._calculate_module_metrics",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure._calculate_module_metrics"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Calculate built-in metrics for module.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629622",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "computation"
                ]
              }
            },
            {
              "name": "_generate_markdown_anchor",
              "docstring": "Generate markdown anchor for entity.",
              "line_range": [
                156,
                187
              ],
              "parameters": [
                "self",
                "uid",
                "entity_type",
                "name"
              ],
              "decorators": [],
              "uid": "core.json_structure._generate_markdown_anchor",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure._generate_markdown_anchor"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate markdown anchor for entity.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629635",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "_calculate_global_metrics",
              "docstring": "Calculate global project metrics.",
              "line_range": [
                189,
                203
              ],
              "parameters": [
                "self",
                "json_data"
              ],
              "decorators": [],
              "uid": "core.json_structure._calculate_global_metrics",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure._calculate_global_metrics"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Calculate global project metrics.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629647",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "computation"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "CodeMetrics",
              "docstring": "Built-in metrics for code entities.",
              "line_range": [
                16,
                28
              ],
              "methods": [
                {
                  "name": "to_dict",
                  "docstring": "Convert to dictionary for JSON serialization.",
                  "line_range": [
                    26,
                    28
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "core.json_structure.CodeMetrics.to_dict",
                  "uid_components": [
                    "core",
                    "core.json_structure",
                    "core.json_structure.CodeMetrics",
                    "core.json_structure.CodeMetrics.to_dict"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Convert to dictionary for JSON serialization.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:37.629672",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "core.json_structure.CodeMetrics",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.CodeMetrics"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Built-in metrics for code entities.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629660",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "MarkdownAnchor",
              "docstring": "Markdown anchor for documentation generation.",
              "line_range": [
                32,
                45
              ],
              "methods": [
                {
                  "name": "to_markdown_link",
                  "docstring": "Generate markdown link.",
                  "line_range": [
                    39,
                    41
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "core.json_structure.MarkdownAnchor.to_markdown_link",
                  "uid_components": [
                    "core",
                    "core.json_structure",
                    "core.json_structure.MarkdownAnchor",
                    "core.json_structure.MarkdownAnchor.to_markdown_link"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate markdown link.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:37.629695",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "to_anchor_tag",
                  "docstring": "Generate HTML anchor tag.",
                  "line_range": [
                    43,
                    45
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "core.json_structure.MarkdownAnchor.to_anchor_tag",
                  "uid_components": [
                    "core",
                    "core.json_structure",
                    "core.json_structure.MarkdownAnchor",
                    "core.json_structure.MarkdownAnchor.to_anchor_tag"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate HTML anchor tag.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:37.629706",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "core.json_structure.MarkdownAnchor",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.MarkdownAnchor"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Markdown anchor for documentation generation.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629683",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "HierarchicalJSON",
              "docstring": "Enhanced JSON structure with hierarchy and metrics.",
              "line_range": [
                48,
                203
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    51,
                    54
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "core.json_structure.HierarchicalJSON.__init__",
                  "uid_components": [
                    "core",
                    "core.json_structure",
                    "core.json_structure.HierarchicalJSON",
                    "core.json_structure.HierarchicalJSON.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Initializes a new instance of the class and sets its initial state and attributes.",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:38.158687",
                      "confidence": 0.7,
                      "cache_key": "67ebe3b4"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "generate_enhanced_json",
                  "docstring": "Generate enhanced JSON with hierarchical structure and metrics.\n\nArgs:\n    base_json: Original JSON structure from generators\n    \nReturns:\n    Enhanced JSON with hierarchy, metrics, and anchors",
                  "line_range": [
                    56,
                    104
                  ],
                  "parameters": [
                    "self",
                    "base_json"
                  ],
                  "uid": "core.json_structure.HierarchicalJSON.generate_enhanced_json",
                  "uid_components": [
                    "core",
                    "core.json_structure",
                    "core.json_structure.HierarchicalJSON",
                    "core.json_structure.HierarchicalJSON.generate_enhanced_json"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate enhanced JSON with hierarchical structure and metrics.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:38.158728",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "organize_modules_hierarchically",
                  "docstring": "Organize modules in hierarchical structure for better navigation.",
                  "line_range": [
                    106,
                    124
                  ],
                  "parameters": [
                    "self",
                    "modules"
                  ],
                  "uid": "core.json_structure.HierarchicalJSON.organize_modules_hierarchically",
                  "uid_components": [
                    "core",
                    "core.json_structure",
                    "core.json_structure.HierarchicalJSON",
                    "core.json_structure.HierarchicalJSON.organize_modules_hierarchically"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Organize modules in hierarchical structure for better navigation.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:38.158746",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_enhance_module",
                  "docstring": "Enhance module with metrics and anchors.",
                  "line_range": [
                    126,
                    138
                  ],
                  "parameters": [
                    "self",
                    "module"
                  ],
                  "uid": "core.json_structure.HierarchicalJSON._enhance_module",
                  "uid_components": [
                    "core",
                    "core.json_structure",
                    "core.json_structure.HierarchicalJSON",
                    "core.json_structure.HierarchicalJSON._enhance_module"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Enhance module with metrics and anchors.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:38.158760",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_calculate_module_metrics",
                  "docstring": "Calculate built-in metrics for module.",
                  "line_range": [
                    140,
                    154
                  ],
                  "parameters": [
                    "self",
                    "module"
                  ],
                  "uid": "core.json_structure.HierarchicalJSON._calculate_module_metrics",
                  "uid_components": [
                    "core",
                    "core.json_structure",
                    "core.json_structure.HierarchicalJSON",
                    "core.json_structure.HierarchicalJSON._calculate_module_metrics"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Calculate built-in metrics for module.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:38.158772",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "computation"
                    ]
                  }
                },
                {
                  "name": "_generate_markdown_anchor",
                  "docstring": "Generate markdown anchor for entity.",
                  "line_range": [
                    156,
                    187
                  ],
                  "parameters": [
                    "self",
                    "uid",
                    "entity_type",
                    "name"
                  ],
                  "uid": "core.json_structure.HierarchicalJSON._generate_markdown_anchor",
                  "uid_components": [
                    "core",
                    "core.json_structure",
                    "core.json_structure.HierarchicalJSON",
                    "core.json_structure.HierarchicalJSON._generate_markdown_anchor"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Generate markdown anchor for entity.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:38.158784",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "generation"
                    ]
                  }
                },
                {
                  "name": "_calculate_global_metrics",
                  "docstring": "Calculate global project metrics.",
                  "line_range": [
                    189,
                    203
                  ],
                  "parameters": [
                    "self",
                    "json_data"
                  ],
                  "uid": "core.json_structure.HierarchicalJSON._calculate_global_metrics",
                  "uid_components": [
                    "core",
                    "core.json_structure",
                    "core.json_structure.HierarchicalJSON",
                    "core.json_structure.HierarchicalJSON._calculate_global_metrics"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Calculate global project metrics.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:38.158796",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method",
                      "computation"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "core.json_structure.HierarchicalJSON",
              "uid_components": [
                "core",
                "core.json_structure",
                "core.json_structure.HierarchicalJSON"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Enhanced JSON structure with hierarchy and metrics.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:37.629717",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "to_dict": [
              "asdict"
            ],
            "to_markdown_link": [],
            "to_anchor_tag": [],
            "__init__": [
              "defaultdict"
            ],
            "generate_enhanced_json": [
              "self._calculate_global_metrics",
              "base_json.copy",
              "self.organize_modules_hierarchically",
              "self._enhance_module",
              "item.get",
              "self._generate_markdown_anchor"
            ],
            "organize_modules_hierarchically": [
              "len",
              "defaultdict",
              "self._enhance_module",
              "module_id.split",
              "dict",
              "module.get"
            ],
            "_enhance_module": [
              "module.copy",
              "self._calculate_module_metrics",
              "module.get",
              "self._generate_markdown_anchor"
            ],
            "_calculate_module_metrics": [
              "len",
              "sum",
              "func.get",
              "module.get",
              "max",
              "CodeMetrics"
            ],
            "_generate_markdown_anchor": [
              "anchor.to_markdown_link",
              "MarkdownAnchor",
              "uid.lower",
              "anchor.to_anchor_tag"
            ],
            "_calculate_global_metrics": [
              "m.get",
              "len",
              "round",
              "sum",
              "json_data.get",
              "max"
            ],
            "enhance_json_structure": [
              "enhancer.generate_enhanced_json",
              "HierarchicalJSON"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "List",
            "Optional",
            "Set",
            "Tuple",
            "asdict",
            "collections",
            "dataclass",
            "dataclasses",
            "defaultdict",
            "json",
            "math",
            "typing"
          ],
          "hash": null,
          "uid": "core.json_structure",
          "uid_components": [
            "core",
            "core.json_structure"
          ],
          "uid_type": "module",
          "artifact_id": "ac3599fe-be69-efa3-dbff-3d2e7827a049",
          "smart_summary": {
            "summary": "Enhanced JSON Structure for LLMStruct v2.1",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:36.843373",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 17,
            "lines_of_code": 110,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 14,
            "test_coverage": 0.0,
            "maintainability_index": 15
          },
          "markdown_anchor": {
            "id": "core-json_structure",
            "title": "Module: core.json_structure",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: core.json_structure](#core-json_structure)",
            "html_anchor": "<a id=\"core-json_structure\"></a>"
          }
        }
      ]
    },
    "validators": {
      "modules": [
        {
          "module_id": "validators.__init__",
          "path": "validators/__init__.py",
          "category": "cli",
          "module_doc": "Validation modules for ensuring LLMStruct JSON complies with the schema.",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [
            "json_validator",
            "validate_struct_json"
          ],
          "hash": null,
          "uid": "validators.__init__",
          "uid_components": [
            "validators",
            "validators.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "83c9968a-b3cf-4350-31da-19d9a2c06915",
          "smart_summary": {
            "summary": "Validation modules for ensuring LLMStruct JSON complies with the schema.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:38.158809",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 2,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "validators-__init__",
            "title": "Module: validators.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: validators.__init__](#validators-__init__)",
            "html_anchor": "<a id=\"validators-__init__\"></a>"
          }
        },
        {
          "module_id": "validators.json_validator",
          "path": "validators/json_validator.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "validate_struct_json",
              "docstring": "Validate a single JSON file against a schema.",
              "line_range": [
                12,
                40
              ],
              "parameters": [
                "json_path",
                "schema_path"
              ],
              "decorators": [],
              "uid": "validators.json_validator.validate_struct_json",
              "uid_components": [
                "validators",
                "validators.json_validator",
                "validators.json_validator.validate_struct_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Validate a single JSON file against a schema.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:38.159095",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            },
            {
              "name": "validate_directory",
              "docstring": "Validate all JSON files in a directory against a schema.",
              "line_range": [
                43,
                61
              ],
              "parameters": [
                "directory",
                "schema_path",
                "include_patterns",
                "exclude_patterns"
              ],
              "decorators": [],
              "uid": "validators.json_validator.validate_directory",
              "uid_components": [
                "validators",
                "validators.json_validator",
                "validators.json_validator.validate_directory"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Validate all JSON files in a directory against a schema.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:38.159110",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "validation"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "validate_struct_json": [
              "Path",
              "logging.error",
              "validate",
              "logging.info",
              "open",
              "schema_file.exists",
              "json_file.exists",
              "json.load",
              "str"
            ],
            "validate_directory": [
              "json_file.match",
              "validate_struct_json",
              "any",
              "Path",
              "str"
            ]
          },
          "dependencies": [
            "List",
            "Optional",
            "Path",
            "ValidationError",
            "json",
            "jsonschema",
            "logging",
            "pathlib",
            "sys",
            "typing",
            "validate"
          ],
          "hash": null,
          "uid": "validators.json_validator",
          "uid_components": [
            "validators",
            "validators.json_validator"
          ],
          "uid_type": "module",
          "artifact_id": "ae3d7c41-03a2-5e47-86bd-15b10b99898a",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:38.159072",
              "confidence": 0.7,
              "cache_key": "c9035bcd"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 2,
            "lines_of_code": 20,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 11,
            "test_coverage": 0.0,
            "maintainability_index": 90
          },
          "markdown_anchor": {
            "id": "validators-json_validator",
            "title": "Module: validators.json_validator",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: validators.json_validator](#validators-json_validator)",
            "html_anchor": "<a id=\"validators-json_validator\"></a>"
          }
        }
      ]
    },
    "parsers": {
      "modules": [
        {
          "module_id": "parsers.universal_converter",
          "path": "parsers/universal_converter.py",
          "category": "core",
          "module_doc": "Universal Code Converter - Orchestrates all language parsers\nConverts any codebase to llmstruct JSON format",
          "functions": [
            {
              "name": "main",
              "docstring": "CLI interface for universal converter",
              "line_range": [
                375,
                428
              ],
              "parameters": [],
              "decorators": [],
              "uid": "parsers.universal_converter.main",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.main"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "CLI interface for universal converter",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:38.159137",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__post_init__",
              "docstring": "",
              "line_range": [
                55,
                62
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter.__post_init__",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.__post_init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes object attributes after instance creation\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:38.759316",
                  "confidence": 0.7,
                  "cache_key": "560e8251"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                79,
                82
              ],
              "parameters": [
                "self",
                "config"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter.__init__",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes object with configuration settings for further operations\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:39.338484",
                  "confidence": 0.7,
                  "cache_key": "dc5a3151"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "detect_language",
              "docstring": "Detect programming language from file extension",
              "line_range": [
                84,
                92
              ],
              "parameters": [
                "self",
                "file_path"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter.detect_language",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.detect_language"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Detect programming language from file extension",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338524",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "detect_project_languages",
              "docstring": "Detect all languages in project and count files",
              "line_range": [
                94,
                109
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter.detect_project_languages",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.detect_project_languages"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Detect all languages in project and count files",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338540",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_project_files",
              "docstring": "Get all relevant files for conversion",
              "line_range": [
                111,
                138
              ],
              "parameters": [
                "self",
                "project_path",
                "language"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter.get_project_files",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.get_project_files"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Get all relevant files for conversion",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338554",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "convert_python_project",
              "docstring": "Convert Python project to llmstruct format",
              "line_range": [
                140,
                171
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter.convert_python_project",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.convert_python_project"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Convert Python project to llmstruct format",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338567",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "convert_go_project",
              "docstring": "Convert Go project to llmstruct format",
              "line_range": [
                173,
                190
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter.convert_go_project",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.convert_go_project"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Convert Go project to llmstruct format",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338579",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "convert_javascript_project",
              "docstring": "Convert JavaScript project to llmstruct format",
              "line_range": [
                192,
                223
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter.convert_javascript_project",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.convert_javascript_project"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Convert JavaScript project to llmstruct format",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338590",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "convert_project",
              "docstring": "Convert any project to llmstruct format",
              "line_range": [
                225,
                250
              ],
              "parameters": [
                "self",
                "project_path",
                "language"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter.convert_project",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.convert_project"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Convert any project to llmstruct format",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338601",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "convert_multi_language_project",
              "docstring": "Convert multi-language project with separate sections per language",
              "line_range": [
                252,
                282
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter.convert_multi_language_project",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.convert_multi_language_project"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Convert multi-language project with separate sections per language",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338612",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_build_project_structure",
              "docstring": "Build standard llmstruct project structure",
              "line_range": [
                284,
                312
              ],
              "parameters": [
                "self",
                "language",
                "project_path",
                "modules",
                "toc"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter._build_project_structure",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter._build_project_structure"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Build standard llmstruct project structure",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338624",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_build_empty_project_structure",
              "docstring": "Build empty structure when conversion fails",
              "line_range": [
                314,
                329
              ],
              "parameters": [
                "self",
                "language",
                "project_path",
                "error"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter._build_empty_project_structure",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter._build_empty_project_structure"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Build empty structure when conversion fails",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338635",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_merge_language_results",
              "docstring": "Merge multiple language results into unified structure",
              "line_range": [
                331,
                372
              ],
              "parameters": [
                "self",
                "project_path",
                "language_results"
              ],
              "decorators": [],
              "uid": "parsers.universal_converter._merge_language_results",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter._merge_language_results"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Merge multiple language results into unified structure",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.338646",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "Language",
              "docstring": "",
              "line_range": [
                33,
                42
              ],
              "methods": [],
              "bases": [
                "Enum"
              ],
              "uid": "parsers.universal_converter.Language",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.Language"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Analyzes syntax and semantics of programming languages for efficient code execution.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:39.967015",
                  "confidence": 0.7,
                  "cache_key": "d9f6db07"
                },
                "tags": [
                  "class"
                ]
              }
            },
            {
              "name": "ConverterConfig",
              "docstring": "Configuration for universal converter",
              "line_range": [
                46,
                62
              ],
              "methods": [
                {
                  "name": "__post_init__",
                  "docstring": "",
                  "line_range": [
                    55,
                    62
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "parsers.universal_converter.ConverterConfig.__post_init__",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.ConverterConfig",
                    "parsers.universal_converter.ConverterConfig.__post_init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Executes initialization code after object creation, allowing for custom setup procedures.\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:40.544680",
                      "confidence": 0.7,
                      "cache_key": "6a95fdb6"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "parsers.universal_converter.ConverterConfig",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.ConverterConfig"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Configuration for universal converter",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:39.967055",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class",
                  "configuration"
                ]
              }
            },
            {
              "name": "UniversalConverter",
              "docstring": "Universal code converter for any programming language",
              "line_range": [
                65,
                372
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    79,
                    82
                  ],
                  "parameters": [
                    "self",
                    "config"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter.__init__",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes an object with configuration settings for further operations\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:41.102748",
                      "confidence": 0.7,
                      "cache_key": "6d35494a"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "detect_language",
                  "docstring": "Detect programming language from file extension",
                  "line_range": [
                    84,
                    92
                  ],
                  "parameters": [
                    "self",
                    "file_path"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter.detect_language",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter.detect_language"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Detect programming language from file extension",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102788",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "detect_project_languages",
                  "docstring": "Detect all languages in project and count files",
                  "line_range": [
                    94,
                    109
                  ],
                  "parameters": [
                    "self",
                    "project_path"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter.detect_project_languages",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter.detect_project_languages"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Detect all languages in project and count files",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102805",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "get_project_files",
                  "docstring": "Get all relevant files for conversion",
                  "line_range": [
                    111,
                    138
                  ],
                  "parameters": [
                    "self",
                    "project_path",
                    "language"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter.get_project_files",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter.get_project_files"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Get all relevant files for conversion",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102818",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "convert_python_project",
                  "docstring": "Convert Python project to llmstruct format",
                  "line_range": [
                    140,
                    171
                  ],
                  "parameters": [
                    "self",
                    "project_path"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter.convert_python_project",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter.convert_python_project"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Convert Python project to llmstruct format",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102831",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "convert_go_project",
                  "docstring": "Convert Go project to llmstruct format",
                  "line_range": [
                    173,
                    190
                  ],
                  "parameters": [
                    "self",
                    "project_path"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter.convert_go_project",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter.convert_go_project"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Convert Go project to llmstruct format",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102843",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "convert_javascript_project",
                  "docstring": "Convert JavaScript project to llmstruct format",
                  "line_range": [
                    192,
                    223
                  ],
                  "parameters": [
                    "self",
                    "project_path"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter.convert_javascript_project",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter.convert_javascript_project"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Convert JavaScript project to llmstruct format",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102854",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "convert_project",
                  "docstring": "Convert any project to llmstruct format",
                  "line_range": [
                    225,
                    250
                  ],
                  "parameters": [
                    "self",
                    "project_path",
                    "language"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter.convert_project",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter.convert_project"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Convert any project to llmstruct format",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102865",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "convert_multi_language_project",
                  "docstring": "Convert multi-language project with separate sections per language",
                  "line_range": [
                    252,
                    282
                  ],
                  "parameters": [
                    "self",
                    "project_path"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter.convert_multi_language_project",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter.convert_multi_language_project"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Convert multi-language project with separate sections per language",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102881",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_build_project_structure",
                  "docstring": "Build standard llmstruct project structure",
                  "line_range": [
                    284,
                    312
                  ],
                  "parameters": [
                    "self",
                    "language",
                    "project_path",
                    "modules",
                    "toc"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter._build_project_structure",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter._build_project_structure"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Build standard llmstruct project structure",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102894",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_build_empty_project_structure",
                  "docstring": "Build empty structure when conversion fails",
                  "line_range": [
                    314,
                    329
                  ],
                  "parameters": [
                    "self",
                    "language",
                    "project_path",
                    "error"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter._build_empty_project_structure",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter._build_empty_project_structure"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Build empty structure when conversion fails",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102906",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_merge_language_results",
                  "docstring": "Merge multiple language results into unified structure",
                  "line_range": [
                    331,
                    372
                  ],
                  "parameters": [
                    "self",
                    "project_path",
                    "language_results"
                  ],
                  "uid": "parsers.universal_converter.UniversalConverter._merge_language_results",
                  "uid_components": [
                    "parsers",
                    "parsers.universal_converter",
                    "parsers.universal_converter.UniversalConverter",
                    "parsers.universal_converter.UniversalConverter._merge_language_results"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Merge multiple language results into unified structure",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:41.102917",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "parsers.universal_converter.UniversalConverter",
              "uid_components": [
                "parsers",
                "parsers.universal_converter",
                "parsers.universal_converter.UniversalConverter"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Universal code converter for any programming language",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:40.544738",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__post_init__": [],
            "__init__": [
              "GoAnalyzer",
              "JavaScriptParser",
              "ConverterConfig"
            ],
            "detect_language": [
              "Path"
            ],
            "detect_project_languages": [
              "any",
              "self.detect_language",
              "os.walk",
              "languages.get"
            ],
            "get_project_files": [
              "any",
              "files.append",
              "self.detect_language",
              "os.walk"
            ],
            "convert_python_project": [
              "analyze_python",
              "len",
              "modules.append",
              "logger.warning",
              "logger.info",
              "self.get_project_files",
              "toc.append",
              "self._build_project_structure",
              "module_data.get"
            ],
            "convert_go_project": [
              "logger.error",
              "logger.info",
              "convert_to_llmstruct_format",
              "self._build_empty_project_structure",
              "str"
            ],
            "convert_javascript_project": [
              "len",
              "modules.append",
              "logger.warning",
              "logger.info",
              "self.get_project_files",
              "toc.append",
              "self._build_project_structure",
              "module_data.get"
            ],
            "convert_project": [
              "logger.info",
              "self.detect_project_languages",
              "ValueError",
              "self.convert_python_project",
              "self.convert_go_project",
              "self.convert_javascript_project",
              "max",
              "languages.keys",
              "NotImplementedError"
            ],
            "convert_multi_language_project": [
              "logger.error",
              "logger.warning",
              "logger.info",
              "self.detect_project_languages",
              "ValueError",
              "self.convert_python_project",
              "self.convert_go_project",
              "self.convert_javascript_project",
              "self._merge_language_results",
              "languages.keys"
            ],
            "_build_project_structure": [
              "language.title",
              "m.get",
              "len",
              "sum"
            ],
            "_build_empty_project_structure": [],
            "_merge_language_results": [
              "list",
              "all_toc.append",
              "all_modules.append",
              "result.get",
              "language_results.keys",
              "language_results.items",
              "stats.get"
            ],
            "main": [
              "logger.error",
              "exit",
              "UniversalConverter",
              "open",
              "parser.add_argument",
              "converter.convert_multi_language_project",
              "converter.convert_project",
              "Language",
              "result.get",
              "json.dumps",
              "f.write",
              "stats.get",
              "traceback.print_exc",
              "ConverterConfig",
              "print",
              "parser.parse_args",
              "argparse.ArgumentParser"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "Enum",
            "GoAnalyzer",
            "JavaScriptParser",
            "List",
            "Optional",
            "Path",
            "Union",
            "analyze_module",
            "argparse",
            "convert_to_llmstruct_format",
            "dataclass",
            "dataclasses",
            "enum",
            "go_analyzer",
            "javascript_parser",
            "json",
            "logging",
            "os",
            "pathlib",
            "python_parser",
            "sys",
            "traceback",
            "typing"
          ],
          "hash": null,
          "uid": "parsers.universal_converter",
          "uid_components": [
            "parsers",
            "parsers.universal_converter"
          ],
          "uid_type": "module",
          "artifact_id": "956805f9-00f8-f190-3a94-845b72b7b9e1",
          "smart_summary": {
            "summary": "Universal Code Converter - Orchestrates all language parsers",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:38.159125",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 20,
            "lines_of_code": 140,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 25,
            "test_coverage": 0.0,
            "maintainability_index": 0
          },
          "markdown_anchor": {
            "id": "parsers-universal_converter",
            "title": "Module: parsers.universal_converter",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: parsers.universal_converter](#parsers-universal_converter)",
            "html_anchor": "<a id=\"parsers-universal_converter\"></a>"
          }
        },
        {
          "module_id": "parsers.python_parser",
          "path": "parsers/python_parser.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "infer_category",
              "docstring": "Infer module category based on its path.",
              "line_range": [
                13,
                20
              ],
              "parameters": [
                "file_path"
              ],
              "decorators": [],
              "uid": "parsers.python_parser.infer_category",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.infer_category"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Infer module category based on its path.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.103292",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "compute_file_hash",
              "docstring": "Compute SHA-256 hash of file content.",
              "line_range": [
                72,
                79
              ],
              "parameters": [
                "file_path"
              ],
              "decorators": [],
              "uid": "parsers.python_parser.compute_file_hash",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.compute_file_hash"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Compute SHA-256 hash of file content.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.103308",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "computation"
                ]
              }
            },
            {
              "name": "analyze_module",
              "docstring": "Analyze Python module and return structured data.",
              "line_range": [
                82,
                154
              ],
              "parameters": [
                "file_path",
                "root_dir",
                "include_ranges",
                "include_hashes"
              ],
              "decorators": [],
              "uid": "parsers.python_parser.analyze_module",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.analyze_module"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Analyze Python module and return structured data.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.103322",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                26,
                29
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "parsers.python_parser.__init__",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes object attributes and sets default values for class instance\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:41.835321",
                  "confidence": 0.7,
                  "cache_key": "9f9f7062"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "visit_Import",
              "docstring": "Capture import statements.",
              "line_range": [
                31,
                35
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "uid": "parsers.python_parser.visit_Import",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.visit_Import"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Capture import statements.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.835388",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "visit_ImportFrom",
              "docstring": "Capture from-import statements.",
              "line_range": [
                37,
                43
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "uid": "parsers.python_parser.visit_ImportFrom",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.visit_ImportFrom"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Capture from-import statements.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.835423",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "visit_FunctionDef",
              "docstring": "Track function definitions and their calls.",
              "line_range": [
                45,
                50
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "uid": "parsers.python_parser.visit_FunctionDef",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.visit_FunctionDef"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Track function definitions and their calls.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.835446",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "visit_AsyncFunctionDef",
              "docstring": "Track async function definitions and their calls.",
              "line_range": [
                52,
                57
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "uid": "parsers.python_parser.visit_AsyncFunctionDef",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.visit_AsyncFunctionDef"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Track async function definitions and their calls.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.835465",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "visit_Call",
              "docstring": "Capture function calls.",
              "line_range": [
                59,
                69
              ],
              "parameters": [
                "self",
                "node"
              ],
              "decorators": [],
              "uid": "parsers.python_parser.visit_Call",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.visit_Call"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Capture function calls.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.835490",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "CallVisitor",
              "docstring": "AST visitor to collect function calls and dependencies.",
              "line_range": [
                23,
                69
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    26,
                    29
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "parsers.python_parser.CallVisitor.__init__",
                  "uid_components": [
                    "parsers",
                    "parsers.python_parser",
                    "parsers.python_parser.CallVisitor",
                    "parsers.python_parser.CallVisitor.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes an instance of a class with default attributes and values\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:42.459749",
                      "confidence": 0.7,
                      "cache_key": "7d125173"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "visit_Import",
                  "docstring": "Capture import statements.",
                  "line_range": [
                    31,
                    35
                  ],
                  "parameters": [
                    "self",
                    "node"
                  ],
                  "uid": "parsers.python_parser.CallVisitor.visit_Import",
                  "uid_components": [
                    "parsers",
                    "parsers.python_parser",
                    "parsers.python_parser.CallVisitor",
                    "parsers.python_parser.CallVisitor.visit_Import"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Capture import statements.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:42.459802",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "visit_ImportFrom",
                  "docstring": "Capture from-import statements.",
                  "line_range": [
                    37,
                    43
                  ],
                  "parameters": [
                    "self",
                    "node"
                  ],
                  "uid": "parsers.python_parser.CallVisitor.visit_ImportFrom",
                  "uid_components": [
                    "parsers",
                    "parsers.python_parser",
                    "parsers.python_parser.CallVisitor",
                    "parsers.python_parser.CallVisitor.visit_ImportFrom"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Capture from-import statements.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:42.459830",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "visit_FunctionDef",
                  "docstring": "Track function definitions and their calls.",
                  "line_range": [
                    45,
                    50
                  ],
                  "parameters": [
                    "self",
                    "node"
                  ],
                  "uid": "parsers.python_parser.CallVisitor.visit_FunctionDef",
                  "uid_components": [
                    "parsers",
                    "parsers.python_parser",
                    "parsers.python_parser.CallVisitor",
                    "parsers.python_parser.CallVisitor.visit_FunctionDef"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Track function definitions and their calls.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:42.459855",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "visit_AsyncFunctionDef",
                  "docstring": "Track async function definitions and their calls.",
                  "line_range": [
                    52,
                    57
                  ],
                  "parameters": [
                    "self",
                    "node"
                  ],
                  "uid": "parsers.python_parser.CallVisitor.visit_AsyncFunctionDef",
                  "uid_components": [
                    "parsers",
                    "parsers.python_parser",
                    "parsers.python_parser.CallVisitor",
                    "parsers.python_parser.CallVisitor.visit_AsyncFunctionDef"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Track async function definitions and their calls.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:42.459879",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "visit_Call",
                  "docstring": "Capture function calls.",
                  "line_range": [
                    59,
                    69
                  ],
                  "parameters": [
                    "self",
                    "node"
                  ],
                  "uid": "parsers.python_parser.CallVisitor.visit_Call",
                  "uid_components": [
                    "parsers",
                    "parsers.python_parser",
                    "parsers.python_parser.CallVisitor",
                    "parsers.python_parser.CallVisitor.visit_Call"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Capture function calls.",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:42.459904",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [
                "ast.NodeVisitor"
              ],
              "uid": "parsers.python_parser.CallVisitor",
              "uid_components": [
                "parsers",
                "parsers.python_parser",
                "parsers.python_parser.CallVisitor"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "AST visitor to collect function calls and dependencies.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:41.835518",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "infer_category": [
              "Path"
            ],
            "__init__": [
              "set"
            ],
            "visit_Import": [
              "self.generic_visit"
            ],
            "visit_ImportFrom": [
              "self.generic_visit"
            ],
            "visit_FunctionDef": [
              "self.generic_visit",
              "set"
            ],
            "visit_AsyncFunctionDef": [
              "self.generic_visit",
              "set"
            ],
            "visit_Call": [
              "isinstance",
              "self.generic_visit"
            ],
            "compute_file_hash": [
              "open",
              "hashlib.sha256",
              "f.read",
              "logging.error"
            ],
            "analyze_module": [
              "list",
              "sorted",
              "infer_category",
              "ast.get_docstring",
              "visitor.visit",
              "Path",
              "isinstance",
              "ast.unparse",
              "classes.append",
              "logging.error",
              "compute_file_hash",
              "CallVisitor",
              "f.read",
              "ast.walk",
              "open",
              "ast.parse",
              "functions.append",
              "str"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "Optional",
            "Path",
            "Set",
            "ast",
            "hashlib",
            "logging",
            "os",
            "pathlib",
            "typing"
          ],
          "hash": null,
          "uid": "parsers.python_parser",
          "uid_components": [
            "parsers",
            "parsers.python_parser"
          ],
          "uid_type": "module",
          "artifact_id": "4a74a0f8-8fb2-8ca2-28f3-39fa29b8e02b",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:41.103265",
              "confidence": 0.7,
              "cache_key": "dab9ac20"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 11,
            "lines_of_code": 90,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 11,
            "test_coverage": 0.0,
            "maintainability_index": 45
          },
          "markdown_anchor": {
            "id": "parsers-python_parser",
            "title": "Module: parsers.python_parser",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: parsers.python_parser](#parsers-python_parser)",
            "html_anchor": "<a id=\"parsers-python_parser\"></a>"
          }
        },
        {
          "module_id": "parsers.go_analyzer",
          "path": "parsers/go_analyzer.py",
          "category": "core",
          "module_doc": "Универсальный Go анализатор для Docker контейнера\nИспользует правильные подходы: go/packages, go/analysis",
          "functions": [
            {
              "name": "convert_to_llmstruct_format",
              "docstring": "Конвертирует результат анализа в формат llmstruct",
              "line_range": [
                203,
                337
              ],
              "parameters": [
                "analysis",
                "include_ranges",
                "goals"
              ],
              "decorators": [],
              "uid": "parsers.go_analyzer.convert_to_llmstruct_format",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer.convert_to_llmstruct_format"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Конвертирует результат анализа в формат llmstruct",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:42.459994",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_compute_file_hash",
              "docstring": "Вычисляет SHA-256 хэш файла",
              "line_range": [
                339,
                345
              ],
              "parameters": [
                "file_path"
              ],
              "decorators": [],
              "uid": "parsers.go_analyzer._compute_file_hash",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer._compute_file_hash"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Вычисляет SHA-256 хэш файла",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:42.460020",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "main",
              "docstring": "",
              "line_range": [
                347,
                402
              ],
              "parameters": [],
              "decorators": [],
              "uid": "parsers.go_analyzer.main",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer.main"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Executes core program logic and controls flow of operations\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:42.967793",
                  "confidence": 0.7,
                  "cache_key": "eb46b335"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                24,
                26
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "parsers.go_analyzer.__init__",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes a new instance of the class with specified attributes and settings.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:43.512432",
                  "confidence": 0.7,
                  "cache_key": "346fa718"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_setup_analyzer",
              "docstring": "Настраивает временную среду для анализатора",
              "line_range": [
                28,
                66
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "parsers.go_analyzer._setup_analyzer",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer._setup_analyzer"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Настраивает временную среду для анализатора",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:43.512473",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_cleanup",
              "docstring": "Очищает временные файлы",
              "line_range": [
                68,
                72
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "parsers.go_analyzer._cleanup",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer._cleanup"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Очищает временные файлы",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:43.512493",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "analyze_project",
              "docstring": "Анализирует Go проект",
              "line_range": [
                74,
                125
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "uid": "parsers.go_analyzer.analyze_project",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer.analyze_project"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Анализирует Go проект",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:43.512506",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "_fallback_analysis",
              "docstring": "Fallback анализ через простой парсинг файлов",
              "line_range": [
                127,
                201
              ],
              "parameters": [
                "self",
                "project_path"
              ],
              "decorators": [],
              "uid": "parsers.go_analyzer._fallback_analysis",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer._fallback_analysis"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Fallback анализ через простой парсинг файлов",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:43.512519",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "GoAnalyzer",
              "docstring": "Универсальный анализатор Go проектов",
              "line_range": [
                21,
                201
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    24,
                    26
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "parsers.go_analyzer.GoAnalyzer.__init__",
                  "uid_components": [
                    "parsers",
                    "parsers.go_analyzer",
                    "parsers.go_analyzer.GoAnalyzer",
                    "parsers.go_analyzer.GoAnalyzer.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes an instance of a class with default values and configurations\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:43.999483",
                      "confidence": 0.7,
                      "cache_key": "9247f7b1"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_setup_analyzer",
                  "docstring": "Настраивает временную среду для анализатора",
                  "line_range": [
                    28,
                    66
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "parsers.go_analyzer.GoAnalyzer._setup_analyzer",
                  "uid_components": [
                    "parsers",
                    "parsers.go_analyzer",
                    "parsers.go_analyzer.GoAnalyzer",
                    "parsers.go_analyzer.GoAnalyzer._setup_analyzer"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Настраивает временную среду для анализатора",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:43.999523",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_cleanup",
                  "docstring": "Очищает временные файлы",
                  "line_range": [
                    68,
                    72
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "parsers.go_analyzer.GoAnalyzer._cleanup",
                  "uid_components": [
                    "parsers",
                    "parsers.go_analyzer",
                    "parsers.go_analyzer.GoAnalyzer",
                    "parsers.go_analyzer.GoAnalyzer._cleanup"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Очищает временные файлы",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:43.999543",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "analyze_project",
                  "docstring": "Анализирует Go проект",
                  "line_range": [
                    74,
                    125
                  ],
                  "parameters": [
                    "self",
                    "project_path"
                  ],
                  "uid": "parsers.go_analyzer.GoAnalyzer.analyze_project",
                  "uid_components": [
                    "parsers",
                    "parsers.go_analyzer",
                    "parsers.go_analyzer.GoAnalyzer",
                    "parsers.go_analyzer.GoAnalyzer.analyze_project"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Анализирует Go проект",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:43.999557",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "_fallback_analysis",
                  "docstring": "Fallback анализ через простой парсинг файлов",
                  "line_range": [
                    127,
                    201
                  ],
                  "parameters": [
                    "self",
                    "project_path"
                  ],
                  "uid": "parsers.go_analyzer.GoAnalyzer._fallback_analysis",
                  "uid_components": [
                    "parsers",
                    "parsers.go_analyzer",
                    "parsers.go_analyzer.GoAnalyzer",
                    "parsers.go_analyzer.GoAnalyzer._fallback_analysis"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "Fallback анализ через простой парсинг файлов",
                    "summary_generated": false,
                    "source": {
                      "source_type": "docstring",
                      "generated_at": "2025-06-25T19:19:43.999571",
                      "confidence": 0.9,
                      "cache_key": null
                    },
                    "tags": [
                      "method"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "parsers.go_analyzer.GoAnalyzer",
              "uid_components": [
                "parsers",
                "parsers.go_analyzer",
                "parsers.go_analyzer.GoAnalyzer"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "Универсальный анализатор Go проектов",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:43.512533",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "class"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [],
            "_setup_analyzer": [
              "logging.warning",
              "analyzer_source.read_text",
              "tempfile.mkdtemp",
              "subprocess.run",
              "analyzer_file.write_text",
              "Path",
              "str"
            ],
            "_cleanup": [
              "Path",
              "shutil.rmtree"
            ],
            "analyze_project": [
              "logging.warning",
              "logging.error",
              "self._setup_analyzer",
              "json.loads",
              "logging.info",
              "subprocess.run",
              "self._cleanup",
              "self._fallback_analysis"
            ],
            "_fallback_analysis": [
              "line.split",
              "list",
              "sorted",
              "go_mod_path.exists",
              "len",
              "line.strip",
              "go_mod_path.read_text",
              "file_path.relative_to",
              "file_path.read_text",
              "logging.warning",
              "set",
              "packages.add",
              "logging.info",
              "Path",
              "content.split",
              "str",
              "line.startswith"
            ],
            "convert_to_llmstruct_format": [
              "path.endswith",
              "iface.get",
              "len",
              "modules.append",
              "file_data.get",
              "uuid.uuid4",
              "classes.append",
              "sum",
              "_compute_file_hash",
              "analysis.get",
              "struct.get",
              "module.get",
              "fn.get",
              "toc.append",
              "path.replace",
              "functions.append",
              "str"
            ],
            "_compute_file_hash": [
              "open",
              "hashlib.sha256",
              "f.read"
            ],
            "main": [
              "len",
              "open",
              "parser.add_argument",
              "analyzer.analyze_project",
              "convert_to_llmstruct_format",
              "result.get",
              "json.dumps",
              "f.write",
              "stats.get",
              "traceback.print_exc",
              "parser.parse_args",
              "print",
              "sys.exit",
              "GoAnalyzer",
              "Path",
              "argparse.ArgumentParser"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "List",
            "Optional",
            "Path",
            "argparse",
            "datetime",
            "hashlib",
            "json",
            "logging",
            "os",
            "pathlib",
            "shutil",
            "subprocess",
            "sys",
            "tempfile",
            "traceback",
            "typing",
            "uuid"
          ],
          "hash": null,
          "uid": "parsers.go_analyzer",
          "uid_components": [
            "parsers",
            "parsers.go_analyzer"
          ],
          "uid_type": "module",
          "artifact_id": "14239029-babb-8b21-4e13-a03eac8c6427",
          "smart_summary": {
            "summary": "Универсальный Go анализатор для Docker контейнера",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:42.459965",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 10,
            "lines_of_code": 80,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 19,
            "test_coverage": 0.0,
            "maintainability_index": 50
          },
          "markdown_anchor": {
            "id": "parsers-go_analyzer",
            "title": "Module: parsers.go_analyzer",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: parsers.go_analyzer](#parsers-go_analyzer)",
            "html_anchor": "<a id=\"parsers-go_analyzer\"></a>"
          }
        },
        {
          "module_id": "parsers.__init__",
          "path": "parsers/__init__.py",
          "category": "cli",
          "module_doc": "Language-specific parsers for extracting code structure data for LLMStruct JSON.",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [
            "JavaScriptParser",
            "javascript_parser"
          ],
          "hash": null,
          "uid": "parsers.__init__",
          "uid_components": [
            "parsers",
            "parsers.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "95e06b4e-000f-fbcd-5f8a-cb00e886cc6b",
          "smart_summary": {
            "summary": "Language-specific parsers for extracting code structure data for LLMStruct JSON.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:43.999586",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 2,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "parsers-__init__",
            "title": "Module: parsers.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: parsers.__init__](#parsers-__init__)",
            "html_anchor": "<a id=\"parsers-__init__\"></a>"
          }
        },
        {
          "module_id": "parsers.javascript_parser",
          "path": "parsers/javascript_parser.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "__init__",
              "docstring": "",
              "line_range": [
                9,
                13
              ],
              "parameters": [
                "self"
              ],
              "decorators": [],
              "uid": "parsers.javascript_parser.__init__",
              "uid_components": [
                "parsers",
                "parsers.javascript_parser",
                "parsers.javascript_parser.__init__"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Initializes class instance with default values and sets up necessary attributes\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:44.663733",
                  "confidence": 0.7,
                  "cache_key": "ceaa2b45"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "file_hash",
              "docstring": "",
              "line_range": [
                15,
                20
              ],
              "parameters": [
                "self",
                "filepath"
              ],
              "decorators": [],
              "uid": "parsers.javascript_parser.file_hash",
              "uid_components": [
                "parsers",
                "parsers.javascript_parser",
                "parsers.javascript_parser.file_hash"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Generates a hash value for a given file path using cryptographic algorithms\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:45.315945",
                  "confidence": 0.7,
                  "cache_key": "f8583ba1"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "compute_file_metadata",
              "docstring": "",
              "line_range": [
                22,
                41
              ],
              "parameters": [
                "self",
                "filepath",
                "include_hashes"
              ],
              "decorators": [],
              "uid": "parsers.javascript_parser.compute_file_metadata",
              "uid_components": [
                "parsers",
                "parsers.javascript_parser",
                "parsers.javascript_parser.compute_file_metadata"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Computes metadata for a specified file, including optional hash values.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:46.086373",
                  "confidence": 0.7,
                  "cache_key": "91460bc5"
                },
                "tags": [
                  "function",
                  "computation"
                ]
              }
            },
            {
              "name": "parse_module",
              "docstring": "",
              "line_range": [
                43,
                124
              ],
              "parameters": [
                "self",
                "filepath",
                "root_dir",
                "include_ranges",
                "include_hashes"
              ],
              "decorators": [],
              "uid": "parsers.javascript_parser.parse_module",
              "uid_components": [
                "parsers",
                "parsers.javascript_parser",
                "parsers.javascript_parser.parse_module"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Parses a module file for specified ranges and hashes within a root directory.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:46.787114",
                  "confidence": 0.7,
                  "cache_key": "46ff4601"
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            },
            {
              "name": "extract_signature",
              "docstring": "",
              "line_range": [
                78,
                80
              ],
              "parameters": [
                "node"
              ],
              "decorators": [],
              "uid": "parsers.javascript_parser.extract_signature",
              "uid_components": [
                "parsers",
                "parsers.javascript_parser",
                "parsers.javascript_parser.extract_signature"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Extracts the signature information from a given node in the abstract syntax tree.",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:47.441770",
                  "confidence": 0.7,
                  "cache_key": "15724a0d"
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [
            {
              "name": "JavaScriptParser",
              "docstring": "",
              "line_range": [
                8,
                124
              ],
              "methods": [
                {
                  "name": "__init__",
                  "docstring": "",
                  "line_range": [
                    9,
                    13
                  ],
                  "parameters": [
                    "self"
                  ],
                  "uid": "parsers.javascript_parser.JavaScriptParser.__init__",
                  "uid_components": [
                    "parsers",
                    "parsers.javascript_parser",
                    "parsers.javascript_parser.JavaScriptParser",
                    "parsers.javascript_parser.JavaScriptParser.__init__"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Initializes an instance of a class with default values and attributes\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:48.465307",
                      "confidence": 0.7,
                      "cache_key": "3444c7cb"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "file_hash",
                  "docstring": "",
                  "line_range": [
                    15,
                    20
                  ],
                  "parameters": [
                    "self",
                    "filepath"
                  ],
                  "uid": "parsers.javascript_parser.JavaScriptParser.file_hash",
                  "uid_components": [
                    "parsers",
                    "parsers.javascript_parser",
                    "parsers.javascript_parser.JavaScriptParser",
                    "parsers.javascript_parser.JavaScriptParser.file_hash"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Generates a hash value for a given file path using cryptographic algorithms.\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:49.092303",
                      "confidence": 0.7,
                      "cache_key": "641cf0e9"
                    },
                    "tags": [
                      "method"
                    ]
                  }
                },
                {
                  "name": "compute_file_metadata",
                  "docstring": "",
                  "line_range": [
                    22,
                    41
                  ],
                  "parameters": [
                    "self",
                    "filepath",
                    "include_hashes"
                  ],
                  "uid": "parsers.javascript_parser.JavaScriptParser.compute_file_metadata",
                  "uid_components": [
                    "parsers",
                    "parsers.javascript_parser",
                    "parsers.javascript_parser.JavaScriptParser",
                    "parsers.javascript_parser.JavaScriptParser.compute_file_metadata"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Calculates and returns metadata for a specified file, including optional hash values.\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:49.583580",
                      "confidence": 0.7,
                      "cache_key": "e1efc1c0"
                    },
                    "tags": [
                      "method",
                      "computation"
                    ]
                  }
                },
                {
                  "name": "parse_module",
                  "docstring": "",
                  "line_range": [
                    43,
                    124
                  ],
                  "parameters": [
                    "self",
                    "filepath",
                    "root_dir",
                    "include_ranges",
                    "include_hashes"
                  ],
                  "uid": "parsers.javascript_parser.JavaScriptParser.parse_module",
                  "uid_components": [
                    "parsers",
                    "parsers.javascript_parser",
                    "parsers.javascript_parser.JavaScriptParser",
                    "parsers.javascript_parser.JavaScriptParser.parse_module"
                  ],
                  "uid_type": "method",
                  "smart_summary": {
                    "summary": "\"Parses a module file with specified ranges and hashes for analysis\"",
                    "summary_generated": true,
                    "source": {
                      "source_type": "llm_generated",
                      "generated_at": "2025-06-25T19:19:50.307784",
                      "confidence": 0.7,
                      "cache_key": "858edff3"
                    },
                    "tags": [
                      "method",
                      "processing"
                    ]
                  }
                }
              ],
              "bases": [],
              "uid": "parsers.javascript_parser.JavaScriptParser",
              "uid_components": [
                "parsers",
                "parsers.javascript_parser",
                "parsers.javascript_parser.JavaScriptParser"
              ],
              "uid_type": "class",
              "smart_summary": {
                "summary": "\"Parses JavaScript code to generate abstract syntax trees for program analysis.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:47.978718",
                  "confidence": 0.7,
                  "cache_key": "46ba2bda"
                },
                "tags": [
                  "class",
                  "processing"
                ]
              }
            }
          ],
          "callgraph": {
            "__init__": [
              "set"
            ],
            "file_hash": [
              "open",
              "hashlib.sha256",
              "f.read"
            ],
            "compute_file_metadata": [
              "open",
              "self.file_hash",
              "os.stat",
              "sum"
            ],
            "parse_module": [
              "esprima.parseModule",
              "f.read",
              "open",
              "self.compute_file_metadata",
              "str"
            ],
            "extract_signature": [
              "hasattr"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "datetime",
            "esprima",
            "hashlib",
            "os",
            "typing"
          ],
          "hash": null,
          "uid": "parsers.javascript_parser",
          "uid_components": [
            "parsers",
            "parsers.javascript_parser"
          ],
          "uid_type": "module",
          "artifact_id": "f6bc6a2b-cd38-fd20-eff3-7b5ce3c70bce",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:43.999892",
              "confidence": 0.7,
              "cache_key": "d186c6ae"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 7,
            "lines_of_code": 50,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 7,
            "test_coverage": 0.0,
            "maintainability_index": 65
          },
          "markdown_anchor": {
            "id": "parsers-javascript_parser",
            "title": "Module: parsers.javascript_parser",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: parsers.javascript_parser](#parsers-javascript_parser)",
            "html_anchor": "<a id=\"parsers-javascript_parser\"></a>"
          }
        }
      ]
    },
    "generators": {
      "modules": [
        {
          "module_id": "generators.go_json_generator",
          "path": "generators/go_json_generator.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "get_go_folder_structure",
              "docstring": "Capture directory and file structure for Go projects with artifact_id, respecting .gitignore and patterns.",
              "line_range": [
                23,
                98
              ],
              "parameters": [
                "root_dir",
                "gitignore_patterns",
                "include_patterns",
                "exclude_patterns",
                "exclude_dirs"
              ],
              "decorators": [],
              "uid": "generators.go_json_generator.get_go_folder_structure",
              "uid_components": [
                "generators",
                "generators.go_json_generator",
                "generators.go_json_generator.get_go_folder_structure"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Capture directory and file structure for Go projects with artifact_id, respecting .gitignore and patterns.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:50.308127",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "build_go_toc_and_modules",
              "docstring": "Build TOC and modules for Go projects with artifact_id and robust filtering.",
              "line_range": [
                101,
                196
              ],
              "parameters": [
                "root_dir",
                "include_patterns",
                "exclude_patterns",
                "gitignore_patterns",
                "include_ranges",
                "include_hashes",
                "exclude_dirs"
              ],
              "decorators": [],
              "uid": "generators.go_json_generator.build_go_toc_and_modules",
              "uid_components": [
                "generators",
                "generators.go_json_generator",
                "generators.go_json_generator.build_go_toc_and_modules"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Build TOC and modules for Go projects with artifact_id and robust filtering.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:50.308145",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "extract_go_mod_info",
              "docstring": "Extract information from go.mod file.",
              "line_range": [
                199,
                235
              ],
              "parameters": [
                "root_dir"
              ],
              "decorators": [],
              "uid": "generators.go_json_generator.extract_go_mod_info",
              "uid_components": [
                "generators",
                "generators.go_json_generator",
                "generators.go_json_generator.extract_go_mod_info"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Extract information from go.mod file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:50.308158",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "generate_go_json",
              "docstring": "Generate JSON structure for Go project with artifact_id, summary, and tags.",
              "line_range": [
                238,
                312
              ],
              "parameters": [
                "root_dir",
                "include_patterns",
                "exclude_patterns",
                "gitignore_patterns",
                "include_ranges",
                "include_hashes",
                "goals",
                "exclude_dirs"
              ],
              "decorators": [],
              "uid": "generators.go_json_generator.generate_go_json",
              "uid_components": [
                "generators",
                "generators.go_json_generator",
                "generators.go_json_generator.generate_go_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate JSON structure for Go project with artifact_id, summary, and tags.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:50.308170",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "get_go_folder_structure": [
              "sorted",
              "os.walk",
              "p.rstrip",
              "file_path.relative_to",
              "generate_uid_components",
              "set",
              "uuid.uuid4",
              "any",
              "file_path.match",
              "structure.append",
              "create_legacy_artifact_id",
              "Path",
              "p.endswith",
              "str"
            ],
            "build_go_toc_and_modules": [
              "len",
              "modules.append",
              "p.rstrip",
              "f.match",
              "analyze_module",
              "generate_uid_components",
              "set",
              "isinstance",
              "generate_uid",
              "cls.get",
              "any",
              "module.get",
              "toc.append",
              "create_legacy_artifact_id",
              "Path",
              "p.endswith",
              "str"
            ],
            "extract_go_mod_info": [
              "line.split",
              "go_mod_path.exists",
              "len",
              "line.strip",
              "logging.error",
              "content.strip",
              "f.read",
              "open",
              "dependencies.append",
              "Path",
              "line.startswith"
            ],
            "generate_go_json": [
              "list",
              "extract_go_mod_info",
              "len",
              "m.get",
              "build_go_toc_and_modules",
              "set",
              "uuid.uuid4",
              "sum",
              "get_go_folder_structure",
              "go_mod_info.get",
              "Path",
              "str"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "List",
            "Optional",
            "Path",
            "UIDType",
            "analyze_module",
            "core.uid_generator",
            "create_legacy_artifact_id",
            "create_stable_uid",
            "datetime",
            "generate_uid",
            "generate_uid_components",
            "logging",
            "normalize_path_to_module_id",
            "os",
            "parsers.go_parser",
            "pathlib",
            "typing",
            "uuid"
          ],
          "hash": null,
          "uid": "generators.go_json_generator",
          "uid_components": [
            "generators",
            "generators.go_json_generator"
          ],
          "uid_type": "module",
          "artifact_id": "690fbcfd-37af-aae7-be65-bfd5569ad3c8",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:50.308099",
              "confidence": 0.7,
              "cache_key": "2f9c31f0"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 4,
            "lines_of_code": 40,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 20,
            "test_coverage": 0.0,
            "maintainability_index": 80
          },
          "markdown_anchor": {
            "id": "generators-go_json_generator",
            "title": "Module: generators.go_json_generator",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: generators.go_json_generator](#generators-go_json_generator)",
            "html_anchor": "<a id=\"generators-go_json_generator\"></a>"
          }
        },
        {
          "module_id": "generators.__init__",
          "path": "generators/__init__.py",
          "category": "cli",
          "module_doc": "Generator modules for creating LLMStruct JSON outputs from parsed code data.",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [
            "generate_json",
            "get_folder_structure",
            "json_generator"
          ],
          "hash": null,
          "uid": "generators.__init__",
          "uid_components": [
            "generators",
            "generators.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "a9e95c4d-a1f0-d961-7076-d6ebc87e7b5e",
          "smart_summary": {
            "summary": "Generator modules for creating LLMStruct JSON outputs from parsed code data.",
            "summary_generated": false,
            "source": {
              "source_type": "docstring",
              "generated_at": "2025-06-25T19:19:50.308184",
              "confidence": 0.9,
              "cache_key": null
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 3,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "generators-__init__",
            "title": "Module: generators.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: generators.__init__](#generators-__init__)",
            "html_anchor": "<a id=\"generators-__init__\"></a>"
          }
        },
        {
          "module_id": "generators.json_generator",
          "path": "generators/json_generator.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "get_folder_structure",
              "docstring": "Capture directory and file structure with artifact_id, respecting .gitignore and patterns.",
              "line_range": [
                25,
                108
              ],
              "parameters": [
                "root_dir",
                "gitignore_patterns",
                "include_patterns",
                "exclude_patterns",
                "exclude_dirs"
              ],
              "decorators": [],
              "uid": "generators.json_generator.get_folder_structure",
              "uid_components": [
                "generators",
                "generators.json_generator",
                "generators.json_generator.get_folder_structure"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Capture directory and file structure with artifact_id, respecting .gitignore and patterns.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:50.308473",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "build_toc_and_modules",
              "docstring": "Build TOC and modules with artifact_id and robust filtering. Поддержка include_dirs.",
              "line_range": [
                111,
                220
              ],
              "parameters": [
                "root_dir",
                "include_patterns",
                "exclude_patterns",
                "gitignore_patterns",
                "include_ranges",
                "include_hashes",
                "exclude_dirs",
                "include_dirs"
              ],
              "decorators": [],
              "uid": "generators.json_generator.build_toc_and_modules",
              "uid_components": [
                "generators",
                "generators.json_generator",
                "generators.json_generator.build_toc_and_modules"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Build TOC and modules with artifact_id and robust filtering. Поддержка include_dirs.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:50.308490",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "generate_json",
              "docstring": "Generate JSON structure for project with artifact_id, summary, and tags. Поддержка include_dirs.",
              "line_range": [
                223,
                336
              ],
              "parameters": [
                "root_dir",
                "include_patterns",
                "exclude_patterns",
                "gitignore_patterns",
                "include_ranges",
                "include_hashes",
                "goals",
                "exclude_dirs",
                "include_dirs",
                "enable_smart_summaries",
                "llm_config"
              ],
              "decorators": [],
              "uid": "generators.json_generator.generate_json",
              "uid_components": [
                "generators",
                "generators.json_generator",
                "generators.json_generator.generate_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate JSON structure for project with artifact_id, summary, and tags. Поддержка include_dirs.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:19:50.308506",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "generate_json_with_output_file",
              "docstring": "",
              "line_range": [
                339,
                364
              ],
              "parameters": [
                "root_dir",
                "output_file",
                "gitignore_patterns",
                "include_patterns",
                "exclude_patterns",
                "exclude_dirs",
                "include_ranges",
                "include_hashes",
                "goals"
              ],
              "decorators": [],
              "uid": "generators.json_generator.generate_json_with_output_file",
              "uid_components": [
                "generators",
                "generators.json_generator",
                "generators.json_generator.generate_json_with_output_file"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Generates a JSON file with specified patterns and goals from a given directory.\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:50.810694",
                  "confidence": 0.7,
                  "cache_key": "baad9c93"
                },
                "tags": [
                  "function",
                  "generation"
                ]
              }
            },
            {
              "name": "norm_dirname",
              "docstring": "",
              "line_range": [
                133,
                134
              ],
              "parameters": [
                "d"
              ],
              "decorators": [],
              "uid": "generators.json_generator.norm_dirname",
              "uid_components": [
                "generators",
                "generators.json_generator",
                "generators.json_generator.norm_dirname"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Normalizes directory path by removing redundant slashes and resolving relative paths\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:51.360049",
                  "confidence": 0.7,
                  "cache_key": "2f71a8b9"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "is_included_dir",
              "docstring": "",
              "line_range": [
                143,
                147
              ],
              "parameters": [
                "f"
              ],
              "decorators": [],
              "uid": "generators.json_generator.is_included_dir",
              "uid_components": [
                "generators",
                "generators.json_generator",
                "generators.json_generator.is_included_dir"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Determines if a given directory is included in a specified file path.",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:19:52.111283",
                  "confidence": 0.7,
                  "cache_key": "7cc02e9d"
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "get_folder_structure": [
              "abs_dir_path.relative_to",
              "sorted",
              "os.walk",
              "p.rstrip",
              "file_path.relative_to",
              "generate_uid_components",
              "set",
              "create_legacy_artifact_id",
              "abs_dir_path.match",
              "any",
              "file_path.match",
              "structure.append",
              "abs_dir_path.joinpath",
              "Path",
              "p.endswith",
              "str"
            ],
            "build_toc_and_modules": [],
            "norm_dirname": [],
            "is_included_dir": [
              "any",
              "norm_dirname"
            ],
            "generate_json": [
              "set",
              "uuid.uuid4",
              "sum",
              "enhanced_modules.append",
              "module.copy",
              "enhance_entity_with_smart_summary",
              "create_summary_system",
              "enhanced_functions.append",
              "enhanced_methods.append",
              "module.get",
              "Path",
              "list",
              "get_folder_structure",
              "build_toc_and_modules",
              "str",
              "enhance_json_structure",
              "enhanced_classes.append",
              "len",
              "cls.get"
            ],
            "generate_json_with_output_file": [
              "open",
              "json.dump",
              "generate_json"
            ]
          },
          "dependencies": [
            "Any",
            "Dict",
            "List",
            "Optional",
            "Path",
            "UIDType",
            "analyze_module",
            "core.json_structure",
            "core.summary_system",
            "core.uid_generator",
            "create_legacy_artifact_id",
            "create_stable_uid",
            "create_summary_system",
            "datetime",
            "enhance_entity_with_smart_summary",
            "enhance_json_structure",
            "generate_uid",
            "generate_uid_components",
            "json",
            "logging",
            "normalize_path_to_module_id",
            "os",
            "parsers.python_parser",
            "pathlib",
            "typing",
            "uuid"
          ],
          "hash": null,
          "uid": "generators.json_generator",
          "uid_components": [
            "generators",
            "generators.json_generator"
          ],
          "uid_type": "module",
          "artifact_id": "2809b2d9-cd1b-3200-a59a-0bf46ced4497",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:19:50.308449",
              "confidence": 0.7,
              "cache_key": "b6fe328a"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 6,
            "lines_of_code": 60,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 26,
            "test_coverage": 0.0,
            "maintainability_index": 70
          },
          "markdown_anchor": {
            "id": "generators-json_generator",
            "title": "Module: generators.json_generator",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: generators.json_generator](#generators-json_generator)",
            "html_anchor": "<a id=\"generators-json_generator\"></a>"
          }
        }
      ]
    },
    "modules": {
      "commands": [
        {
          "module_id": "modules.commands.metrics",
          "path": "modules/commands/metrics.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "metrics_status",
              "docstring": "Показать текущий статус метрик",
              "line_range": [
                1,
                20
              ],
              "parameters": [],
              "decorators": [],
              "uid": "modules.commands.metrics.metrics_status",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.metrics",
                "modules.commands.metrics.metrics_status"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Показать текущий статус метрик",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.133754",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "metrics_summary",
              "docstring": "Показать детальную сводку метрик",
              "line_range": [
                22,
                66
              ],
              "parameters": [],
              "decorators": [],
              "uid": "modules.commands.metrics.metrics_summary",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.metrics",
                "modules.commands.metrics.metrics_summary"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Показать детальную сводку метрик",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.133900",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "metrics_analytics",
              "docstring": "Сгенерировать аналитические данные",
              "line_range": [
                68,
                104
              ],
              "parameters": [
                "output_file",
                "format"
              ],
              "decorators": [],
              "uid": "modules.commands.metrics.metrics_analytics",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.metrics",
                "modules.commands.metrics.metrics_analytics"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Сгенерировать аналитические данные",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.133972",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "metrics_report",
              "docstring": "Создать всесторонний отчет",
              "line_range": [
                106,
                134
              ],
              "parameters": [
                "sessions",
                "output_file"
              ],
              "decorators": [],
              "uid": "modules.commands.metrics.metrics_report",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.metrics",
                "modules.commands.metrics.metrics_report"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Создать всесторонний отчет",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.134033",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "metrics_track",
              "docstring": "Ручное отслеживание событий",
              "line_range": [
                136,
                145
              ],
              "parameters": [
                "event_type",
                "details"
              ],
              "decorators": [],
              "uid": "modules.commands.metrics.metrics_track",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.metrics",
                "modules.commands.metrics.metrics_track"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Ручное отслеживание событий",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.134089",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "metrics_tokens",
              "docstring": "Показать детальную статистику токенов",
              "line_range": [
                147,
                185
              ],
              "parameters": [],
              "decorators": [],
              "uid": "modules.commands.metrics.metrics_tokens",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.metrics",
                "modules.commands.metrics.metrics_tokens"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Показать детальную статистику токенов",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.134143",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cmd_metrics",
              "docstring": "Управление метриками проекта",
              "line_range": [
                187,
                205
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.commands.metrics.cmd_metrics",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.metrics",
                "modules.commands.metrics.cmd_metrics"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Управление метриками проекта",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.134224",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "metrics_status": [
              "print",
              "get_metrics_tracker",
              "tracker.get_session_summary"
            ],
            "metrics_summary": [
              "print",
              "max",
              "get_metrics_tracker",
              "tracker.get_session_summary"
            ],
            "metrics_analytics": [
              "json.dump",
              "writer.writerow",
              "get_metrics_tracker",
              "tracker.get_session_summary",
              "json.dumps",
              "csv.writer",
              "tracker.get_analytics_data",
              "print",
              "open",
              "time.strftime",
              "enumerate"
            ],
            "metrics_report": [
              "len",
              "min",
              "get_metrics_tracker",
              "sum",
              "tracker.get_analytics_data",
              "print",
              "open",
              "time.strftime",
              "analytics.get",
              "f.write"
            ],
            "metrics_track": [
              "print",
              "track_workflow_event"
            ],
            "metrics_tokens": [
              "get_metrics_tracker",
              "summary.get",
              "interaction.get",
              "get_token_summary",
              "print",
              "enumerate"
            ],
            "cmd_metrics": [
              "metrics_analytics",
              "metrics_summary",
              "metrics_tokens",
              "metrics_status",
              "metrics_track",
              "print",
              "metrics_report"
            ]
          },
          "dependencies": [
            "csv",
            "get_metrics_tracker",
            "get_token_summary",
            "json",
            "llmstruct.metrics_tracker",
            "time",
            "track_workflow_event"
          ],
          "hash": null,
          "uid": "modules.commands.metrics",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.metrics"
          ],
          "uid_type": "module",
          "artifact_id": "6b8e1c22-d3a4-aa67-1d7b-75053bf77ab8",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:27.133632",
              "confidence": 0.7,
              "cache_key": "afc6c771"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 7,
            "lines_of_code": 70,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 7,
            "test_coverage": 0.0,
            "maintainability_index": 65
          },
          "markdown_anchor": {
            "id": "modules-commands-metrics",
            "title": "Module: modules.commands.metrics",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.commands.metrics](#modules-commands-metrics)",
            "html_anchor": "<a id=\"modules-commands-metrics\"></a>"
          }
        },
        {
          "module_id": "modules.commands.services",
          "path": "modules/commands/services.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "add_api_bot_commands",
              "docstring": "Добавить команды для управления API и Bot сервисами",
              "line_range": [
                10,
                47
              ],
              "parameters": [
                "subparsers"
              ],
              "decorators": [],
              "uid": "modules.commands.services.add_api_bot_commands",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.services",
                "modules.commands.services.add_api_bot_commands"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Добавить команды для управления API и Bot сервисами",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.135798",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cmd_api_management",
              "docstring": "Управление API сервером",
              "line_range": [
                49,
                111
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.commands.services.cmd_api_management",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.services",
                "modules.commands.services.cmd_api_management"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Управление API сервером",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.135949",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cmd_bot_management",
              "docstring": "Управление Telegram ботами",
              "line_range": [
                113,
                190
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.commands.services.cmd_bot_management",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.services",
                "modules.commands.services.cmd_bot_management"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Управление Telegram ботами",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.136095",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "cmd_services",
              "docstring": "Управление всеми сервисами (API + Bots)",
              "line_range": [
                192,
                233
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.commands.services.cmd_services",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.services",
                "modules.commands.services.cmd_services"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Управление всеми сервисами (API + Bots)",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.136264",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "add_api_bot_commands": [
              "metrics_parser.add_subparsers",
              "api_subparsers.add_parser",
              "metrics_track.add_argument",
              "bot_subparsers.add_parser",
              "services_subparsers.add_parser",
              "metrics_report.add_argument",
              "api_parser.add_subparsers",
              "metrics_analytics.add_argument",
              "api_start.add_argument",
              "subparsers.add_parser",
              "services_parser.add_subparsers",
              "metrics_subparsers.add_parser",
              "bot_parser.add_subparsers",
              "bot_start.add_argument"
            ],
            "cmd_api_management": [
              "pid_file.exists",
              "process.terminate",
              "response.json",
              "data.get",
              "requests.get",
              "process.wait",
              "pid_file.unlink",
              "requests.post",
              "psutil.Process",
              "f.write",
              "venv_path.exists",
              "f.read",
              "print",
              "open",
              "int",
              "Path",
              "str",
              "subprocess.Popen"
            ],
            "cmd_bot_management": [
              "pid_file.exists",
              "process.terminate",
              "process.is_running",
              "process.wait",
              "active_bots.append",
              "pid_file.unlink",
              "psutil.Process",
              "os.getenv",
              "bot_scripts.get",
              "f.write",
              "f.read",
              "print",
              "open",
              "int",
              "Path",
              "str",
              "subprocess.Popen"
            ],
            "cmd_services": [
              "cmd_api_management",
              "cmd_bot_management",
              "time.sleep",
              "print",
              "type"
            ]
          },
          "dependencies": [
            "Path",
            "os",
            "pathlib",
            "psutil",
            "requests",
            "signal",
            "subprocess",
            "time"
          ],
          "hash": null,
          "uid": "modules.commands.services",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.services"
          ],
          "uid_type": "module",
          "artifact_id": "21aaf1a3-6542-925a-77e2-7dde980c16e3",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:27.135612",
              "confidence": 0.7,
              "cache_key": "2bfeb13d"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 4,
            "lines_of_code": 40,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 8,
            "test_coverage": 0.0,
            "maintainability_index": 80
          },
          "markdown_anchor": {
            "id": "modules-commands-services",
            "title": "Module: modules.commands.services",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.commands.services](#modules-commands-services)",
            "html_anchor": "<a id=\"modules-commands-services\"></a>"
          }
        },
        {
          "module_id": "modules.commands.__init__",
          "path": "modules/commands/__init__.py",
          "category": "cli",
          "module_doc": "",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [],
          "hash": null,
          "uid": "modules.commands.__init__",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "0dec485c-915d-a18f-e713-3bd6f3de8adc",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:27.137672",
              "confidence": 0.7,
              "cache_key": "7b2a2684"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 0,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "modules-commands-__init__",
            "title": "Module: modules.commands.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.commands.__init__](#modules-commands-__init__)",
            "html_anchor": "<a id=\"modules-commands-__init__\"></a>"
          }
        },
        {
          "module_id": "modules.commands.queue",
          "path": "modules/commands/queue.py",
          "category": "core",
          "module_doc": "",
          "functions": [
            {
              "name": "process_cli_queue_enhanced",
              "docstring": "Enhanced queue processing with workflow support, performance tracking, and safety validation.",
              "line_range": [
                9,
                208
              ],
              "parameters": [
                "root_dir",
                "context_path",
                "args",
                "cache",
                "client"
              ],
              "decorators": [],
              "uid": "modules.commands.queue.process_cli_queue_enhanced",
              "uid_components": [
                "modules",
                "modules.commands",
                "modules.commands.queue",
                "modules.commands.queue.process_cli_queue_enhanced"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Enhanced queue processing with workflow support, performance tracking, and safety validation.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.138907",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "process_cli_queue_enhanced": [
              "write_to_file",
              "options.get",
              "workflow.get",
              "len",
              "isinstance",
              "get_folder_structure",
              "attach_to_llm_request",
              "time.time",
              "logging.error",
              "load_gitignore",
              "item.get",
              "logging.info",
              "read_file_content",
              "print",
              "open",
              "json.load",
              "enumerate",
              "client.query"
            ]
          },
          "dependencies": [
            "attach_to_llm_request",
            "get_folder_structure",
            "json",
            "llmstruct.generators.json_generator",
            "llmstruct.modules.cli.utils",
            "llmstruct.self_run",
            "load_gitignore",
            "logging",
            "os",
            "read_file_content",
            "time",
            "write_to_file"
          ],
          "hash": null,
          "uid": "modules.commands.queue",
          "uid_components": [
            "modules",
            "modules.commands",
            "modules.commands.queue"
          ],
          "uid_type": "module",
          "artifact_id": "bb4ee01f-b499-bb4f-b901-96cdaddce8c2",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:27.138790",
              "confidence": 0.7,
              "cache_key": "e99e7a05"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 12,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "modules-commands-queue",
            "title": "Module: modules.commands.queue",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.commands.queue](#modules-commands-queue)",
            "html_anchor": "<a id=\"modules-commands-queue\"></a>"
          }
        }
      ],
      "cli": [
        {
          "module_id": "modules.cli.audit",
          "path": "modules/cli/audit.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "audit",
              "docstring": "Audit project structure and generate reports.",
              "line_range": [
                4,
                17
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.audit.audit",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.audit",
                "modules.cli.audit.audit"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Audit project structure and generate reports.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.140019",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "audit": [
              "analyze_duplicates",
              "hasattr",
              "file_path.exists",
              "print",
              "Path"
            ]
          },
          "dependencies": [
            "Path",
            "analyze_duplicates",
            "llmstruct.cli",
            "os",
            "pathlib"
          ],
          "hash": null,
          "uid": "modules.cli.audit",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.audit"
          ],
          "uid_type": "module",
          "artifact_id": "78193442-798c-3039-8969-26103184cdb1",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:27.139883",
              "confidence": 0.7,
              "cache_key": "36752e22"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 5,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "modules-cli-audit",
            "title": "Module: modules.cli.audit",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.audit](#modules-cli-audit)",
            "html_anchor": "<a id=\"modules-cli-audit\"></a>"
          }
        },
        {
          "module_id": "modules.cli.utils",
          "path": "modules/cli/utils.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "load_gitignore",
              "docstring": "Load and normalize patterns from .gitignore.",
              "line_range": [
                6,
                20
              ],
              "parameters": [
                "root_dir"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.load_gitignore",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.load_gitignore"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Load and normalize patterns from .gitignore.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.141531",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "load_config",
              "docstring": "Load settings from llmstruct.toml or return empty dict.",
              "line_range": [
                22,
                32
              ],
              "parameters": [
                "root_dir"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.load_config",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.load_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Load settings from llmstruct.toml or return empty dict.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.141603",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "read_file_content",
              "docstring": "Read content of a file if it exists and is a text file.",
              "line_range": [
                34,
                43
              ],
              "parameters": [
                "file_path"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.read_file_content",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.read_file_content"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Read content of a file if it exists and is a text file.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.141665",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "write_to_file",
              "docstring": "Write content to a file in base_dir (default ./tmp) and return the path.",
              "line_range": [
                45,
                63
              ],
              "parameters": [
                "content",
                "filename",
                "base_dir"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.write_to_file",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.write_to_file"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Write content to a file in base_dir (default ./tmp) and return the path.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.141721",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "parse_files_from_response",
              "docstring": "Extract filenames and content from LLM response (e.g., ```filename\ncontent```).",
              "line_range": [
                65,
                72
              ],
              "parameters": [
                "response"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.parse_files_from_response",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.parse_files_from_response"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Extract filenames and content from LLM response (e.g., ```filename",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:27.141774",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            },
            {
              "name": "get_cache_config",
              "docstring": "",
              "line_range": [
                74,
                75
              ],
              "parameters": [
                "config"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.get_cache_config",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.get_cache_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Retrieves and returns cache configuration settings based on input parameters.",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:27.616568",
                  "confidence": 0.7,
                  "cache_key": "4d33ef71"
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_copilot_config",
              "docstring": "",
              "line_range": [
                77,
                78
              ],
              "parameters": [
                "config"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.get_copilot_config",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.get_copilot_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Retrieves and returns copilot configuration settings from specified input\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:28.683854",
                  "confidence": 0.7,
                  "cache_key": "25fafeef"
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_queue_config",
              "docstring": "",
              "line_range": [
                80,
                81
              ],
              "parameters": [
                "config"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.get_queue_config",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.get_queue_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Retrieves and returns configuration settings for a specified queue\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:30.988571",
                  "confidence": 0.7,
                  "cache_key": "33f93efe"
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_context_config",
              "docstring": "",
              "line_range": [
                83,
                84
              ],
              "parameters": [
                "config"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.get_context_config",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.get_context_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Retrieves and returns context configuration settings for specified parameters\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:31.686780",
                  "confidence": 0.7,
                  "cache_key": "882cbae0"
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            },
            {
              "name": "get_exclude_dirs",
              "docstring": "",
              "line_range": [
                86,
                93
              ],
              "parameters": [
                "config"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.get_exclude_dirs",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.get_exclude_dirs"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Retrieves directories to exclude from processing based on configuration settings\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:32.274533",
                  "confidence": 0.7,
                  "cache_key": "3d4b5e46"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_include_patterns",
              "docstring": "",
              "line_range": [
                95,
                98
              ],
              "parameters": [
                "config"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.get_include_patterns",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.get_include_patterns"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Retrieves include patterns from configuration settings\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:32.845613",
                  "confidence": 0.7,
                  "cache_key": "30f632f6"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_exclude_patterns",
              "docstring": "",
              "line_range": [
                100,
                103
              ],
              "parameters": [
                "config"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.get_exclude_patterns",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.get_exclude_patterns"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Retrieves and processes exclusion patterns from configuration settings\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:33.451791",
                  "confidence": 0.7,
                  "cache_key": "2e8f5f3f"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_max_file_size",
              "docstring": "",
              "line_range": [
                105,
                106
              ],
              "parameters": [
                "config"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.get_max_file_size",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.get_max_file_size"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Determines and returns the maximum file size based on the provided configuration.",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:33.999580",
                  "confidence": 0.7,
                  "cache_key": "f7e8a106"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_struct_file_path",
              "docstring": "",
              "line_range": [
                108,
                109
              ],
              "parameters": [
                "config"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.get_struct_file_path",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.get_struct_file_path"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Retrieves the file path for a specified struct from the configuration data\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:34.666815",
                  "confidence": 0.7,
                  "cache_key": "033f8569"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "get_context_file_path",
              "docstring": "",
              "line_range": [
                111,
                112
              ],
              "parameters": [
                "config"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.get_context_file_path",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.get_context_file_path"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Returns the file path for a specified context configuration\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:35.269400",
                  "confidence": 0.7,
                  "cache_key": "e998b257"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "save_config",
              "docstring": "",
              "line_range": [
                114,
                121
              ],
              "parameters": [
                "config",
                "root_dir"
              ],
              "decorators": [],
              "uid": "modules.cli.utils.save_config",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.utils",
                "modules.cli.utils.save_config"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Saves configuration data to specified root directory\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:35.893108",
                  "confidence": 0.7,
                  "cache_key": "9248d387"
                },
                "tags": [
                  "function",
                  "configuration"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "load_gitignore": [
              "gitignore_path.exists",
              "line.strip",
              "logging.error",
              "gitignore_path.open",
              "Path",
              "line.startswith"
            ],
            "load_config": [
              "toml.load",
              "config_path.exists",
              "logging.error",
              "config_path.open",
              "Path"
            ],
            "read_file_content": [
              "path.is_file",
              "path.open",
              "logging.error",
              "f.read",
              "Path"
            ],
            "write_to_file": [
              "re.sub",
              "logging.warning",
              "logging.error",
              "file_path.exists",
              "logging.info",
              "file_path.open",
              "base_path.mkdir",
              "Path",
              "str",
              "f.write"
            ],
            "parse_files_from_response": [
              "content.strip",
              "re.findall",
              "files.append",
              "filename.strip"
            ],
            "get_cache_config": [
              "config.get"
            ],
            "get_copilot_config": [
              "config.get"
            ],
            "get_queue_config": [
              "config.get"
            ],
            "get_context_config": [
              "config.get"
            ],
            "get_exclude_dirs": [
              "list",
              "parsing_config.get",
              "set",
              "config.get",
              "cli_config.get"
            ],
            "get_include_patterns": [
              "cli_config.get",
              "parsing_config.get",
              "config.get"
            ],
            "get_exclude_patterns": [
              "cli_config.get",
              "parsing_config.get",
              "config.get"
            ],
            "get_max_file_size": [
              "config.get"
            ],
            "get_struct_file_path": [
              "config.get"
            ],
            "get_context_file_path": [
              "config.get"
            ],
            "save_config": [
              "toml.dump",
              "Path",
              "logging.error",
              "config_path.open"
            ]
          },
          "dependencies": [
            "List",
            "Optional",
            "Path",
            "logging",
            "pathlib",
            "re",
            "toml",
            "typing"
          ],
          "hash": null,
          "uid": "modules.cli.utils",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.utils"
          ],
          "uid_type": "module",
          "artifact_id": "0add91a5-3f17-0551-ef15-50666dc87f59",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:27.141418",
              "confidence": 0.7,
              "cache_key": "dab7f057"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 16,
            "lines_of_code": 160,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 8,
            "test_coverage": 0.0,
            "maintainability_index": 20
          },
          "markdown_anchor": {
            "id": "modules-cli-utils",
            "title": "Module: modules.cli.utils",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.utils](#modules-cli-utils)",
            "html_anchor": "<a id=\"modules-cli-utils\"></a>"
          }
        },
        {
          "module_id": "modules.cli.dogfood",
          "path": "modules/cli/dogfood.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "dogfood",
              "docstring": "Run dogfooding analysis.",
              "line_range": [
                3,
                5
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.dogfood.dogfood",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.dogfood",
                "modules.cli.dogfood.dogfood"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Run dogfooding analysis.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:35.893436",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "dogfood": [
              "logging.warning"
            ]
          },
          "dependencies": [
            "logging"
          ],
          "hash": null,
          "uid": "modules.cli.dogfood",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.dogfood"
          ],
          "uid_type": "module",
          "artifact_id": "ea6b87d7-40b8-682f-a9fe-f7a898588176",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.893409",
              "confidence": 0.7,
              "cache_key": "b6e8f24d"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 1,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "modules-cli-dogfood",
            "title": "Module: modules.cli.dogfood",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.dogfood](#modules-cli-dogfood)",
            "html_anchor": "<a id=\"modules-cli-dogfood\"></a>"
          }
        },
        {
          "module_id": "modules.cli.handlers_legacy",
          "path": "modules/cli/handlers_legacy.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "interactive_legacy",
              "docstring": "Run interactive CLI with LLM, supporting file/folder viewing and writing.",
              "line_range": [
                14,
                149
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.handlers_legacy.interactive_legacy",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.handlers_legacy",
                "modules.cli.handlers_legacy.interactive_legacy"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Run interactive CLI with LLM, supporting file/folder viewing and writing.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:35.893681",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "interactive_legacy": [
              "input",
              "user_input.lower",
              "cache.close",
              "logging.error",
              "parse",
              "write_to_file",
              "user_input.startswith",
              "attach_to_llm_request",
              "Path",
              "os.listdir",
              "m.group",
              "get_folder_structure",
              "load_gitignore",
              "print",
              "JSONCache",
              "client.query",
              "re.match",
              "LLMClient",
              "sorted",
              "logging.warning",
              "args_str.strip",
              "json.dumps",
              "read_file_content"
            ]
          },
          "dependencies": [
            "JSONCache",
            "LLMClient",
            "Path",
            "attach_to_llm_request",
            "get_folder_structure",
            "json",
            "llmstruct",
            "llmstruct.cache",
            "llmstruct.cli",
            "llmstruct.generators.json_generator",
            "llmstruct.modules.cli.utils",
            "llmstruct.self_run",
            "load_gitignore",
            "logging",
            "os",
            "parse",
            "pathlib",
            "re",
            "read_file_content",
            "time",
            "write_to_file"
          ],
          "hash": null,
          "uid": "modules.cli.handlers_legacy",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.handlers_legacy"
          ],
          "uid_type": "module",
          "artifact_id": "395fdffd-9068-de81-e7af-d65d143c375e",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.893656",
              "confidence": 0.7,
              "cache_key": "9ee2fd32"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 21,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "modules-cli-handlers_legacy",
            "title": "Module: modules.cli.handlers_legacy",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.handlers_legacy](#modules-cli-handlers_legacy)",
            "html_anchor": "<a id=\"modules-cli-handlers_legacy\"></a>"
          }
        },
        {
          "module_id": "modules.cli.analyze_duplicates",
          "path": "modules/cli/analyze_duplicates.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "analyze_duplicates",
              "docstring": "Analyze function duplication using struct.json deep analysis.",
              "line_range": [
                1,
                81
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.analyze_duplicates.analyze_duplicates",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.analyze_duplicates",
                "modules.cli.analyze_duplicates.analyze_duplicates"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Analyze function duplication using struct.json deep analysis.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:35.893920",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "analyze_duplicates": [
              "sorted",
              "r.get",
              "json.dump",
              "len",
              "getattr",
              "hasattr",
              "analysis.get",
              "json.dumps",
              "duplicates.items",
              "traceback.print_exc",
              "rec.get",
              "print",
              "open",
              "enumerate",
              "WorkflowOrchestrator",
              "orchestrator.analyze_codebase_for_duplicates",
              "filtered_duplicates.items",
              "duplication_data.get"
            ]
          },
          "dependencies": [
            "WorkflowOrchestrator",
            "json",
            "llmstruct.workflow_orchestrator",
            "traceback"
          ],
          "hash": null,
          "uid": "modules.cli.analyze_duplicates",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.analyze_duplicates"
          ],
          "uid_type": "module",
          "artifact_id": "d296e3f0-725f-1b1b-422c-786ce50e9d1f",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.893896",
              "confidence": 0.7,
              "cache_key": "f06af08f"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 4,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "modules-cli-analyze_duplicates",
            "title": "Module: modules.cli.analyze_duplicates",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.analyze_duplicates](#modules-cli-analyze_duplicates)",
            "html_anchor": "<a id=\"modules-cli-analyze_duplicates\"></a>"
          }
        },
        {
          "module_id": "modules.cli.__init__",
          "path": "modules/cli/__init__.py",
          "category": "cli",
          "module_doc": "",
          "functions": [],
          "classes": [],
          "callgraph": {},
          "dependencies": [],
          "hash": null,
          "uid": "modules.cli.__init__",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.__init__"
          ],
          "uid_type": "module",
          "artifact_id": "f8a2ed32-3d3e-d70c-bbc5-c7001837823d",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.894228",
              "confidence": 0.7,
              "cache_key": "34dd4642"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 0,
            "lines_of_code": 0,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 0,
            "test_coverage": 0.0,
            "maintainability_index": 100
          },
          "markdown_anchor": {
            "id": "modules-cli-__init__",
            "title": "Module: modules.cli.__init__",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.__init__](#modules-cli-__init__)",
            "html_anchor": "<a id=\"modules-cli-__init__\"></a>"
          }
        },
        {
          "module_id": "modules.cli.review",
          "path": "modules/cli/review.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "review",
              "docstring": "Review codebase with LLM.",
              "line_range": [
                3,
                5
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.review.review",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.review",
                "modules.cli.review.review"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Review codebase with LLM.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:35.894517",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "review": [
              "logging.warning"
            ]
          },
          "dependencies": [
            "logging"
          ],
          "hash": null,
          "uid": "modules.cli.review",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.review"
          ],
          "uid_type": "module",
          "artifact_id": "b592191d-da7a-55d2-3cd8-9ea2d38dbda6",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.894492",
              "confidence": 0.7,
              "cache_key": "01ebe2d8"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 1,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "modules-cli-review",
            "title": "Module: modules.cli.review",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.review](#modules-cli-review)",
            "html_anchor": "<a id=\"modules-cli-review\"></a>"
          }
        },
        {
          "module_id": "modules.cli.context",
          "path": "modules/cli/context.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "context",
              "docstring": "Generate context.json from input JSON.",
              "line_range": [
                3,
                5
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.context.context",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.context",
                "modules.cli.context.context"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Generate context.json from input JSON.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:35.894751",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "context": [
              "logging.warning"
            ]
          },
          "dependencies": [
            "logging"
          ],
          "hash": null,
          "uid": "modules.cli.context",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.context"
          ],
          "uid_type": "module",
          "artifact_id": "5a425ae8-9fdf-55cd-f092-f60f4c9fc31d",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.894727",
              "confidence": 0.7,
              "cache_key": "2ed958ea"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 1,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "modules-cli-context",
            "title": "Module: modules.cli.context",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.context](#modules-cli-context)",
            "html_anchor": "<a id=\"modules-cli-context\"></a>"
          }
        },
        {
          "module_id": "modules.cli.query",
          "path": "modules/cli/query.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "query",
              "docstring": "Query LLMs with prompt and context.",
              "line_range": [
                8,
                64
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.query.query",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.query",
                "modules.cli.query.query"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Query LLMs with prompt and context.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:35.895039",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "query": [
              "LLMClient",
              "orchestrator.get_context_for_scenario",
              "json.dump",
              "logging.warning",
              "cache.close",
              "create_context_orchestrator",
              "logging.error",
              "hasattr",
              "client.query_with_context",
              "logging.info",
              "Path",
              "JSONCache",
              "client.query"
            ]
          },
          "dependencies": [
            "JSONCache",
            "LLMClient",
            "Path",
            "create_context_orchestrator",
            "json",
            "llmstruct",
            "llmstruct.cache",
            "llmstruct.context_orchestrator",
            "logging",
            "os",
            "pathlib"
          ],
          "hash": null,
          "uid": "modules.cli.query",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.query"
          ],
          "uid_type": "module",
          "artifact_id": "bd5a581e-f512-0848-8424-b135cac79d5a",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.895000",
              "confidence": 0.7,
              "cache_key": "2ff04bc4"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 11,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "modules-cli-query",
            "title": "Module: modules.cli.query",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.query](#modules-cli-query)",
            "html_anchor": "<a id=\"modules-cli-query\"></a>"
          }
        },
        {
          "module_id": "modules.cli.copilot",
          "path": "modules/cli/copilot.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "copilot",
              "docstring": "Copilot integration and context management.",
              "line_range": [
                5,
                113
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.copilot.copilot",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.copilot",
                "modules.cli.copilot.copilot"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Copilot integration and context management.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:35.895464",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "management"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "copilot": [
              "manager.close",
              "manager.unload_context_layer",
              "template_path.exists",
              "manager.refresh_all_contexts",
              "logging.error",
              "smart_suggest",
              "logging.info",
              "open",
              "manager.get_context_status",
              "manager.load_context_layer",
              "initialize_copilot",
              "config_path.exists",
              "getattr",
              "shutil.copy",
              "Path",
              "enumerate",
              "f.write",
              "layers.split",
              "print",
              "hasattr",
              "manager.validate_change",
              "manager.export_context"
            ]
          },
          "dependencies": [
            "Path",
            "initialize_copilot",
            "llmstruct.copilot",
            "logging",
            "pathlib",
            "shutil",
            "smart_suggest"
          ],
          "hash": null,
          "uid": "modules.cli.copilot",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.copilot"
          ],
          "uid_type": "module",
          "artifact_id": "35f4555d-190b-7b25-34f3-7b931e443552",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.895422",
              "confidence": 0.7,
              "cache_key": "cdd96368"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 7,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "modules-cli-copilot",
            "title": "Module: modules.cli.copilot",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.copilot](#modules-cli-copilot)",
            "html_anchor": "<a id=\"modules-cli-copilot\"></a>"
          }
        },
        {
          "module_id": "modules.cli.parse",
          "path": "modules/cli/parse.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "parse",
              "docstring": "Parse codebase and generate struct.json.",
              "line_range": [
                9,
                93
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.parse.parse",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.parse",
                "modules.cli.parse.parse"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Parse codebase and generate struct.json.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:35.895740",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "parse": [
              "parsing_config.get",
              "json.dump",
              "cache.close",
              "logging.error",
              "logging.info",
              "cli_config.get",
              "load_config",
              "getattr",
              "func.get",
              "generate_json",
              "module.get",
              "struct_path.open",
              "Path",
              "ast_path.open",
              "mod_dir.mkdir",
              "JSONCache",
              "logging.warning",
              "config.get",
              "struct_data.get",
              "cache.cache_json"
            ]
          },
          "dependencies": [
            "JSONCache",
            "Path",
            "generate_json",
            "json",
            "llmstruct.cache",
            "llmstruct.generators.json_generator",
            "llmstruct.modules.cli.utils",
            "load_config",
            "logging",
            "os",
            "pathlib"
          ],
          "hash": null,
          "uid": "modules.cli.parse",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.parse"
          ],
          "uid_type": "module",
          "artifact_id": "2d27c7fa-4728-2688-7dd3-c5d794db429d",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.895715",
              "confidence": 0.7,
              "cache_key": "57495e29"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 1,
            "lines_of_code": 10,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 11,
            "test_coverage": 0.0,
            "maintainability_index": 95
          },
          "markdown_anchor": {
            "id": "modules-cli-parse",
            "title": "Module: modules.cli.parse",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.parse](#modules-cli-parse)",
            "html_anchor": "<a id=\"modules-cli-parse\"></a>"
          }
        },
        {
          "module_id": "modules.cli.epic",
          "path": "modules/cli/epic.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "load_json",
              "docstring": "",
              "line_range": [
                5,
                7
              ],
              "parameters": [
                "path"
              ],
              "decorators": [],
              "uid": "modules.cli.epic.load_json",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.epic",
                "modules.cli.epic.load_json"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Loads and parses JSON data from specified file path\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:36.454597",
                  "confidence": 0.7,
                  "cache_key": "ea570339"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "show_links",
              "docstring": "",
              "line_range": [
                9,
                57
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.epic.show_links",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.epic",
                "modules.cli.epic.show_links"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Displays hyperlinks from input arguments in a formatted manner\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:37.039939",
                  "confidence": 0.7,
                  "cache_key": "74b5bc6f"
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "add_epic_cli_subparser",
              "docstring": "",
              "line_range": [
                59,
                67
              ],
              "parameters": [
                "subparsers"
              ],
              "decorators": [],
              "uid": "modules.cli.epic.add_epic_cli_subparser",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.epic",
                "modules.cli.epic.add_epic_cli_subparser"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "\"Adds a subparser for handling Epic CLI commands\"",
                "summary_generated": true,
                "source": {
                  "source_type": "llm_generated",
                  "generated_at": "2025-06-25T19:20:37.627592",
                  "confidence": 0.7,
                  "cache_key": "4016bd0b"
                },
                "tags": [
                  "function",
                  "processing"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "load_json": [
              "open",
              "json.load"
            ],
            "show_links": [
              "load_json",
              "data.get",
              "epic_path.exists",
              "link_map.items",
              "epic.get",
              "item.get",
              "json.dumps",
              "results.items",
              "status_filter.lower",
              "print",
              "t.upper",
              "Path",
              "str"
            ],
            "add_epic_cli_subparser": [
              "show_links_parser.add_argument",
              "epic_parser.add_subparsers",
              "epic_sub.add_parser",
              "show_links_parser.set_defaults",
              "subparsers.add_parser"
            ]
          },
          "dependencies": [
            "Path",
            "argparse",
            "json",
            "pathlib"
          ],
          "hash": null,
          "uid": "modules.cli.epic",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.epic"
          ],
          "uid_type": "module",
          "artifact_id": "d38c62f5-4e1e-8b3a-502d-104702c388d1",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:35.895977",
              "confidence": 0.7,
              "cache_key": "7573f23a"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 3,
            "lines_of_code": 30,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 4,
            "test_coverage": 0.0,
            "maintainability_index": 85
          },
          "markdown_anchor": {
            "id": "modules-cli-epic",
            "title": "Module: modules.cli.epic",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.epic](#modules-cli-epic)",
            "html_anchor": "<a id=\"modules-cli-epic\"></a>"
          }
        },
        {
          "module_id": "modules.cli.handlers",
          "path": "modules/cli/handlers.py",
          "category": "cli",
          "module_doc": "",
          "functions": [
            {
              "name": "interactive",
              "docstring": "Run interactive CLI with modular structure if available, fallback to legacy.",
              "line_range": [
                14,
                21
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.handlers.interactive",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.handlers",
                "modules.cli.handlers.interactive"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Run interactive CLI with modular structure if available, fallback to legacy.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:37.628318",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            },
            {
              "name": "interactive_modular",
              "docstring": "Run interactive CLI with modular structure.",
              "line_range": [
                23,
                32
              ],
              "parameters": [
                "args"
              ],
              "decorators": [],
              "uid": "modules.cli.handlers.interactive_modular",
              "uid_components": [
                "modules",
                "modules.cli",
                "modules.cli.handlers",
                "modules.cli.handlers.interactive_modular"
              ],
              "uid_type": "function",
              "smart_summary": {
                "summary": "Run interactive CLI with modular structure.",
                "summary_generated": false,
                "source": {
                  "source_type": "docstring",
                  "generated_at": "2025-06-25T19:20:37.628370",
                  "confidence": 0.9,
                  "cache_key": null
                },
                "tags": [
                  "function"
                ]
              }
            }
          ],
          "classes": [],
          "callgraph": {
            "interactive": [
              "interactive_modular",
              "logging.warning",
              "interactive_legacy"
            ],
            "interactive_modular": [
              "logging.info",
              "hasattr",
              "create_cli_core",
              "cli_core.run_interactive_mode"
            ]
          },
          "dependencies": [
            "JSONCache",
            "LLMClient",
            "Path",
            "attach_to_llm_request",
            "create_cli_core",
            "get_folder_structure",
            "interactive_legacy",
            "json",
            "llmstruct",
            "llmstruct.cache",
            "llmstruct.cli_core",
            "llmstruct.generators.json_generator",
            "llmstruct.modules.cli.handlers_legacy",
            "llmstruct.modules.cli.utils",
            "llmstruct.self_run",
            "load_gitignore",
            "logging",
            "os",
            "pathlib",
            "re",
            "read_file_content",
            "time",
            "write_to_file"
          ],
          "hash": null,
          "uid": "modules.cli.handlers",
          "uid_components": [
            "modules",
            "modules.cli",
            "modules.cli.handlers"
          ],
          "uid_type": "module",
          "artifact_id": "b3f8ea06-a189-b070-fd6c-be8a82e6e1cb",
          "smart_summary": {
            "summary": "\"Optimizes image loading and caching for improved website performance\"",
            "summary_generated": true,
            "source": {
              "source_type": "llm_generated",
              "generated_at": "2025-06-25T19:20:37.628252",
              "confidence": 0.7,
              "cache_key": "b40e8423"
            },
            "tags": [
              "module"
            ]
          },
          "metrics": {
            "cyclomatic_complexity": 2,
            "lines_of_code": 20,
            "call_depth": 0,
            "parameter_count": 0,
            "dependencies_count": 23,
            "test_coverage": 0.0,
            "maintainability_index": 90
          },
          "markdown_anchor": {
            "id": "modules-cli-handlers",
            "title": "Module: modules.cli.handlers",
            "level": 2,
            "type": "module",
            "markdown_link": "[Module: modules.cli.handlers](#modules-cli-handlers)",
            "html_anchor": "<a id=\"modules-cli-handlers\"></a>"
          }
        }
      ]
    }
  },
  "global_metrics": {
    "total_modules": 62,
    "total_functions": 290,
    "total_classes": 76,
    "total_complexity": 442,
    "average_complexity": 7.13
  }
}