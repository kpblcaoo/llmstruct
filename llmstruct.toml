[goals]
goals = [
    "Create universal JSON format for codebase structure (modules, functions, classes, calls, metadata)",
    "Ensure extensibility for new languages and entity types", 
    "Develop modular, plugin-based parsers for new languages",
    "Maintain an open, RFC-style documented format",
    "Integrate with LLMs by generating and attaching JSON structure to queries"
]

[cli]
language = "python"

[cache]
enabled = true
directory = ".llmstruct_cache"
max_size = 100
ttl = 3600

[copilot]
enabled = true
context_layers = ["core", "data", "insights"]
auto_refresh = true

[auto_update]
enabled = true
watch_patterns = ["src/**/*.py", "data/*.json", "*.toml"]

[parsing]
include_patterns = ["src/**/*.py", "*.py", "*.json", "*.md"]
exclude_patterns = [
    "**/__pycache__/**", 
    "**/.*", 
    "temp_workfiles/**", 
    "build/**",
    "sorting_workspace/**",
    "ideas_sorting/**",
    "**/*.bak",
    "**/*.swp", 
    "**/*~",
    "secrets/**",
    "secret_*",
    "*_secret*",
    "private_*",
    "*api_key*",
    "*_token*",
    "*.key",
    "*.pem",
    "*.env",
    "*.env.*",
    "**/*.backup",
    "*_backup.*",
    "**/*_personal.json",
    "**/personal_*.json",
    "**/session_*.json",
    "**/local_config.*",
    "workflow_archive/**",
    "**/*.log"
]
exclude_dirs = ["venv", "__pycache__", ".git", ".pytest_cache", "build", "dist", "tmp", "bak", "sorting_workspace", "temp_workfiles", "workflow_archive", "htmlcov", "logs"]
include_ranges = true
include_hashes = false
use_gitignore = true

[api]
ollama_host = "http://192.168.88.50:11434"
model = "mixtral"
retry_count = 3

[gh_view]
enabled = true
# Optional: Add GitHub API token or repo config here
# api_token = ""
# repo = "kpblcaoo/llmstruct"