{
  "data": {
    "artifacts_index.json": {
      "version": "0.1.0",
      "status": "Draft",
      "author": "@kpblcaoo",
      "date": "2025-05-22",
      "license": "GPL-3.0",
      "artifact_id": "b3c4d5e6-f7a8-49b0-c1d2-e3f4a5b6c7d8",
      "metadata": {
        "project_name": "llmstruct",
        "description": "Index of project artifacts",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo",
            "email": "kpblcaoo@example.com"
          }
        ]
      },
      "summary": "Index of artifacts stored on disk",
      "tags": [
        "artifacts",
        "index"
      ],
      "artifacts": [
        {
          "artifact_id": "e5f6a7b8-c9d0-41e2-f3a4-b5c6d7e8f9a0",
          "path": "data/cli.json",
          "versions": [
            "0.1.0"
          ],
          "created_at": "2025-05-20T18:00:00Z"
        },
        {
          "artifact_id": "f2a3b4c5-d6e7-48f9-a0b1-c2d3e4f5a6b7",
          "path": "data/tasks.json",
          "versions": [
            "0.4.0"
          ],
          "created_at": "2025-05-20T19:00:00Z"
        }
      ]
    },
    "cli.json": {
      "version": "0.1.0",
      "status": "Draft",
      "author": "@kpblcaoo",
      "date": "2025-05-22",
      "license": "GPL-3.0",
      "artifact_id": "e5f6a7b8-c9d0-41e2-f3a4-b5c6d7e8f9a0",
      "metadata": {
        "project_name": "llmstruct",
        "description": "CLI commands for llmstruct",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo",
            "email": "kpblcaoo@example.com"
          }
        ]
      },
      "summary": "CLI commands for llmstruct",
      "tags": [
        "cli"
      ],
      "commands": [
        {
          "name": "parse",
          "description": "Parse codebase and generate struct.json",
          "arguments": [
            {
              "name": "root_dir",
              "type": "string",
              "required": true,
              "description": "Root directory of the project"
            },
            {
              "name": "output",
              "type": "string",
              "required": false,
              "description": "Output JSON file"
            },
            {
              "name": "filters",
              "type": "array",
              "required": false,
              "description": "Glob patterns to filter files"
            },
            {
              "name": "use_cache",
              "type": "boolean",
              "required": false,
              "description": "Cache generated JSON"
            }
          ],
          "examples": [
            {
              "command": "llmstruct parse . --output struct.json --filters src/*,!tests/*",
              "description": "Generate struct.json with filters"
            }
          ],
          "prompt_templates": [
            "Parse codebase in {root_dir} with filters {filters} and output to {output}"
          ],
          "related_tasks": [
            "TSK-006",
            "TSK-126"
          ],
          "related_ideas": [
            "IDEA-001"
          ]
        },
        {
          "name": "interactive",
          "description": "Run interactive CLI with LLM",
          "arguments": [
            {
              "name": "root_dir",
              "type": "string",
              "required": true,
              "description": "Root directory of the project"
            },
            {
              "name": "context",
              "type": "string",
              "required": false,
              "description": "Context JSON file"
            }
          ],
          "examples": [
            {
              "command": "llmstruct interactive . --context init.json",
              "description": "Start interactive mode"
            }
          ],
          "prompt_templates": [
            "Run interactive CLI for {root_dir} with context {context}"
          ],
          "related_tasks": [
            "TSK-119"
          ],
          "related_ideas": [
            "IDEA-126"
          ]
        }
      ]
    },
    "conflicts.json": {
      "version": "0.2.0",
      "status": "Draft",
      "author": "@kpblcaoo",
      "date": "2025-05-21",
      "license": "GPL-3.0",
      "artifact_id": "f4a5b6c7-d8e9-40f1-a2b3-c4d5e6f7a8b9",
      "metadata": {
        "project_name": "llmstruct",
        "description": "Documentation conflicts",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo",
            "email": "kpblcaoo@example.com"
          }
        ]
      },
      "summary": "Documentation conflicts",
      "tags": [
        "conflicts"
      ],
      "conflicts": [
        {
          "conflict_id": "CONF-001",
          "file": "docs/llmstruct_format.md",
          "issue": "Missing folder_structure",
          "suggested_fix": "Update to match struct.json v0.1.1",
          "status": "resolved",
          "issue_ref": "#141",
          "artifact_id": "a5b6c7d8-e9f0-41a2-b3c4-d5e6f7a8b9c0"
        }
      ]
    },
    "init.json": {
      "metadata": {
        "project_name": "llmstruct",
        "description": "Initialization file with CLI instructions",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo"
          }
        ],
        "license": "GPL-3.0",
        "version": "0.2.0",
        "artifact_id": "f8d2c9e3-7a1b-4f2c-9e7a-5c9d8e2f1b3d"
      },
      "cli_instructions": {
        "commands": [
          {
            "name": "parse",
            "description": "Parse codebase and generate struct.json",
            "usage": "llmstruct parse --root-dir <path> --output <path>",
            "options": [
              {
                "name": "--root-dir",
                "description": "Project root directory",
                "default": "."
              },
              {
                "name": "--output",
                "description": "Output JSON path",
                "default": "struct.json"
              }
            ]
          },
          {
            "name": "interactive",
            "description": "Run interactive CLI with LLM, supporting file/folder viewing and writing",
            "usage": "llmstruct interactive --context <path>",
            "options": [
              {
                "name": "--context",
                "description": "Context JSON path",
                "default": "struct.json"
              }
            ],
            "subcommands": [
              {
                "name": "view <path>",
                "description": "View file or folder contents"
              },
              {
                "name": "write <path> <content>",
                "description": "Write content to file"
              },
              {
                "name": "scan <path>",
                "description": "Scan file or folder for analysis"
              },
              {
                "name": "exit",
                "description": "Exit interactive mode"
              }
            ]
          },
          {
            "name": "query",
            "description": "Query LLMs with prompt and context",
            "usage": "llmstruct query --prompt <text> --context <path>",
            "options": [
              {
                "name": "--prompt",
                "description": "Prompt text",
                "required": true
              },
              {
                "name": "--context",
                "description": "Context JSON path",
                "default": "struct.json"
              }
            ]
          },
          {
            "name": "validate",
            "description": "Validate JSON against schema",
            "usage": "llmstruct validate --json <path> --schema <path>",
            "options": [
              {
                "name": "--json",
                "description": "JSON file path",
                "required": true
              },
              {
                "name": "--schema",
                "description": "Schema file path",
                "required": true
              }
            ],
            "examples": [
              "llmstruct validate --json struct.json --schema schema/llmstruct_schema.json"
            ]
          },
          {
            "name": "context",
            "description": "Generate context.json from input JSON",
            "usage": "llmstruct context --input <path>",
            "options": [
              {
                "name": "--input",
                "description": "Input JSON path",
                "required": true
              }
            ]
          },
          {
            "name": "dogfood",
            "description": "Run dogfooding analysis",
            "usage": "llmstruct dogfood --root-dir <path>",
            "options": [
              {
                "name": "--root-dir",
                "description": "Project root directory",
                "default": "."
              }
            ]
          },
          {
            "name": "review",
            "description": "Review codebase with LLM",
            "usage": "llmstruct review --root-dir <path>",
            "options": [
              {
                "name": "--root-dir",
                "description": "Project root directory",
                "default": "."
              }
            ]
          }
        ],
        "usage_notes": [
          "Use 'exit' to quit interactive mode",
          "Use 'view <path>' to read files/folders in interactive mode",
          "Use 'write <path> <content>' to write files in interactive mode",
          "Use 'scan <path>' to scan files/folders in interactive mode",
          "All commands support --help for details"
        ]
      },
      "references": [
        {
          "path": "docs/llmstruct_format.md",
          "description": "LLMStruct JSON format"
        },
        {
          "path": "docs/cli_commands.md",
          "description": "CLI command reference"
        }
      ]
    },
    "insights.json": {
      "version": "0.1.0",
      "status": "Draft",
      "author": "@kpblcaoo",
      "date": "2025-05-22",
      "license": "GPL-3.0",
      "artifact_id": "a2b3c4d5-e6f7-48a9-b0c1-d2e3f4a5b6c7",
      "metadata": {
        "project_name": "llmstruct",
        "description": "Insights for project improvements",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo",
            "email": "kpblcaoo@example.com"
          }
        ]
      },
      "summary": "Insights and findings for llmstruct improvements",
      "tags": [
        "insights",
        "automation"
      ],
      "insights": [
        {
          "id": "INS-001",
          "description": "Implement validation for broken references in references.json",
          "related_tasks": [
            "TSK-006"
          ],
          "related_ideas": [
            "IDEA-001"
          ],
          "priority": "high",
          "created_at": "2025-05-22T08:00:00Z",
          "author": "Grok (xAI)",
          "ai-generated": true
        },
        {
          "id": "INS-002",
          "description": "Automate metrics updates in metrics.json via collector.py",
          "related_tasks": [
            "TSK-035"
          ],
          "related_ideas": [],
          "priority": "medium",
          "created_at": "2025-05-22T08:00:00Z",
          "author": "Grok (xAI)",
          "ai-generated": true
        }
      ]
    },
    "metrics.json": {
      "version": "0.2.0",
      "status": "Draft",
      "author": "@kpblcaoo",
      "date": "2025-05-21",
      "license": "GPL-3.0",
      "artifact_id": "b0c1d2e3-f4a5-46b7-c8d9-e0f1a2b3c4d5",
      "metadata": {
        "project_name": "llmstruct",
        "description": "Project metrics",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo",
            "email": "kpblcaoo@example.com"
          }
        ]
      },
      "summary": "Project metrics",
      "tags": [
        "metrics"
      ],
      "metrics": {
        "tasks_completed": 0,
        "ideas_proposed": 4,
        "ideas_approved": 0,
        "code_lines": 1000,
        "doc_lines": 500
      }
    },
    "references.json": {
      "version": "0.1.0",
      "status": "Draft",
      "author": "@kpblcaoo",
      "date": "2025-05-21",
      "license": "GPL-3.0",
      "artifact_id": "2b3c4d5e-6f7a-48b9-c0d1-e2f3a4b5c6d7",
      "metadata": {
        "project_name": "llmstruct",
        "description": "Cross-references between JSON entities",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo",
            "email": "kpblcaoo@example.com"
          }
        ]
      },
      "summary": "Cross-references between JSON entities",
      "tags": [
        "references",
        "linking"
      ],
      "references": [
        {
          "source": {
            "file": "data/ideas.json",
            "id": "IDEA-001",
            "artifact_id": "e1f2a3b4-c5d6-47e8-b9f0-a1b2c3d4e5f6"
          },
          "target": {
            "file": "data/tasks.json",
            "id": "TSK-006",
            "artifact_id": "f2a3b4c5-d6e7-48f9-a0b1-c2d3e4f5a6b7"
          },
          "type": "dependency",
          "backlink": {
            "file": "data/tasks.json",
            "id": "TSK-006",
            "type": "backlink"
          }
        },
        {
          "source": {
            "file": "data/ideas.json",
            "id": "IDEA-002",
            "artifact_id": "e1f2a3b4-c5d6-47e8-b9f0-a1b2c3d4e5f6"
          },
          "target": {
            "file": "data/tasks.json",
            "id": "TSK-027",
            "artifact_id": "f2a3b4c5-d6e7-48f9-a0b1-c2d3e4f5a6b7"
          },
          "type": "dependency",
          "backlink": {
            "file": "data/tasks.json",
            "id": "TSK-027",
            "type": "backlink"
          }
        }
      ]
    },
    "tasks.json": {
      "version": "0.4.0",
      "status": "Draft",
      "author": "@kpblcaoo",
      "date": "2025-05-21",
      "license": "GPL-3.0",
      "artifact_id": "f2a3b4c5-d6e7-48f9-a0b1-c2d3e4f5a6b7",
      "metadata": {
        "project_name": "llmstruct",
        "description": "Tasks for parser and API",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo",
            "email": "kpblcaoo@example.com"
          }
        ]
      },
      "summary": "Critical tasks for parser and API",
      "tags": [
        "parser",
        "api"
      ],
      "tasks": [
        {
          "id": "TSK-006",
          "description": "Improve parser for multi-language support (Python, JS)",
          "status": "in_progress",
          "priority": "high",
          "estimated_effort": "10d",
          "dependencies": [],
          "assignee": "@kpblcaoo",
          "created_at": "2025-05-20T19:00:00Z",
          "author": "@kpblcaoo",
          "ai-generated": false
        },
        {
          "id": "TSK-027",
          "description": "Implement RFC documentation process",
          "status": "proposed",
          "priority": "medium",
          "estimated_effort": "5d",
          "dependencies": [],
          "assignee": "@kpblcaoo",
          "created_at": "2025-05-20T19:00:00Z",
          "author": "@kpblcaoo",
          "ai-generated": false
        },
        {
          "id": "TSK-119",
          "description": "Implement FastAPI for project access",
          "status": "proposed",
          "priority": "critical",
          "estimated_effort": "7d",
          "dependencies": [
            "TSK-126"
          ],
          "assignee": "@kpblcaoo",
          "created_at": "2025-05-20T22:20:00Z",
          "author": "@kpblcaoo",
          "ai-generated": false
        },
        {
          "id": "TSK-126",
          "description": "Complete struct.json and struct_light.json",
          "status": "proposed",
          "priority": "high",
          "estimated_effort": "5d",
          "dependencies": [],
          "assignee": "@kpblcaoo",
          "created_at": "2025-05-20T22:20:00Z",
          "author": "@kpblcaoo",
          "ai-generated": false
        }
      ]
    },
    "vision.json": {
      "version": "0.2.0",
      "status": "Draft",
      "author": "@kpblcaoo",
      "date": "2025-05-22",
      "license": "GPL-3.0",
      "artifact_id": "e3f4a5b6-c7d8-49e0-f1a2-b3c4d5e6f7a8",
      "metadata": {
        "project_name": "llmstruct",
        "description": "Project vision and priorities",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo",
            "email": "kpblcaoo@example.com"
          }
        ]
      },
      "summary": "Project vision and priorities",
      "tags": [
        "vision"
      ],
      "concept": {
        "description": "Universal JSON for codebases with LLM integration",
        "principles": [
          "dogfooding",
          "idempotence",
          "transparency"
        ],
        "goals": [
          "Universal format",
          "LLM integration",
          "Automation"
        ]
      },
      "priorities": [
        "TSK-006",
        "TSK-119",
        "TSK-126"
      ],
      "weights": {
        "methodology": "Base weights from priority (critical=0.9-1.0, high=0.7-0.9, medium=0.5-0.7, low=0.0-0.5). Manual adjustments via CLI."
      },
      "integrations": {
        "ci_cd": {
          "github_actions": [
            "validate_refs",
            "sync_issues"
          ],
          "tasks": [
            "TSK-012",
            "TSK-119"
          ]
        },
        "telegram": {
          "bot": "llmstruct-bot",
          "tasks": [
            "TSK-023",
            "TSK-119"
          ]
        }
      },
      "structure": {
        "core_files": [
          "data/tasks.json",
          "data/ideas.json",
          "data/insights.json",
          "data/artifacts/index.json"
        ],
        "docs": [
          "docs/llmstruct_format.md"
        ],
        "modules": [
          "cli",
          "collector"
        ]
      }
    },
    "weights.json": {
      "version": "0.2.0",
      "status": "Draft",
      "author": "@kpblcaoo",
      "date": "2025-05-21",
      "license": "GPL-3.0",
      "artifact_id": "c5d6e7f8-a9b0-41c2-d3e4-f5a6b7c8d9e0",
      "metadata": {
        "project_name": "llmstruct",
        "description": "Weights for tasks and ideas",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo",
            "email": "kpblcaoo@example.com"
          }
        ]
      },
      "summary": "Weights for tasks and ideas",
      "tags": [
        "weights"
      ],
      "weights": {
        "TSK-006": {
          "base_weight": 0.7,
          "manual_adjustment": 0.2,
          "weight": 0.9,
          "normalized_weight": 0.486
        },
        "TSK-027": {
          "base_weight": 0.6,
          "manual_adjustment": 0.1,
          "weight": 0.7,
          "normalized_weight": 0.378
        },
        "TSK-119": {
          "base_weight": 0.9,
          "manual_adjustment": 0.05,
          "weight": 0.95,
          "normalized_weight": 0.514
        },
        "TSK-126": {
          "base_weight": 0.7,
          "manual_adjustment": 0.1,
          "weight": 0.8,
          "normalized_weight": 0.432
        },
        "IDEA-001": {
          "base_weight": 0.7,
          "manual_adjustment": 0.1,
          "weight": 0.8,
          "normalized_weight": 0.432
        },
        "IDEA-002": {
          "base_weight": 0.6,
          "manual_adjustment": 0.1,
          "weight": 0.7,
          "normalized_weight": 0.378
        },
        "IDEA-126": {
          "base_weight": 0.7,
          "manual_adjustment": 0.0,
          "weight": 0.7,
          "normalized_weight": 0.378
        }
      }
    }
  },
  "schema": {
    "common": {
      "definitions.json": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "LLMstruct Common Definitions",
        "definitions": {
          "artifact_id": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "project_name": {
                "type": "string",
                "default": "llmstruct"
              },
              "description": {
                "type": "string"
              },
              "authors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "github": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    }
                  }
                }
              }
            }
          },
          "module": {
            "type": "object",
            "required": [
              "path",
              "artifact_id"
            ],
            "properties": {
              "path": {
                "type": "string"
              },
              "category": {
                "type": "string"
              },
              "artifact_id": {
                "$ref": "#/definitions/artifact_id"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "artifact": {
            "type": "object",
            "required": [
              "artifact_id",
              "path"
            ],
            "properties": {
              "artifact_id": {
                "$ref": "#/definitions/artifact_id"
              },
              "path": {
                "type": "string"
              },
              "versions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    },
    "core.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LLMstruct Core Schema",
      "description": "Core schema for llmstruct project JSONs",
      "type": "object",
      "required": [
        "metadata",
        "version",
        "artifact_id"
      ],
      "properties": {
        "metadata": {
          "$ref": "common/definitions.json#/definitions/metadata"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "status": {
          "type": "string",
          "enum": [
            "Draft",
            "Proposed",
            "Active",
            "Deprecated"
          ]
        },
        "author": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "license": {
          "type": "string",
          "enum": [
            "GPL-3.0"
          ]
        },
        "artifact_id": {
          "$ref": "common/definitions.json#/definitions/artifact_id"
        },
        "summary": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modules": {
          "type": "array",
          "items": {
            "$ref": "common/definitions.json#/definitions/module"
          }
        },
        "plugins": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "id",
              "schema",
              "version"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "schema": {
                "type": "string",
                "format": "uri-reference"
              },
              "version": {
                "type": "string",
                "pattern": "^\\d+\\.\\d+\\.\\d+$"
              }
            }
          }
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "common/definitions.json#/definitions/artifact"
          }
        }
      }
    },
    "llmstruct_schema.json": {
      "version": "0.2.0",
      "status": "Draft",
      "author": "@kpblcaoo",
      "date": "2025-05-22",
      "license": "GPL-3.0",
      "artifact_id": "b6c7d8e9-f0a1-42b3-c4d5-e6f7a8b9c0d1",
      "metadata": {
        "project_name": "llmstruct",
        "description": "Schema for llmstruct JSON",
        "authors": [
          {
            "name": "@kpblcaoo",
            "github": "kpblcaoo",
            "email": "kpblcaoo@example.com"
          }
        ]
      },
      "summary": "Schema for llmstruct JSON",
      "tags": [
        "schema"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "required": [
        "metadata",
        "toc",
        "modules",
        "folder_structure"
      ],
      "properties": {
        "metadata": {
          "type": "object",
          "required": [
            "project_name",
            "version",
            "authors",
            "stats",
            "artifact_id",
            "summary"
          ],
          "properties": {
            "project_name": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "authors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "github",
                  "email"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "github": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            },
            "stats": {
              "type": "object",
              "required": [
                "modules_count",
                "functions_count"
              ],
              "properties": {
                "modules_count": {
                  "type": "integer"
                },
                "functions_count": {
                  "type": "integer"
                }
              }
            },
            "artifact_id": {
              "type": "string",
              "format": "uuid"
            },
            "summary": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "toc": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modules": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "path",
              "artifact_id"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "artifact_id": {
                "type": "string",
                "format": "uuid"
              },
              "functions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "signature"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "signature": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "folder_structure": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "path",
              "type",
              "artifact_id"
            ],
            "properties": {
              "path": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "directory",
                  "file"
                ]
              },
              "artifact_id": {
                "type": "string",
                "format": "uuid"
              },
              "metadata": {
                "type": "object"
              }
            }
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Glob patterns to include/exclude files (e.g., ['src/*', '!tests/*'])"
        }
      }
    },
    "plugins": {
      "artifacts.json": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "LLMstruct Artifacts Index Schema",
        "description": "Schema for artifacts index in llmstruct",
        "type": "object",
        "required": [
          "artifacts",
          "artifact_id"
        ],
        "metadata": {
          "project_name": "llmstruct",
          "description": "Schema for indexing artifacts",
          "authors": [
            {
              "name": "@kpblcaoo",
              "github": "kpblcaoo",
              "email": "kpblcaoo@example.com"
            }
          ]
        },
        "version": "0.1.0",
        "status": "Draft",
        "author": "@kpblcaoo",
        "date": "2025-05-22",
        "license": "GPL-3.0",
        "artifact_id": "b3c4d5e6-f7a8-49b0-c1d2-e3f4a5b6c7d8",
        "summary": "Schema for artifacts index",
        "tags": [
          "artifacts",
          "schema"
        ],
        "properties": {
          "artifacts": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "artifact_id",
                "path",
                "versions"
              ],
              "properties": {
                "artifact_id": {
                  "$ref": "common/definitions.json#/definitions/artifact_id"
                },
                "path": {
                  "type": "string"
                },
                "versions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "artifact_id": {
            "$ref": "common/definitions.json#/definitions/artifact_id"
          }
        }
      },
      "cli.json": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "LLMstruct CLI Plugin Schema",
        "description": "Schema for CLI commands in llmstruct",
        "type": "object",
        "required": [
          "commands",
          "artifact_id"
        ],
        "metadata": {
          "project_name": "llmstruct",
          "description": "Schema for CLI commands",
          "authors": [
            {
              "name": "@kpblcaoo",
              "github": "kpblcaoo",
              "email": "kpblcaoo@example.com"
            }
          ]
        },
        "version": "0.1.0",
        "status": "Draft",
        "author": "@kpblcaoo",
        "date": "2025-05-22",
        "license": "GPL-3.0",
        "artifact_id": "e5f6a7b8-c9d0-41e2-f3a4-b5c6d7e8f9a0",
        "summary": "Schema for CLI commands",
        "tags": [
          "cli",
          "schema"
        ],
        "properties": {
          "commands": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "description"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "arguments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "boolean",
                          "array",
                          "number"
                        ]
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "command": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                },
                "prompt_templates": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "artifact_id": {
            "$ref": "common/definitions.json#/definitions/artifact_id"
          }
        }
      },
      "insights.json": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "LLMstruct Insights Schema",
        "description": "Schema for insights in llmstruct",
        "type": "object",
        "required": [
          "insights",
          "artifact_id"
        ],
        "metadata": {
          "project_name": "llmstruct",
          "description": "Schema for insights and findings",
          "authors": [
            {
              "name": "@kpblcaoo",
              "github": "kpblcaoo",
              "email": "kpblcaoo@example.com"
            }
          ]
        },
        "version": "0.1.0",
        "status": "Draft",
        "author": "@kpblcaoo",
        "date": "2025-05-22",
        "license": "GPL-3.0",
        "artifact_id": "a2b3c4d5-e6f7-48a9-b0c1-d2e3f4a5b6c7",
        "summary": "Schema for insights",
        "tags": [
          "insights",
          "schema"
        ],
        "properties": {
          "insights": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "description",
                "priority"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "pattern": "^INS-\\d+$"
                },
                "description": {
                  "type": "string"
                },
                "related_tasks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "related_ideas": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "priority": {
                  "type": "string",
                  "enum": [
                    "high",
                    "medium",
                    "low"
                  ]
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "author": {
                  "type": "string"
                },
                "ai-generated": {
                  "type": "boolean"
                }
              }
            }
          },
          "artifact_id": {
            "$ref": "common/definitions.json#/definitions/artifact_id"
          }
        }
      }
    }
  }
}