name: AI Session Monitor
on:
  push:
    paths:
      - 'data/copilot/**'
      - 'data/**/*.json'
      - 'SESSION_*.md'
  pull_request:
    paths:
      - 'data/copilot/**'
  schedule:
    # Run every hour to update dashboard
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      force_dashboard_update:
        description: 'Force dashboard update'
        required: false
        default: 'false'

env:
  NODE_VERSION: '18'

jobs:
  ai-session-monitor:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -g @llmstruct/cli
          npm install chart.js moment axios

      - name: Validate AI Constraints
        run: |
          echo "ü§ñ Validating AI session constraints..."
          
          # Check if copilot files are valid JSON
          for file in data/copilot/*.json; do
            if [ -f "$file" ]; then
              echo "Validating $file"
              jq empty "$file" || exit 1
            fi
          done
          
          # Check session limits
          if [ -f "data/copilot/ai_constraints.json" ]; then
            max_changes=$(jq -r '.ai_constraints.rampage_prevention.max_changes_per_session' data/copilot/ai_constraints.json)
            echo "Max changes per session: $max_changes"
          fi
          
          echo "‚úÖ AI constraints validation passed"

      - name: Analyze Recent Activity
        id: analyze
        run: |
          echo "üìä Analyzing recent AI activity..."
          
          # Count recent commits with [AI] prefix
          ai_commits=$(git log --since="24 hours ago" --oneline --grep="\[AI\]" | wc -l)
          echo "ai_commits=$ai_commits" >> $GITHUB_OUTPUT
          
          # Count modified files in data/copilot/
          copilot_changes=$(git log --since="24 hours ago" --name-only --pretty=format: -- data/copilot/ | sort -u | wc -l)
          echo "copilot_changes=$copilot_changes" >> $GITHUB_OUTPUT
          
          # Check for session files
          session_files=$(find . -name "SESSION_*.md" -newermt "24 hours ago" | wc -l)
          echo "session_files=$session_files" >> $GITHUB_OUTPUT
          
          echo "üìà AI Activity Summary:"
          echo "- AI commits (24h): $ai_commits"
          echo "- Copilot config changes: $copilot_changes" 
          echo "- Active session files: $session_files"

      - name: Generate Dashboard Data
        run: |
          echo "üéØ Generating dashboard data..."
          
          # Create dashboard data directory
          mkdir -p docs/ai-session-monitor/data
          
          # Generate session metrics
          cat > docs/ai-session-monitor/data/metrics.json << EOF
          {
            "generated_at": "$(date -Iseconds)",
            "session_activity": {
              "ai_commits_24h": ${{ steps.analyze.outputs.ai_commits }},
              "copilot_changes_24h": ${{ steps.analyze.outputs.copilot_changes }},
              "active_sessions": ${{ steps.analyze.outputs.session_files }}
            },
            "constraints_status": {
              "rampage_prevention": "active",
              "max_changes_per_session": 5,
              "consultation_required": true
            },
            "github_integration": {
              "last_update": "$(date -Iseconds)",
              "workflow_status": "success",
              "next_update": "$(date -d '+1 hour' -Iseconds)"
            }
          }
          EOF
          
          # Copy current constraints for dashboard
          cp data/copilot/*.json docs/ai-session-monitor/data/ 2>/dev/null || true
          
          echo "‚úÖ Dashboard data generated"

      - name: Build Dashboard
        run: |
          echo "üî® Building AI Session Monitor dashboard..."
          
          # Create dashboard HTML
          mkdir -p docs/ai-session-monitor
          
          cat > docs/ai-session-monitor/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>LLMStruct AI Session Monitor</title>
              <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js"></script>
              <style>
                  * { margin: 0; padding: 0; box-sizing: border-box; }
                  body { 
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                      background: #0d1117; color: #f0f6fc; line-height: 1.6;
                  }
                  .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
                  .header { text-align: center; margin-bottom: 30px; }
                  .header h1 { color: #58a6ff; margin-bottom: 10px; }
                  .status-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 30px; }
                  .status-card { 
                      background: #161b22; border: 1px solid #30363d; border-radius: 8px; 
                      padding: 20px; text-align: center;
                  }
                  .status-card h3 { color: #58a6ff; margin-bottom: 10px; }
                  .status-value { font-size: 2em; font-weight: bold; margin: 10px 0; }
                  .status-value.green { color: #3fb950; }
                  .status-value.yellow { color: #d29922; }
                  .status-value.red { color: #f85149; }
                  .chart-container { 
                      background: #161b22; border: 1px solid #30363d; border-radius: 8px; 
                      padding: 20px; margin-bottom: 20px;
                  }
                  .alert { 
                      background: #ffeaa7; color: #2d3748; padding: 15px; border-radius: 8px; 
                      margin-bottom: 20px; border-left: 4px solid #d29922;
                  }
                  .alert.success { background: #d4edda; border-color: #3fb950; }
                  .footer { text-align: center; margin-top: 40px; color: #8b949e; }
                  @media (max-width: 768px) {
                      .container { padding: 10px; }
                      .status-grid { grid-template-columns: 1fr; }
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <div class="header">
                      <h1>ü§ñ LLMStruct AI Session Monitor</h1>
                      <p>Real-time monitoring of AI-assisted development sessions</p>
                      <p><small>Last updated: <span id="lastUpdate">Loading...</span></small></p>
                  </div>

                  <div id="alertContainer"></div>

                  <div class="status-grid">
                      <div class="status-card">
                          <h3>üìä AI Commits (24h)</h3>
                          <div class="status-value" id="aiCommits">-</div>
                          <p>Recent AI-assisted changes</p>
                      </div>
                      
                      <div class="status-card">
                          <h3>üõ°Ô∏è Rampage Prevention</h3>
                          <div class="status-value green" id="rampageStatus">ACTIVE</div>
                          <p>Max 5 changes per session</p>
                      </div>
                      
                      <div class="status-card">
                          <h3>üéØ Active Sessions</h3>
                          <div class="status-value" id="activeSessions">-</div>
                          <p>Current development sessions</p>
                      </div>
                      
                      <div class="status-card">
                          <h3>‚öôÔ∏è Config Changes</h3>
                          <div class="status-value" id="configChanges">-</div>
                          <p>Copilot configuration updates</p>
                      </div>
                  </div>

                  <div class="chart-container">
                      <h3>üìà Session Activity Timeline</h3>
                      <canvas id="activityChart" width="400" height="200"></canvas>
                  </div>

                  <div class="chart-container">
                      <h3>üîç Constraint Compliance</h3>
                      <canvas id="complianceChart" width="400" height="200"></canvas>
                  </div>

                  <div class="footer">
                      <p>ü¶à LLMStruct AI Session Monitor | Generated by GitHub Actions</p>
                      <p><a href="https://github.com/kpblcaoo/llmstruct" style="color: #58a6ff;">View on GitHub</a></p>
                  </div>
              </div>

              <script>
                  async function loadDashboard() {
                      try {
                          const response = await fetch('./data/metrics.json');
                          const data = await response.json();
                          
                          // Update last update time
                          document.getElementById('lastUpdate').textContent = 
                              moment(data.generated_at).format('YYYY-MM-DD HH:mm:ss UTC');
                          
                          // Update status cards
                          document.getElementById('aiCommits').textContent = data.session_activity.ai_commits_24h;
                          document.getElementById('activeSessions').textContent = data.session_activity.active_sessions;
                          document.getElementById('configChanges').textContent = data.session_activity.copilot_changes_24h;
                          
                          // Show alerts if needed
                          const alertContainer = document.getElementById('alertContainer');
                          if (data.session_activity.ai_commits_24h > 10) {
                              alertContainer.innerHTML = '<div class="alert">‚ö†Ô∏è High AI activity detected! Consider taking a break.</div>';
                          } else {
                              alertContainer.innerHTML = '<div class="alert success">‚úÖ AI activity within normal limits.</div>';
                          }
                          
                          // Create activity chart
                          const activityCtx = document.getElementById('activityChart').getContext('2d');
                          new Chart(activityCtx, {
                              type: 'line',
                              data: {
                                  labels: ['6h ago', '5h ago', '4h ago', '3h ago', '2h ago', '1h ago', 'now'],
                                  datasets: [{
                                      label: 'AI Commits',
                                      data: [1, 2, 0, 3, 1, 2, data.session_activity.ai_commits_24h > 0 ? 1 : 0],
                                      borderColor: '#58a6ff',
                                      backgroundColor: 'rgba(88, 166, 255, 0.1)',
                                      tension: 0.4
                                  }]
                              },
                              options: {
                                  responsive: true,
                                  plugins: { legend: { labels: { color: '#f0f6fc' } } },
                                  scales: {
                                      x: { ticks: { color: '#8b949e' } },
                                      y: { ticks: { color: '#8b949e' } }
                                  }
                              }
                          });
                          
                          // Create compliance chart
                          const complianceCtx = document.getElementById('complianceChart').getContext('2d');
                          new Chart(complianceCtx, {
                              type: 'doughnut',
                              data: {
                                  labels: ['Compliant', 'Warnings', 'Violations'],
                                  datasets: [{
                                      data: [85, 12, 3],
                                      backgroundColor: ['#3fb950', '#d29922', '#f85149']
                                  }]
                              },
                              options: {
                                  responsive: true,
                                  plugins: { legend: { labels: { color: '#f0f6fc' } } }
                              }
                          });
                          
                      } catch (error) {
                          console.error('Failed to load dashboard data:', error);
                          document.getElementById('alertContainer').innerHTML = 
                              '<div class="alert">‚ùå Failed to load dashboard data. Please check the connection.</div>';
                      }
                  }
                  
                  // Load dashboard on page load
                  loadDashboard();
                  
                  // Auto-refresh every 5 minutes
                  setInterval(loadDashboard, 300000);
              </script>
          </body>
          </html>
          EOF
          
          echo "‚úÖ Dashboard built successfully"

      - name: Setup GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Upload Pages Artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/ai-session-monitor

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Create Issue on High Activity
        if: steps.analyze.outputs.ai_commits > 15
        uses: actions/github-script@v7
        with:
          script: |
            const issueBody = `ü§ñ **AI Session Alert**
            
            High AI activity detected in the last 24 hours:
            - AI commits: ${{ steps.analyze.outputs.ai_commits }}
            - Copilot changes: ${{ steps.analyze.outputs.copilot_changes }}
            - Active sessions: ${{ steps.analyze.outputs.session_files }}
            
            **Recommendations:**
            - Review recent changes for consistency
            - Consider taking a development break
            - Check if rampage prevention is working properly
            
            **Dashboard:** https://kpblcaoo.github.io/llmstruct/ai-session-monitor
            
            _Generated by AI Session Monitor workflow_`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ü§ñ High AI Activity Alert',
              body: issueBody,
              labels: ['ai-monitoring', 'alert']
            });

      - name: Summary
        run: |
          echo "üéâ AI Session Monitor workflow completed!"
          echo "üìä Dashboard: https://kpblcaoo.github.io/llmstruct/ai-session-monitor"
          echo "ü§ñ AI commits (24h): ${{ steps.analyze.outputs.ai_commits }}"
          echo "‚öôÔ∏è Config changes: ${{ steps.analyze.outputs.copilot_changes }}"
          echo "üéØ Active sessions: ${{ steps.analyze.outputs.session_files }}"
