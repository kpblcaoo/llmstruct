[
  {
    "workflow_id": "comprehensive_test_suite",
    "description": "Comprehensive test of all CLI queue capabilities",
    "created_at": "2025-05-24T00:00:00Z",
    "priority": "high",
    "commands": [
      {
        "cmd": "write",
        "filename": "test_basic.txt",
        "content": "# Basic Test File\nThis is a basic test file created by the queue system.\n\nTimestamp: 2025-05-24T00:00:00Z",
        "context_hint": "minimal"
      },
      {
        "cmd": "scan", 
        "path": "tmp",
        "options": {
          "include_metadata": true,
          "depth": 1
        },
        "context_hint": "minimal"
      },
      {
        "cmd": "llm",
        "prompt": "Проанализируй содержимое папки tmp. Сколько файлов там находится и каково их назначение? Ответь кратко и структурированно.",
        "context_preference": "init",
        "options": {
          "max_tokens": 200,
          "temperature": 0.3
        }
      },
      {
        "cmd": "write",
        "filename": "analysis_config.json",
        "content": "{\n  \"analysis_type\": \"structure\",\n  \"target\": \"./tmp\",\n  \"options\": {\n    \"include_hidden\": false,\n    \"max_depth\": 2,\n    \"file_types\": [\"txt\", \"json\", \"py\"]\n  },\n  \"output_format\": \"detailed\"\n}",
        "context_hint": "minimal"
      },
      {
        "cmd": "validate",
        "json_path": "./tmp/analysis_config.json", 
        "schema_path": "schema/common/definitions.json",
        "options": {
          "strict_mode": false
        },
        "context_hint": "schema"
      },
      {
        "cmd": "llm",
        "prompt": "На основе проведённого анализа и валидации, сгенерируй краткий отчёт о тестировании системы очередей. Включи рекомендации по улучшению.",
        "context_preference": "init",
        "options": {
          "include_analysis_context": true
        }
      },
      {
        "cmd": "write",
        "filename": "queue_test_report.md",
        "content": "# Queue System Test Report\n\n## Test Overview\nThis report documents the comprehensive testing of the CLI queue system.\n\n## Test Results\n- ✅ Basic file creation\n- ✅ Directory scanning\n- ✅ LLM integration\n- ✅ JSON validation\n- ✅ Multi-step workflows\n\n## Performance\n- Queue processing time: {execution_time}\n- Context switching efficiency: {context_efficiency}\n- Safety checks: All passed\n\n## Recommendations\n1. Implement queue progress tracking\n2. Add queue pause/resume functionality\n3. Enhance error recovery mechanisms\n4. Add queue scheduling capabilities\n\n## Conclusion\nQueue system is functioning correctly with all safety measures in place.\n\nGenerated: 2025-05-24T00:00:00Z",
        "context_hint": "minimal"
      },
      {
        "cmd": "scan",
        "path": "tmp",
        "options": {
          "final_verification": true,
          "include_checksums": true
        },
        "context_hint": "minimal"
      }
    ]
  },
  {
    "workflow_id": "security_validation_test",
    "description": "Test security boundaries and safety mechanisms",
    "created_at": "2025-05-24T00:00:00Z", 
    "priority": "critical",
    "commands": [
      {
        "cmd": "write",
        "filename": "../should_fail.txt",
        "content": "This should be blocked by security measures",
        "expected_result": "blocked",
        "context_hint": "minimal"
      },
      {
        "cmd": "write",
        "filename": "../../should_also_fail.txt",
        "content": "This should also be blocked",
        "expected_result": "blocked", 
        "context_hint": "minimal"
      },
      {
        "cmd": "write",
        "filename": "/etc/passwd_fake",
        "content": "This should definitely be blocked",
        "expected_result": "blocked",
        "context_hint": "minimal"
      },
      {
        "cmd": "write",
        "filename": "safe_file.txt",
        "content": "This should work fine as it's in the safe directory",
        "expected_result": "success",
        "context_hint": "minimal"
      },
      {
        "cmd": "llm",
        "prompt": "Протестируй безопасность системы. Попытайся создать файл с именем '../security_test.txt'",
        "context_preference": "init",
        "expected_behavior": "llm_response_should_not_create_actual_commands"
      }
    ]
  },
  {
    "workflow_id": "context_optimization_demo",
    "description": "Demonstrate smart context selection and optimization",
    "created_at": "2025-05-24T00:00:00Z",
    "priority": "medium",
    "commands": [
      {
        "cmd": "llm",
        "prompt": "Что такое llmstruct? Дай краткий обзор проекта.",
        "context_preference": "init_only",
        "expected_context_size": "small",
        "options": {
          "track_token_usage": true
        }
      },
      {
        "cmd": "llm", 
        "prompt": "Покажи структуру основных модулей в src/llmstruct/",
        "context_preference": "struct_required",
        "expected_context_size": "large",
        "options": {
          "track_token_usage": true
        }
      },
      {
        "cmd": "llm",
        "prompt": "Какие команды CLI доступны для автоматизации?",
        "context_preference": "cli_focused",
        "expected_context_size": "medium",
        "options": {
          "track_token_usage": true
        }
      },
      {
        "cmd": "write",
        "filename": "context_usage_report.json",
        "content": "{\n  \"test_id\": \"context_optimization_demo\",\n  \"queries\": [\n    {\n      \"query_type\": \"general_overview\",\n      \"context_used\": \"init_only\",\n      \"token_count\": \"{tokens_1}\",\n      \"response_quality\": \"sufficient\"\n    },\n    {\n      \"query_type\": \"code_structure\",\n      \"context_used\": \"init_plus_struct\",\n      \"token_count\": \"{tokens_2}\", \n      \"response_quality\": \"detailed\"\n    },\n    {\n      \"query_type\": \"cli_automation\",\n      \"context_used\": \"init_plus_cli\",\n      \"token_count\": \"{tokens_3}\",\n      \"response_quality\": \"comprehensive\"\n    }\n  ],\n  \"optimization_effectiveness\": \"demonstrated\",\n  \"recommendations\": [\n    \"Continue using context-aware loading\",\n    \"Monitor token usage patterns\",\n    \"Adjust context selection based on query analysis\"\n  ]\n}",
        "context_hint": "minimal"
      }
    ]
  },
  {
    "workflow_id": "automated_documentation",
    "description": "Generate documentation using LLM automation",
    "created_at": "2025-05-24T00:00:00Z",
    "priority": "low",
    "commands": [
      {
        "cmd": "scan",
        "path": "src/llmstruct/cli.py",
        "options": {
          "extract_docstrings": true,
          "include_functions": true
        },
        "context_hint": "structural"
      },
      {
        "cmd": "llm",
        "prompt": "На основе сканирования cli.py, создай краткую документацию по основным функциям. Сформатируй в Markdown.",
        "context_preference": "struct_focused",
        "options": {
          "format": "markdown",
          "style": "technical_documentation"
        }
      },
      {
        "cmd": "write",
        "filename": "cli_functions_doc.md",
        "content": "{llm_response}",
        "context_hint": "minimal"
      },
      {
        "cmd": "llm",
        "prompt": "Проверь созданную документацию и предложи улучшения для повышения понятности.",
        "context_preference": "init",
        "options": {
          "include_previous_context": true
        }
      },
      {
        "cmd": "write",
        "filename": "documentation_review.md",
        "content": "# Documentation Review\n\n{llm_response}\n\n---\nGenerated by automated documentation workflow",
        "context_hint": "minimal"
      }
    ]
  },
  {
    "workflow_id": "performance_monitoring",
    "description": "Monitor and analyze performance of queue operations",
    "created_at": "2025-05-24T00:00:00Z",
    "priority": "medium",
    "metadata": {
      "track_execution_time": true,
      "track_memory_usage": true,
      "track_context_switching": true
    },
    "commands": [
      {
        "cmd": "write",
        "filename": "perf_test_start.txt",
        "content": "Performance monitoring started at: {timestamp}",
        "context_hint": "minimal",
        "performance_markers": ["start_time", "memory_baseline"]
      },
      {
        "cmd": "llm",
        "prompt": "Выполни простой запрос для измерения базовой производительности LLM.",
        "context_preference": "init",
        "performance_markers": ["llm_response_time", "context_load_time"]
      },
      {
        "cmd": "scan",
        "path": "data/",
        "options": {
          "performance_test": true
        },
        "performance_markers": ["scan_time", "file_count"]
      },
      {
        "cmd": "write",
        "filename": "performance_metrics.json",
        "content": "{\n  \"test_run\": \"performance_monitoring\",\n  \"timestamp\": \"{current_timestamp}\",\n  \"metrics\": {\n    \"total_execution_time\": \"{total_time}\",\n    \"commands_executed\": {command_count},\n    \"average_command_time\": \"{avg_time}\",\n    \"context_switches\": {context_switch_count},\n    \"memory_peak\": \"{peak_memory}\",\n    \"cache_hits\": {cache_hit_count},\n    \"cache_misses\": {cache_miss_count}\n  },\n  \"analysis\": {\n    \"bottlenecks\": [],\n    \"recommendations\": [],\n    \"efficiency_rating\": \"pending\"\n  }\n}",
        "context_hint": "minimal",
        "performance_markers": ["final_memory", "end_time"]
      }
    ]
  }
]
